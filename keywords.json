{
    "BeanBuilder": [
        "exceptions",
        "build",
        "Create",
        "methods.",
        "**checkOverloadedMethods(T)**:",
        "T)**:",
        "Name:**",
        "load",
        "checks",
        "process.",
        "map:",
        "**Methods:**",
        "**build(Map,",
        "thrown",
        "-",
        "map,",
        "Requirements:**",
        "loads",
        "**T**",
        "Handle",
        "throws",
        "Pass",
        "3.",
        "1.",
        "4.",
        "checkOverloadedMethods",
        "ensure",
        "type.",
        "IllegalArgumentException",
        "overloaded",
        "provided",
        "providing",
        "already",
        "appropriate",
        "does.",
        "BeanBuilder.",
        "Load",
        "T.",
        "methods:",
        "(generics):",
        "returns",
        "occurs",
        "map.",
        "loaded",
        "**Attributes:**",
        "class:",
        "create",
        "type",
        "handling",
        "@param",
        "Use",
        "**Use",
        "map",
        "Case",
        "BeanBuilder:",
        "Check",
        "exceptions:",
        "instance",
        "required",
        "<T>",
        "creates",
        "summary",
        "method",
        "2.",
        "class",
        "Takes",
        "instantiated",
        "implemented",
        "**Class",
        "returned",
        "**Purpose:**",
        "Exception",
        "BeanBuilder",
        "bean",
        "private",
        "**Mapping",
        "error",
        "takes",
        "parameters,",
        "parameter",
        "bean.",
        "methods"
    ],
    "DateUtil": [
        "monthValue1,",
        "month1,",
        "systems",
        "YEAR_IN_MS",
        "year",
        "`MM/dd/yyyy`.",
        "functionality",
        "ago",
        "getDateXyearsAgoFromNow",
        "boolean",
        "@author",
        "monthValue1",
        "utilities",
        "Name:**",
        "month2,",
        "`yearsAgo(long",
        "firstMonth",
        "reporting",
        "yearsAgo1,",
        "Cases:**",
        "month1",
        "checks",
        "years)`:",
        "provides",
        "**Methods:**",
        "int",
        "objects",
        "secondMonth)`:",
        "yearsAgo",
        "object",
        "days",
        "range",
        "number",
        "date,",
        "isInMonthRange",
        "range.",
        "months",
        "`isInMonthRange(Date",
        "queries",
        "Setting",
        "*",
        "`isInMonthRange`",
        "Java",
        "`YEAR_IN_MS`:",
        "getDateXDaysAgoFromNow",
        "purposes",
        "certain",
        "cases",
        "DateUtil",
        "`setSQLMonthRange(java.sql.Date",
        "purpose",
        "constant",
        "two",
        "capture",
        "class,",
        "within",
        "representing",
        "various",
        "quarter)",
        "`getDateXDaysAgoFromNow(int",
        "`Date`",
        "provided",
        "past,",
        "specific",
        "past",
        "`java.sql.Date`",
        "milliseconds",
        "`getSQLdateXyearsAgoFromNow(int",
        "representation",
        "`days`",
        "(inclusive)",
        "well",
        "returns",
        "ago.",
        "yearsAgo2",
        "years",
        "**Attributes:**",
        "value.",
        "including",
        "attributes,",
        "given",
        "class:",
        "SQL",
        "Validating",
        "(e.g.,",
        "Provides",
        "month",
        "`years`",
        "ranges",
        "**Use",
        "specified",
        "java.sql.Date",
        "static",
        "currentlyInMonthRange",
        "uses",
        "date",
        "extra",
        "`currentlyInMonthRange(int",
        "monthValue2",
        "main",
        "setSQLMonthRange",
        "monthValue2,",
        "working",
        "format",
        "days)`:",
        "getSQLdateXDaysAgoFromNow",
        "summary",
        "collection",
        "dates,",
        "Calculating",
        "string",
        "Andy",
        "range,",
        "class",
        "`getSQLdateXDaysAgoFromNow(int",
        "yearsAgo1",
        "falls",
        "current",
        "secondMonth",
        "yearsAgo2)`:",
        "methods,",
        "**Class",
        "**Purpose:**",
        "business",
        "setting",
        "useful.",
        "aims",
        "calculating",
        "use",
        "dates",
        "potential",
        "`getDateXyearsAgoFromNow(int",
        "logic",
        "sets",
        "checking",
        "might",
        "firstMonth,",
        "methods",
        "month2",
        "getSQLdateXyearsAgoFromNow"
    ],
    "DBUtil": [
        "connection.",
        "scenarios",
        "thrown,",
        "`closeConnection(Connection",
        "@author",
        "column",
        "provides",
        "query",
        "**Methods:**",
        "conn)",
        "DBUtil",
        "utilties",
        "generated",
        "instance.",
        "ps)`:",
        "3.",
        "it's",
        "throws",
        "1.",
        "require",
        "statement",
        "obtain",
        "result.",
        "close",
        "ID",
        "conn,",
        "database.",
        "connection,",
        "occur.",
        "function",
        "`getLastInsert(Connection",
        "attempts",
        "LAST_INSERT_ID()",
        "SELECT",
        "server",
        "auto-increment",
        "development",
        "SQLException`:",
        "production",
        "prepared",
        "returns",
        "way,",
        "**Attributes:**",
        "class:",
        "MySQL",
        "interactions",
        "Checks",
        "handling",
        "Provides",
        "ps",
        "SQLExceptions",
        "associated",
        "getLastInsert",
        "specified",
        "static",
        "SQLException",
        "canObtainProductionInstance",
        "PreparedStatement",
        "connecting",
        "summary",
        "possible",
        "proper",
        "`canObtainProductionInstance()`:",
        "2.",
        "may",
        "Andy",
        "last",
        "Closes",
        "class",
        "(fields).",
        "Returns",
        "databases,",
        "**Purpose:**",
        "using",
        "executes",
        "connection",
        "used",
        "necessary,",
        "false.",
        "attributes",
        "programs",
        "database",
        "conn",
        "specifically",
        "closeConnection",
        "methods",
        "interacting"
    ],
    "EmailUtil": [
        "DAO",
        "functionality",
        "inserting",
        "tracking",
        "system,",
        "users.",
        "@author",
        "stuff",
        "would",
        "email",
        "**Methods:**",
        "want",
        "Requirements:**",
        "Therefore,",
        "3.",
        "1.",
        "require",
        "verification",
        "`DAOFactory`",
        "requirement:",
        "*",
        "case",
        "Testing",
        "emails.",
        "records",
        "reset",
        "messages,",
        "users,",
        "sendEmail",
        "cases",
        "emails",
        "code",
        "database.",
        "inserts",
        "spammers",
        "email)`:",
        "messages:",
        "separate",
        "fake",
        "account",
        "object.",
        "instead",
        "Sending",
        "production",
        "reference",
        "However,",
        "Since",
        "326,",
        "receipts",
        "train",
        "**Attributes:**",
        "given",
        "defers",
        "create",
        "test",
        "notifications",
        "Logging",
        "replace",
        "**Use",
        "map",
        "put",
        "sending",
        "Case",
        "don't",
        "scenarios:",
        "following",
        "email;",
        "actually",
        "system.",
        "`factory`:",
        "send",
        "summary",
        "emails,",
        "sends",
        "method",
        "2.",
        "Andy",
        "actual",
        "instead,",
        "class",
        "Note",
        "emails;",
        "`EmailUtil`",
        "links",
        "functionality:",
        "mechanism.",
        "password",
        "**Class",
        "using",
        "log",
        "notifications.",
        "administrators.",
        "javax.mail",
        "`sendEmail(Email",
        "`DAOFactory`.",
        "suitable",
        "Sends",
        "use",
        "users:",
        "used",
        "without",
        "database",
        "Purpose:**",
        "sending,",
        "object,",
        "record",
        "factory"
    ],
    "HtmlEncoder": [
        "escape",
        "characters",
        "boolean",
        "are:",
        "@author",
        "Name:**",
        "otherwise,",
        "checks",
        "data,",
        "could",
        "**Methods:**",
        "`&lt;`",
        "`\\n`",
        "validation.",
        "`<br",
        "Requirements:**",
        "true.",
        "simply",
        "replaced",
        "logging",
        "protect",
        "(i.e.,",
        "code.",
        "*",
        "URLs",
        "HTML",
        "Java",
        "HtmlEncoder",
        "\"http://\").",
        "certain",
        "value",
        "encode",
        "on-site",
        "does,",
        "input",
        "data",
        "/>`.",
        "perform",
        "false;",
        "None",
        "returns",
        "validate",
        "where:",
        "**Attributes:**",
        "`<`",
        "given",
        "class:",
        "interpreted",
        "resulting",
        "**Use",
        "`>`",
        "Case",
        "URL",
        "static",
        "string.",
        "`&gt;`",
        "example,",
        "key",
        "contains",
        "contain",
        "system.",
        "**encode(String",
        "summary",
        "situations",
        "method",
        "string",
        "Andy",
        "+",
        "**URLOnSite(String",
        "whether",
        "class",
        "user",
        "null,",
        "need",
        "indicating",
        "web",
        "versions,",
        "not.",
        "input,",
        "**Class",
        "returned",
        "**Purpose:**",
        "input):**",
        "application",
        "analytics",
        "Escapes",
        "used",
        "takes",
        "\"http://\".",
        "sanitize",
        "is.",
        "checking",
        "replaces",
        "escaped",
        "URLOnSite"
    ],
    "Localization": [
        "file,",
        "iTrust.",
        "States",
        "Name:**",
        "load",
        "demand,",
        "provides",
        "multilingual",
        "could",
        "**Methods:**",
        "getCurrentLocale",
        "simple",
        "manage",
        "Mapping:**",
        "currentInstance",
        "*",
        "Java",
        "multithreading.",
        "Provide",
        "iTrust,",
        "Could",
        "Allow",
        "(US)",
        "application.",
        "provided",
        "customized,",
        "especially",
        "(US).",
        "already",
        "returns",
        "Overall,",
        "locale.",
        "**Attributes:**",
        "made",
        "country",
        "class:",
        "useful",
        "allows",
        "Requirements",
        "Provides",
        "access",
        "created",
        "**Use",
        "Case",
        "single",
        "class.",
        "currentLocale",
        "instance",
        "initialized",
        "exists.",
        "future",
        "possibly",
        "system.",
        "summary",
        "method",
        "manipulate",
        "accessing",
        "file.",
        "English",
        "thread-safe",
        "loading",
        "class",
        "United",
        "to:",
        "supports",
        "current",
        "Localization",
        "default.",
        "Returns",
        "(en)",
        "implementations,",
        "`instance()`:",
        "**Class",
        "returned",
        "**Purpose:**",
        "`currentLocale`:",
        "way",
        "singleton",
        "application",
        "default",
        "`getCurrentLocale()`:",
        "customization",
        "used",
        "language",
        "iTrust",
        "locale",
        "Set"
    ],
    "Messages": [
        "+",
        "getString",
        "Java",
        "`BUNDLE_NAME`",
        "locale.",
        "`getString(String",
        "**Attributes:**",
        "message",
        "class",
        "purposes",
        "ResourceBundle,",
        "`Messages`",
        "given",
        "key.",
        "Summary:**",
        "(i18n)",
        "software",
        "retrieving",
        "based",
        "constant",
        "current",
        "RESOURCE_BUNDLE",
        "'!'",
        "localized",
        "`RESOURCE_BUNDLE`",
        "`iTrust`",
        "**Class",
        "retrieves",
        "utility",
        "name",
        "mechanism",
        "static",
        "representing",
        "function",
        "**Methods:**",
        "provided",
        "key",
        "default",
        "`Messages`:",
        "used",
        "`RESOURCE_BUNDLE`:",
        "key)`:",
        "object",
        "ResourceBundle",
        "initialized",
        "internationalization",
        "BUNDLE_NAME",
        "format",
        "system.",
        "provide",
        "messages",
        "Class",
        "final",
        "summary",
        "primary",
        "found",
        "method",
        "string",
        "returns",
        "`BUNDLE_NAME`:",
        "*",
        "file."
    ],
    "ParameterUtil": [
        "ParameterUtil",
        "Java",
        "pair,",
        "string-value",
        "**Attributes:**",
        "class",
        "`convertMap(Map",
        "container",
        "adds",
        "processing",
        "HTTP",
        "JSP",
        "given",
        "HashMap.",
        "hashmap",
        "class:",
        "iterates",
        "null,",
        "convert",
        "easier",
        "parameters",
        "@author",
        "type-checked",
        "converted",
        "value",
        "facilitate",
        "Provides",
        "Map",
        "Name:**",
        "**Class",
        "params",
        "key-set",
        "returned",
        "utility",
        "retrieval.",
        "**Purpose:**",
        "**Use",
        "null",
        "Case",
        "provides",
        "input",
        "application,",
        "**Methods:**",
        "data",
        "example,",
        "Map,",
        "situation",
        "used",
        "container.",
        "HashMap",
        "convertMap",
        "key-value",
        "object",
        "new",
        "takes",
        "Requirements:**",
        "needs",
        "pair",
        "summary",
        "converts",
        "\"Map\"",
        "method",
        "None",
        "sets",
        "HashMap,",
        "specifically",
        "returns",
        "request",
        "web-based",
        "Andy",
        "params)`:",
        "*"
    ],
    "RandomPassword": [
        "10",
        "**Attributes:**",
        "`RandomPassword`",
        "characters",
        "class",
        "letters,",
        "class:",
        "@author",
        "**Class",
        "generates",
        "using",
        "random",
        "static",
        "lowercase",
        "generate",
        "**Methods:**",
        "`Random`",
        "numbers.",
        "generated",
        "instance.",
        "used",
        "instance",
        "consisting",
        "characters,",
        "Generates",
        "`getRandomPassword()`:",
        "Purpose:**",
        "summary",
        "characters.",
        "getRandomPassword",
        "`rand`:",
        "string",
        "returns",
        "Andy",
        "rand",
        "*"
    ],
    "AddApptAction": [
        "responsible",
        "ApptBeanValidator",
        "Appointment\"",
        "retrieve",
        "DAO",
        "MID",
        "functionality",
        "Based",
        "logged",
        "Access",
        "quickly",
        "Summary:**",
        "fulfill",
        "system",
        "`loggedInMID`:",
        "understand",
        "transactions.",
        "apptDAO",
        "name",
        "checks",
        "provides",
        "**Methods:**",
        "`getName(long",
        "scheduled",
        "scheduling",
        "Requirements:**",
        "valid,",
        "passed.",
        "Handle",
        "needs",
        "3.",
        "1.",
        "logging",
        "`addAppt(ApptBean",
        "requirement:",
        "*",
        "case",
        "user's",
        "adding",
        "@throws",
        "patient",
        "Java",
        "\"Schedule",
        "ID",
        "managing",
        "validator",
        "validating",
        "code",
        "in.",
        "two",
        "purpose",
        "beans.",
        "summary,",
        "appt)`:",
        "@return",
        "class,",
        "provided",
        "specific",
        "User",
        "already",
        "`validator`:",
        "patientDAO",
        "Code",
        "appt",
        "developers",
        "Gets",
        "validate",
        "(Data",
        "logs",
        "schedule",
        "details",
        "respective",
        "**Attributes:**",
        "given",
        "based",
        "handling",
        "@param",
        "method.",
        "iTrustException",
        "mid)`",
        "Use",
        "transaction.",
        "appointment",
        "personnel)",
        "**Use",
        "map",
        "personnel",
        "schedules",
        "process",
        "personnel.",
        "Case",
        "appt)`",
        "functionalities:",
        "personnelDAO",
        "currently",
        "date",
        "\"Retrieve",
        "Object)",
        "transDAO",
        "new",
        "patients.",
        "instance",
        "scenarios:",
        "`apptDAO`:",
        "valid.",
        "following",
        "main",
        "system.",
        "summary",
        "administrator",
        "method",
        "2.",
        "appointment.",
        "loggedInMID",
        "mid)`:",
        "calls",
        "class",
        "requirements:",
        "transDAO.",
        "user",
        "name.",
        "appointments.",
        "scheduling.",
        "getName",
        "validates",
        "Returns",
        "`patientDAO`:",
        "(patient",
        "**Class",
        "**Purpose:**",
        "`transDAO`:",
        "using",
        "MID.",
        "log",
        "Name\"",
        "mid",
        "users's",
        "bean",
        "requirements.",
        "use",
        "`personnelDAO`:",
        "Adds",
        "**Mapping",
        "used",
        "calling",
        "wants",
        "AddApptAction",
        "transactions",
        "addAppt",
        "related",
        "transaction"
    ],
    "AddERespAction": [
        "responsible",
        "Add",
        "MID",
        "adds",
        "logged",
        "use-case",
        "@author",
        "`loggedInMID`:",
        "methods.",
        "correctly",
        "member.",
        "{@link",
        "Emergency",
        "creation",
        "provides",
        "ER",
        "**Methods:**",
        "authDAO",
        "generated",
        "information.",
        "`add(PersonnelBean",
        "page",
        "TransactionDAO,",
        "HCP/UAP,",
        "event",
        "p)`:",
        "Update",
        "transaction",
        "Meneely",
        "Mapping:",
        "*",
        "concise",
        "adding",
        "`authDAO`:",
        "them,",
        "code",
        "AddHCPAction",
        "Log",
        "account",
        "Personnel",
        "Copied",
        "AddERespAction",
        "`AddERaspAction(DAOFactory",
        "factory,",
        "member's",
        "logs",
        "add",
        "them.",
        "**Attributes:**",
        "AuthDAO,",
        "given",
        "class:",
        "create",
        "**Use-case",
        "ensuring",
        "random",
        "personnel",
        "map",
        "AddOfficeVisitAction}",
        "password.",
        "personnelDAO",
        "currently",
        "overview",
        "AddERaspAction",
        "member,",
        "transDAO",
        "new",
        "instance",
        "long",
        "Used",
        "empty",
        "creates",
        "similar",
        "summary",
        "loggedInMID)`:",
        "event.",
        "Andy",
        "requirements:**",
        "loggedInMID",
        "person",
        "+",
        "(addPersonnel.jsp).",
        "authentication",
        "class",
        "randomly",
        "constructor",
        "efficiently.",
        "p",
        "password,",
        "AddPatientAction}",
        "(ER)",
        "indicating",
        "password",
        "**Purpose:**",
        "`transDAO`:",
        "log",
        "requirement,",
        "`personnelDAO`:",
        "used",
        "attributes",
        "database",
        "Response",
        "sets",
        "defaults",
        "PersonnelDAO,",
        "interacting"
    ],
    "AddHCPAction": [
        "Add",
        "`PersonnelDAO`",
        "adds",
        "system,",
        "@author",
        "system",
        "`loggedInMID`:",
        "{@link",
        "Returning",
        "**Methods:**",
        "authDAO",
        "`add(PersonnelBean",
        "page",
        "3.",
        "HCP/UAP,",
        "1.",
        "4.",
        "logging",
        "p)`:",
        "Meneely",
        "6.",
        "Setting",
        "*",
        "`authDAO`:",
        "creating",
        "ID",
        "by:",
        "`transDAO`",
        "Creating",
        "HCP",
        "5.",
        "data",
        "`personnelDAO`",
        "provided",
        "account",
        "Personnel",
        "factory,",
        "add",
        "them.",
        "**Attributes:**",
        "information",
        "class:",
        "(HCP)",
        "authenticating",
        "Validating",
        "`AddHCPAction`",
        "`authDAO`",
        "Logging",
        "Healthcare",
        "transaction.",
        "random",
        "personnel",
        "AddOfficeVisitAction}",
        "password.",
        "personnelDAO",
        "currently",
        "`AuthDAO`",
        "transDAO",
        "new",
        "instance",
        "long",
        "Used",
        "empty",
        "creates",
        "similar",
        "summary",
        "Professional",
        "loggedInMID)`:",
        "2.",
        "Andy",
        "loggedInMID",
        "(addPersonnel.jsp).",
        "class",
        "constructor",
        "users",
        "p",
        "logged-in",
        "user",
        "`AddPersonnelValidator`",
        "AddPatientAction}",
        "password",
        "**Purpose:**",
        "`transDAO`:",
        "using",
        "bean",
        "`TransactionDAO`",
        "`personnelDAO`:",
        "default",
        "used",
        "attributes",
        "Editing",
        "transactions",
        "`AddHCPAction(DAOFactory",
        "sets",
        "transaction",
        "interacting"
    ],
    "AddOfficeVisitAction": [
        "purposes)",
        "Add",
        "visit",
        "full",
        "scenarios",
        "patient's",
        "old",
        "adds",
        "MID",
        "logged",
        "@author",
        "`loggedInMID`:",
        "{@link",
        "OfficeVisitDAO",
        "edit",
        "name",
        "provides",
        "Retrieve",
        "**Methods:**",
        "`addEmptyOfficeVisit(long",
        "want",
        "visits",
        "ovDAO",
        "TransactionDAO",
        "Requirements:**",
        "needs",
        "page",
        "logging",
        "transaction",
        "Meneely",
        "*",
        "provider",
        "case",
        "patient",
        "PatientBaseAction)",
        "`ovDAO`:",
        "ID",
        "addEmptyOfficeVisit",
        "visit.",
        "getUserName",
        "visit,",
        "`getAllOfficeVisits()`:",
        "**Class:**",
        "Document",
        "patient.",
        "(inherited",
        "factory,",
        "existing",
        "returns",
        "logs",
        "add",
        "**Attributes:**",
        "summary:",
        "given",
        "healthcare",
        "`AddOfficeVisitAction(DAOFactory",
        "office",
        "list",
        "**Use",
        "Case",
        "DAOFactory",
        "`getUserName()`:",
        "transDAO",
        "instance",
        "new",
        "Used",
        "empty",
        "`factory`:",
        "similar",
        "loggedInMID)`:",
        "Andy",
        "loggedInMID",
        "Office",
        "class",
        "constructor",
        "`pid`:",
        "to:",
        "AddPatientAction}",
        "view",
        "String",
        "(documentOfficeVisit.jsp).",
        "**Purpose:**",
        "`transDAO`:",
        "document",
        "visits.",
        "used",
        "(used",
        "AddOfficeVisitAction",
        "particular",
        "provide",
        "getAllOfficeVisits",
        "pidString)`:",
        "sets",
        "defaults",
        "factory",
        "Visit",
        "AddPatientAction"
    ],
    "AddPatientAction": [
        "Add",
        "DAO",
        "MID",
        "adds",
        "system,",
        "@author",
        "`loggedInMID`:",
        "correctly",
        "{@link",
        "provides",
        "**Methods:**",
        "authDAO",
        "object",
        "Requirements:**",
        "page",
        "logging",
        "p)`:",
        "Meneely",
        "*",
        "`AddOfficeVisitAction`",
        "case",
        "patient",
        "adding",
        "initializes",
        "Java",
        "`authDAO`:",
        "ensure",
        "factory",
        "(addPatient.jsp).",
        "database.",
        "`AddPatientAction`",
        "`PatientDAO`",
        "Patient",
        "`AddPatientAction(DAOFactory",
        "patient.",
        "factory,",
        "patientDAO",
        "reference",
        "validate",
        "Overall,",
        "logs",
        "add",
        "requirement",
        "convenient",
        "**Attributes:**",
        "class:",
        "create",
        "addPatient",
        "transaction.",
        "**Use",
        "random",
        "map",
        "Case",
        "AddOfficeVisitAction}",
        "generate",
        "`addPatient(PatientBean",
        "class.",
        "`AuthDAO`",
        "transDAO",
        "new",
        "instance",
        "long",
        "Used",
        "empty",
        "creates",
        "similar",
        "summary",
        "loggedInMID)`:",
        "method",
        "added",
        "Andy",
        "loggedInMID",
        "involves",
        "class",
        "constructor",
        "p",
        "logged-in",
        "user",
        "password,",
        "Returns",
        "password",
        "`patientDAO`:",
        "**Class",
        "generates",
        "`transDAO`:",
        "log",
        "way",
        "`TransactionDAO`",
        "use",
        "used",
        "Purpose:**",
        "stored",
        "patient,",
        "generating"
    ],
    "AddPHAAction": [
        "Add",
        "`PersonnelDAO`",
        "adds",
        "logged",
        "system,",
        "`loggedInMID`:",
        "Name:**",
        "{@link",
        "ID.",
        "**Methods:**",
        "FormValidationException,",
        "authDAO",
        "`PersonnelBean`",
        "`add(PersonnelBean",
        "Health",
        "needs",
        "page",
        "3.",
        "throws",
        "1.",
        "4.",
        "`AddPHAAction(DAOFactory",
        "case",
        "user's",
        "initializes",
        "Java",
        "`authDAO`:",
        "transaction,",
        "ID",
        "in.",
        "database.",
        "iTrustException`:",
        "class,",
        "input",
        "AddPHAAction",
        "provided",
        "object.",
        "Personnel",
        "factory,",
        "returns",
        "PHA",
        "logs",
        "add",
        "them.",
        "**Attributes:**",
        "information",
        "class:",
        "PHA.",
        "dependencies",
        "bean,",
        "random",
        "personnel",
        "AddOfficeVisitAction}",
        "personnelDAO",
        "currently",
        "`AuthDAO`",
        "transDAO",
        "new",
        "instance",
        "long",
        "Used",
        "empty",
        "creates",
        "required",
        "system.",
        "similar",
        "summary",
        "loggedInMID)`:",
        "method",
        "2.",
        "Associate)",
        "added",
        "loggedInMID",
        "(addPersonnel.jsp).",
        "p)",
        "authentication",
        "class",
        "constructor",
        "p",
        "logged-in",
        "user",
        "password,",
        "AddPatientAction}",
        "validates",
        "password",
        "**Class",
        "**Purpose:**",
        "generates",
        "`transDAO`:",
        "log",
        "(Personnel",
        "`TransactionDAO`",
        "`personnelDAO`:",
        "use",
        "used",
        "record,",
        "interact",
        "transactions",
        "iTrust",
        "PHA,"
    ],
    "AddRemoteMonitoringDataAction": [
        "patient's",
        "retrieve",
        "MID",
        "`getPatientName(long",
        "recording",
        "signs.",
        "glucoseLevel)`:",
        "`loggedInMID`:",
        "pressure.",
        "data.",
        "transactions.",
        "multi-parameter",
        "diastolicBloodPressure",
        "updates.",
        "get",
        "name",
        "pressures,",
        "provides",
        "addition",
        "data,",
        "patientMID",
        "handles",
        "**Methods:**",
        "int",
        "authDAO",
        "blood",
        "pid",
        "`patientMID`:",
        "recorded.",
        "Requirements:**",
        "also",
        "diastolicBloodPressure,",
        "diastolic",
        "glucose",
        "*",
        "patient",
        "adding",
        "`authDAO`:",
        "level,",
        "validator",
        "validating",
        "database,",
        "systolicBloodPressure,",
        "database.",
        "different",
        "roles.",
        "beans.",
        "level.",
        "monitoring",
        "remote",
        "data",
        "`RemoteMonitoringDAO`",
        "vital",
        "`validator`:",
        "types",
        "store",
        "diastolicBloodPressure)`:",
        "pid)`:",
        "add",
        "**Attributes:**",
        "including",
        "given",
        "systolicBloodPressure",
        "class:",
        "glucoseLevel",
        "getPatientName",
        "**Use",
        "Case",
        "Handles",
        "systolic",
        "`AuthDAO`",
        "transDAO",
        "instance",
        "track",
        "`addRemoteMonitoringData(int",
        "summary",
        "`RemoteMonitoringDataBeanValidator`",
        "loggedInMID",
        "person",
        "class",
        "rmDAO",
        "user",
        "roles",
        "Returns",
        "`AddRemoteMonitoringDataAction`",
        "levels,",
        "pressure,",
        "**Purpose:**",
        "`transDAO`:",
        "log",
        "MID.",
        "names.",
        "`rmDAO`:",
        "pressure",
        "way",
        "`TransactionDAO`",
        "updates",
        "addRemoteMonitoringData",
        "Adds",
        "used",
        "single-parameter",
        "database",
        "transactions",
        "methods"
    ],
    "AddUAPAction": [
        "Add",
        "DAO",
        "MID",
        "adds",
        "functionality",
        "logged",
        "@author",
        "system",
        "`loggedInMID`:",
        "Transaction",
        "data.",
        "transactions.",
        "{@link",
        "**Methods:**",
        "FormValidationException,",
        "authDAO",
        "objects",
        "-",
        "(UAP)",
        "object",
        "`add(PersonnelBean",
        "Requirements:**",
        "page",
        "3.",
        "throws",
        "HCP/UAP,",
        "1.",
        "4.",
        "logging",
        "event",
        "Meneely",
        "*",
        "case",
        "adding",
        "`authDAO`:",
        "creating",
        "managing",
        "Account",
        "in.",
        "iTrustException`:",
        "satisfies",
        "class,",
        "mapped",
        "input",
        "data",
        "Personnel",
        "providing",
        "User",
        "factory,",
        "(Use",
        "returns",
        "validate",
        "logs",
        "add",
        "requirement",
        "`AddUAPAction`",
        "them.",
        "**Attributes:**",
        "including",
        "class:",
        "create",
        "Requirements",
        "**Use",
        "random",
        "personnel",
        "Case",
        "AddOfficeVisitAction}",
        "password.",
        "case:",
        "UCRA",
        "personnelDAO",
        "authentication.",
        "currently",
        "Analysis)",
        "transDAO",
        "new",
        "long",
        "Used",
        "empty",
        "creates",
        "following",
        "system.",
        "similar",
        "summary",
        "loggedInMID)`:",
        "administrator",
        "method",
        "2.",
        "event.",
        "Andy",
        "loggedInMID",
        "UAP",
        "person",
        "Provider",
        "(addPersonnel.jsp).",
        "p)",
        "class",
        "UAP:",
        "constructor",
        "requirements:",
        "p",
        "logged-in",
        "`AddPersonnelValidator`,",
        "user",
        "password,",
        "AddPatientAction}",
        "`AddUAPAction(DAOFactory",
        "validates",
        "password",
        "**Purpose:**",
        "Auth",
        "`transDAO`:",
        "MID.",
        "using",
        "log",
        "`personnelDAO`:",
        "use",
        "used",
        "wants",
        "UAP.",
        "iTrust",
        "sets",
        "defaults"
    ],
    "ChangeSessionTimeoutAction": [
        "0",
        "`AccessDAO`",
        "retrieve",
        "`getSessionTimeout()`:",
        "@author",
        "retrieves",
        "get",
        "Retrieve",
        "changeSessionTimeout",
        "**Methods:**",
        "less",
        "object",
        "change",
        "Requirements:**",
        "number",
        "also",
        "expected",
        "throws",
        "manage",
        "1.",
        "Meneely",
        "`DAOFactory`",
        "`FormValidationException`",
        "*",
        "case",
        "Java",
        "string,",
        "ensure",
        "value",
        "database.",
        "30",
        "greater",
        "minutes",
        "minuteString)`:",
        "`accessDAO`:",
        "display",
        "input",
        "providing",
        "issue",
        "Change",
        "sessionTimeout.jsp.",
        "**Attributes:**",
        "session",
        "based",
        "allows",
        "accessDAO",
        "timeout,",
        "`changeSessionTimeout(String",
        "(e.g.",
        "**Use",
        "factory)`:",
        "Case",
        "class.",
        "`ChangeSessionTimeoutAction`:",
        "uses",
        "timeout",
        "minutes)",
        "new",
        "instance",
        "`AccessDAO`.",
        "`ChangeSessionTimeoutAction`",
        "Used",
        "settings",
        "interface",
        "following",
        "implement",
        "system.",
        "summary",
        "method",
        "operation.",
        "`ChangeSessionTimeoutAction(DAOFactory",
        "Andy",
        "Validate",
        "valid",
        "Note",
        "class",
        "constructor",
        "users",
        "requirements:",
        "user",
        "current",
        "web",
        "values",
        "**Class",
        "minuteString",
        "changes",
        "application",
        "handle",
        "gets",
        "use",
        "default",
        "timeout.",
        "used",
        "0.",
        "takes",
        "getSessionTimeout",
        "interact",
        "sessions.",
        "parameter",
        "database",
        "`DBException`",
        "provide",
        "Purpose:**",
        "reflected",
        "sets"
    ],
    "ChronicDiseaseRiskAction": [
        "responsible",
        "full",
        "patient's",
        "`iTrustException`",
        "@author",
        "`loggedInMID`:",
        "{@link",
        "get",
        "name",
        "risk.",
        "provides",
        "**Methods:**",
        "passes",
        "authDAO",
        "disease",
        "diseaseMediator",
        "`getDiseasesAtRisk()`",
        "throws",
        "logging",
        "Meneely",
        "RiskChecker}.",
        "*",
        "patient",
        "`authDAO`:",
        "getPatientID",
        "`RiskChecker`.",
        "ID",
        "health",
        "getUserName",
        "various",
        "chronicDiseaseRisks.jsp.",
        "chronic",
        "patient.",
        "used.",
        "name,",
        "returns",
        "logs",
        "requirement",
        "**Attributes:**",
        "ChronicDiseaseMediator},",
        "class:",
        "`getDiseasesAtRisk()`:",
        "records.",
        "based",
        "for.",
        "**Use-case",
        "list",
        "`DBException`.",
        "`getUserName()`:",
        "`AuthDAO`",
        "transDAO",
        "risk",
        "instance",
        "Used",
        "summary",
        "method",
        "mapping:**",
        "Andy",
        "loggedInMID",
        "authentication",
        "class",
        "logged-in",
        "`pid`:",
        "user",
        "**Purpose:**",
        "`transDAO`:",
        "`ChronicDiseaseRiskAction`",
        "risks",
        "identify",
        "`TransactionDAO`",
        "records,",
        "`getPatientID()`:",
        "checked",
        "used",
        "`ChronicDiseaseMediator`",
        "calling",
        "Passes",
        "ID,",
        "`DBException`",
        "transactions",
        "logic",
        "`diseaseMediator`:",
        "subclasses",
        "patient,",
        "risk,",
        "identifying",
        "transaction",
        "methods",
        "getDiseasesAtRisk"
    ],
    "DeclareHCPAction": [
        "MID",
        "functionality",
        "@author",
        "`loggedInMID`:",
        "editHCPs.jsp",
        "ITrust",
        "provides",
        "**Methods:**",
        "`DeclareHCPAction`",
        "authDAO",
        "`declareHCP(String",
        "page",
        "manage",
        "logging",
        "Meneely",
        "HCP's",
        "*",
        "patient",
        "`authDAO`:",
        "input)`:",
        "declared",
        "ID",
        "getDeclaredHCPS",
        "accordingly.",
        "`PatientDAO`",
        "mechanism",
        "HCP",
        "editHCPs.jsp.",
        "input",
        "undeclareHCP",
        "fetching",
        "(HCPs)",
        "patientDAO",
        "`getDeclaredHCPS()`:",
        "ensures",
        "logs",
        "designated",
        "**Attributes:**",
        "information",
        "class:",
        "hcpStr)`:",
        "healthcare",
        "authenticating",
        "declared,",
        "list",
        "und",
        "declareHCP",
        "`undeclareHCP(String",
        "currently",
        "crucial",
        "`AuthDAO`",
        "transDAO",
        "instance",
        "Used",
        "system.",
        "declares",
        "summary",
        "possible",
        "Andy",
        "loggedInMID",
        "HCPs,",
        "hcpStr",
        "valid",
        "class",
        "users",
        "declare",
        "logged-in",
        "\"designated\"",
        "DeclareHCPAction`",
        "current",
        "patients",
        "`patientDAO`:",
        "**Purpose:**",
        "`transDAO`:",
        "`",
        "HCPs",
        "`TransactionDAO`",
        "used",
        "Retrieves",
        "providers",
        "transactions",
        "patient,",
        "Validates",
        "\"designated\","
    ],
    "DrugInteractionAction": [
        "`tranDAO`:",
        "components:",
        "retrieve",
        "DAOs",
        "`loggedInMID`:",
        "deleteInteraction",
        "report,",
        "drugs",
        "retrieves",
        "recorded",
        "return",
        "get",
        "edit",
        "Cases:**",
        "reporting",
        "methods",
        "provides",
        "could",
        "**Methods:**",
        "`DrugInteractionDAO`,",
        "`DrugInteractionDAO`:",
        "reports",
        "`DrugInteractionBean`",
        "`DAOFactory`:",
        "objects,",
        "manage",
        "situations:",
        "*",
        "`TransactionDAO`,",
        "`deleteInteraction`:",
        "EditDrugInteraction.jsp",
        "ID",
        "validator",
        "code",
        "two",
        "`DrugInteractionValidator`:",
        "representing",
        "successfully\"",
        "specific",
        "added\")",
        "`validator`:",
        "description",
        "report",
        "**Dependencies:**",
        "operation",
        "validate",
        "Types:**",
        "delete",
        "**Attributes:**",
        "including",
        "information",
        "given",
        "class:",
        "`DrugInteractionValidator`,",
        "(e.g.,",
        "interactions",
        "previously",
        "`TransactionDAO`:",
        "deletion",
        "depends",
        "deleted",
        "drugDAO",
        "list",
        "**Use",
        "\"Interaction",
        "generate",
        "reportInteraction",
        "**Return",
        "`DrugInteractionAction`",
        "instance",
        "new",
        "Used",
        "`getInteractions`:",
        "following",
        "`drugDAO`:",
        "system.",
        "summary",
        "deletes",
        "string",
        "loggedInMID",
        "class",
        "drugs,",
        "medical",
        "logged-in",
        "interaction",
        "`reportInteraction`:",
        "indicating",
        "interactions.",
        "drug",
        "**Class",
        "reported",
        "log",
        "drugCode",
        "used",
        "result",
        "tranDAO",
        "interact",
        "database",
        "wants",
        "values:",
        "transactions",
        "Purpose:**",
        "professional",
        "deleted\")",
        "iTrust",
        "firstDrug",
        "secondDrug",
        "getInteractions",
        "delete,",
        "interacting"
    ],
    "EditApptTypeAction": [
        "responsible",
        "retrieve",
        "DAO",
        "adds",
        "adding,",
        "system,",
        "retrieving",
        "`loggedInMID`:",
        "`ApptTypeDAO`",
        "retrieves",
        "name",
        "provides",
        "**Methods:**",
        "editApptType",
        "information.",
        "getApptTypes",
        "duration",
        "allowing",
        "apptTypeDAO",
        "manage",
        "logging",
        "editing,",
        "`DAOFactory`",
        "durations.",
        "instances",
        "`getDurationByType(String)`:",
        "*",
        "creating",
        "managing",
        "ID",
        "validator",
        "validating",
        "representing",
        "`EditApptTypeAction`",
        "`getApptTypes()`:",
        "types",
        "`validator`:",
        "existing",
        "professionals",
        "edit,",
        "logs",
        "`apptTypeDAO`:",
        "getDurationByType",
        "**Attributes:**",
        "given",
        "beans",
        "class:",
        "healthcare",
        "type",
        "appointment",
        "list",
        "transDAO",
        "integer",
        "instance",
        "new",
        "long",
        "`editApptType(ApptTypeBean)`:",
        "system.",
        "`factory`:",
        "summary",
        "loggedInMID",
        "`addApptType(ApptTypeBean)`:",
        "add,",
        "class",
        "medical",
        "logged-in",
        "apptType",
        "edits",
        "**Class",
        "`transDAO`:",
        "`TransactionDAO`",
        "used",
        "retrieving,",
        "database",
        "transactions",
        "Purpose:**",
        "professional",
        "`ApptTypeBeanValidator`",
        "addApptType",
        "transaction",
        "methods",
        "interacting"
    ],
    "EditHealthHistoryAction": [
        "responsible",
        "Add",
        "`transferForm()`",
        "follows:",
        "Based",
        "`authDAO`)",
        "DAOs",
        "form",
        "`editBasicHealth.jsp`",
        "transactions:",
        "Here's",
        "Summary:**",
        "@author",
        "AuthDAO",
        "`loggedInMID`:",
        "forms:",
        "`addHealthRecord()`",
        "Name:**",
        "Edit",
        "name",
        "getAllHealthRecords",
        "`hrDAO`:",
        "superclass)",
        "**Methods:**",
        "authDAO",
        "generated",
        "pid",
        "`HealthRecord`",
        "`HealthRecordFormValidator`",
        "object",
        "hr",
        "TransactionDAO",
        "Requirements:**",
        "`getPatientName()`:",
        "`EditHealthHistoryAction`",
        "page",
        "logging",
        "*",
        "case",
        "patient",
        "Java",
        "`authDAO`:",
        "records",
        "managing",
        "ID",
        "validator",
        "validating",
        "Transfers",
        "authorizing",
        "actions",
        "health",
        "class,",
        "`hrDAO`,",
        "mapped",
        "HealthRecordsDAO",
        "purpose,",
        "provided",
        "Log",
        "`transferForm(pid,",
        "`validator`:",
        "Edits",
        "patient.",
        "(inherited",
        "action",
        "logs",
        "add",
        "**Attributes:**",
        "summary:",
        "attributes,",
        "information",
        "given",
        "patient:",
        "records.",
        "allows",
        "Use",
        "getPatientName",
        "list",
        "**Use",
        "Case",
        "`getAllHealthRecords()`",
        "editing",
        "requirements",
        "class.",
        "transDAO",
        "instance",
        "transferForm",
        "edited",
        "summary",
        "method",
        "editBasicHealth.jsp",
        "form)`:",
        "records:",
        "loggedInMID",
        "I've",
        "hrDAO",
        "`addHealthRecord(pid,",
        "+",
        "Validate",
        "authentication",
        "class",
        "users",
        "`pid`:",
        "to:",
        "user",
        "view",
        "forms",
        "patients",
        "Returns",
        "**Class",
        "hr)`:",
        "**Purpose:**",
        "`transDAO`:",
        "addHealthRecord",
        "Adds",
        "**Mapping",
        "used",
        "attributes",
        "history",
        "interact",
        "(`transDAO`,",
        "laurenhayward",
        "transactions",
        "encapsulates",
        "patient,",
        "`getAllHealthRecords(pid)`:",
        "record",
        "transaction",
        "methods"
    ],
    "EditMonitoringListAction": [
        "full",
        "patient's",
        "retrieve",
        "`iTrustException`",
        "MID",
        "adds",
        "logged",
        "patientMID)`:",
        "`getPatientName(long",
        "username",
        "retrieving",
        "clearly",
        "`loggedInMID`:",
        "defined,",
        "according",
        "retrieves",
        "`addToList`",
        "name",
        "checks",
        "addition",
        "could",
        "patientMID",
        "handles",
        "**Methods:**",
        "`isPatientInList`",
        "thrown",
        "authDAO",
        "`true`",
        "pid",
        "information.",
        "3.",
        "1.",
        "4.",
        "logging",
        "HCP's",
        "*",
        "patient",
        "`authDAO`:",
        "`removeFromList(long",
        "certain",
        "otherwise.",
        "removes",
        "interacts",
        "logged.",
        "`false`",
        "HCP",
        "application.",
        "monitoring",
        "remote",
        "`isPatientInList(long",
        "operations,",
        "called",
        "`RemoteMonitoringDAO`",
        "perform",
        "already",
        "removal",
        "returns",
        "pid)`:",
        "logs",
        "add",
        "**Attributes:**",
        "handled",
        "information",
        "given",
        "removes)",
        "class:",
        "(HCP)",
        "healthcare",
        "(e.g.,",
        "(adds",
        "ID)",
        "handling",
        "list,",
        "addToList",
        "list.",
        "check",
        "getPatientName",
        "list",
        "`EditMonitoringListAction`",
        "**Use",
        "associated",
        "Case",
        "Handles",
        "MID,",
        "requirements",
        "currently",
        "`AuthDAO`",
        "transDAO",
        "username)",
        "instance",
        "(username",
        "new",
        "`removeFromList`",
        "HCP.",
        "(Medical",
        "transactions,",
        "`getPatientName`",
        "summary",
        "username.",
        "method",
        "2.",
        "added",
        "operations",
        "removed",
        "loggedInMID",
        "class",
        "rmDAO",
        "Note:",
        "removeFromList",
        "isPatientInList",
        "patients",
        "exception",
        "successful,",
        "**Purpose:**",
        "`transDAO`:",
        "log",
        "MID.",
        "`rmDAO`:",
        "changes",
        "`TransactionDAO`",
        "used",
        "Scenarios:**",
        "database",
        "wants",
        "provider's",
        "`DBException`",
        "transactions",
        "`addToList(long",
        "remove",
        "transaction",
        "methods",
        "alias)"
    ],
    "EditOfficeVisitAction": [
        "responsible",
        "`makeEmailApp(long,",
        "Add",
        "visit",
        "visitID",
        "MID",
        "adds",
        "`checkAddSubAction(OVSubAction,",
        "form",
        "part",
        "system,",
        "EditOfficeVisitAction",
        "`getHospitals(long)`:",
        "@author",
        "system",
        "`loggedInMID`:",
        "Name:**",
        "Edit",
        "`getLabProcedures(long,",
        "email",
        "checks",
        "allergies.",
        "potentially",
        "handles",
        "**Methods:**",
        "care",
        "long,",
        "`checkRemoveSubAction(OVSubAction,",
        "objects",
        "visits",
        "hcpID",
        "pid",
        "`updateOv(EditOfficeVisitForm)`:",
        "object",
        "checkRemoveSubAction",
        "ovDAO",
        "isAllergyOnList",
        "medications",
        "Requirements:**",
        "`lpDAO`,",
        "ovid",
        "Send",
        "manage",
        "Update",
        "ndcode",
        "`hospitalDAO`,",
        "instances",
        "*",
        "provider",
        "patient",
        "adding",
        "`allergyDAO`,",
        "`EditOfficeVisitValidator`",
        "comprehensive",
        "getHospitals",
        "removes",
        "ID",
        "validator",
        "code",
        "authorizing",
        "diagnosis",
        "actions",
        "hospitals",
        "hcpsHospitals",
        "hasInteraction",
        "`ovID`:",
        "`getOfficeVisit()`:",
        "visit.",
        "representing",
        "various",
        "checkAddPrescription",
        "input",
        "data",
        "updateInformation",
        "lab",
        "allergy",
        "combineLists",
        "`hasInteraction(String,",
        "`validator`:",
        "Edits",
        "hcpid",
        "long)`:",
        "patient.",
        "String,",
        "(DAOs)",
        "`patDAO`:",
        "procedures,",
        "returns",
        "validate",
        "action",
        "`ndcDAO`,",
        "checkAddSubAction",
        "regarding",
        "prescription",
        "**Attributes:**",
        "ndcDAO",
        "information",
        "class:",
        "healthcare",
        "interactions",
        "patID",
        "allows",
        "startdate",
        "office",
        "dangerous",
        "access",
        "medication",
        "associated",
        "drugDAO",
        "list",
        "**Use",
        "`drugDAO`,",
        "Case",
        "`checkAddPrescription(EditOfficeVisitForm,",
        "editing",
        "Check",
        "personnelDAO",
        "`personnelDAO`,",
        "`transDAO`,",
        "monitor",
        "String)`:",
        "transDAO",
        "`updateInformation(EditOfficeVisitForm)`:",
        "instance",
        "new",
        "track",
        "Used",
        "`OfficeVisitBean`",
        "hospitalDAO",
        "sends",
        "summary",
        "editOfficeVisit.jsp",
        "information,",
        "loggedInMID",
        "performed",
        "getLabProcedures",
        "procedures",
        "makeEmailApp",
        "class",
        "diagnoses,",
        "interaction",
        "`pid`:",
        "to:",
        "user",
        "problem",
        "allergyDAO",
        "patients",
        "enddate",
        "drug",
        "**Class",
        "**Purpose:**",
        "updateOv",
        "mid",
        "immunizations,",
        "updates",
        "potential",
        "used",
        "patMID",
        "allHospitals",
        "`isAllergyOnList(String,",
        "interact",
        "getOfficeVisit",
        "lpDAO",
        "database",
        "laurenhayward",
        "particular",
        "removing",
        "providers",
        "patDAO",
        "dateOfDeath",
        "ovID",
        "allergies",
        "procedure",
        "iTrust",
        "medications,",
        "remove",
        "notifications"
    ],
    "EditPatientAction": [
        "patient's",
        "message",
        "MID",
        "filter)`:",
        "@author",
        "`loggedInMID`:",
        "Name:**",
        "retrieves",
        "Edit",
        "Cases:**",
        "email",
        "**Methods:**",
        "editPatient.jsp",
        "TransactionDAO",
        "auditing",
        "notify",
        "p)`:",
        "*",
        "getPatient",
        "patient",
        "purposes",
        "transaction,",
        "`emailutil`:",
        "validator",
        "authorizing",
        "emailutil",
        "updateInformation",
        "`validator`:",
        "Edits",
        "Sending",
        "`editMessageFilter(String",
        "patientDAO",
        "action",
        "logs",
        "**Attributes:**",
        "information",
        "class:",
        "filter",
        "PatientBean",
        "representatives",
        "Logging",
        "**Use",
        "update",
        "inform",
        "editMessageFilter",
        "`updateInformation(PatientBean",
        "transDAO",
        "instance",
        "new",
        "Used",
        "creates",
        "EmailUtil",
        "updated",
        "sends",
        "summary",
        "information,",
        "loggedInMID",
        "`getPatient()`:",
        "`makeEmail()`:",
        "PatientValidator",
        "PatientDAO",
        "p",
        "user",
        "personal",
        "validates",
        "patients",
        "`patientDAO`:",
        "edits",
        "**Class",
        "**Purpose:**",
        "`transDAO`:",
        "updates",
        "makeEmail",
        "EditPatientAction",
        "Editing",
        "laurenhayward",
        "transactions",
        "notifications"
    ],
    "EditPersonnelAction": [
        "role",
        "responsible",
        "message",
        "MID",
        "`PersonnelDAO`",
        "common",
        "@author",
        "`loggedInMID`:",
        "role,",
        "updating",
        "edit",
        "validation",
        "ID.",
        "checks",
        "personnelForm",
        "**Methods:**",
        "authDAO",
        "long,",
        "information.",
        "`PersonnelBean`",
        "object",
        "`editMessageFilter(String)`:",
        "`updateInformation(PersonnelBean)`:",
        "pattern",
        "statement",
        "*",
        "user's",
        "patient",
        "initializes",
        "Java",
        "`authDAO`:",
        "ID",
        "validator",
        "validating",
        "database.",
        "data",
        "updateInformation",
        "`EditPersonnelAction`",
        "provided",
        "object.",
        "`validator`:",
        "Edits",
        "`EditPersonnelAction(DAOFactory,",
        "`PersonnelValidator`",
        "validate",
        "permissions.",
        "designated",
        "**Attributes:**",
        "information",
        "Method",
        "class:",
        "filter",
        "parameters",
        "necessary",
        "personnel",
        "update",
        "editMessageFilter",
        "editing",
        "personnelDAO",
        "superclass,",
        "`AuthDAO`",
        "String)`:",
        "request,",
        "transDAO",
        "instance",
        "edited",
        "Used",
        "summary",
        "method",
        "programming.",
        "loggedInMID",
        "calls",
        "class",
        "constructor",
        "`pid`:",
        "user",
        "Note:",
        "roles",
        "validates",
        "`super`",
        "**Purpose:**",
        "staff/editMyDemographics.jsp,",
        "`transDAO`:",
        "log",
        "performs",
        "`TransactionDAO`",
        "`personnelDAO`:",
        "used",
        "edited.",
        "interact",
        "database",
        "laurenhayward",
        "transactions",
        "admin/editPersonnel.jsp,",
        "checking",
        "editPersonnel.jsp"
    ],
    "EditPHRAction": [
        "responsible",
        "`ICDCodesDAO`,",
        "visit",
        "patient's",
        "retrieve",
        "DAO",
        "visitID",
        "getFamily",
        "MID",
        "getAllergies",
        "doesFamilyMemberHaveHeartDisease",
        "`HealthRecordsDAO`,",
        "DAOs",
        "high",
        "system,",
        "retrieving",
        "@author",
        "system",
        "`loggedInMID`:",
        "pressure.",
        "factors.",
        "visitID)`:",
        "`getFamilyMemberCOD(FamilyMemberBean",
        "record.",
        "member",
        "updating",
        "risk.",
        "ID.",
        "getAllHealthRecords",
        "`doesFamilyMemberHaveHighBP(FamilyMemberBean",
        "provides",
        "smoker.",
        "`doesFamilyMemberHaveCancer(FamilyMemberBean",
        "**Methods:**",
        "deceased.",
        "`EditPHRAction`",
        "objects",
        "reading,",
        "blood",
        "pid",
        "information.",
        "editPHR.jsp",
        "`AllergyDAO`,",
        "object",
        "diseaseMediator",
        "allergies,",
        "ovDAO",
        "doesFamilyMemberHaveHighCholesterol",
        "pid,",
        "Requirements:**",
        "also",
        "`DAOFactory`:",
        "getCompleteOfficeVisit",
        "members,",
        "cancer.",
        "doesFamilyMemberHaveDiabetes",
        "`getFamily()`:",
        "*",
        "provider",
        "getPatient",
        "patient",
        "adding",
        "`TransactionDAO`,",
        "Java",
        "emails.",
        "member)`:",
        "records",
        "user.",
        "`PatientDAO`,",
        "transaction,",
        "`emailutil`:",
        "diabetes.",
        "emails",
        "health",
        "disease.",
        "death",
        "`doesFamilyMemberHaveHighCholesterol(FamilyMemberBean",
        "emailutil",
        "`getAllHealthRecords()`:",
        "data",
        "visit,",
        "object.",
        "allergy",
        "`getCompleteOfficeVisit(long",
        "`getAllOfficeVisits()`:",
        "ICD",
        "Edits",
        "patient.",
        "description",
        "(DAOs)",
        "patientDAO",
        "`doesFamilyMemberHaveDiabetes(FamilyMemberBean",
        "family",
        "action.",
        "add",
        "updated.",
        "**Attributes:**",
        "visits,",
        "given",
        "beans",
        "`updateAllergies(long",
        "class:",
        "family,",
        "`getDiseasesAtRisk()`:",
        "healthcare",
        "records.",
        "diseases",
        "Checks",
        "updateAllergies",
        "icdDAO",
        "representatives",
        "office",
        "access",
        "list",
        "**Use",
        "personnel",
        "sending",
        "code,",
        "`patient`:",
        "complete",
        "doesFamilyMemberHaveHighBP",
        "Case",
        "extends",
        "update",
        "editing",
        "personnelDAO",
        "cause",
        "currently",
        "`doesFamilyMemberHaveHeartDisease(FamilyMemberBean",
        "transDAO",
        "risk",
        "HCPUAP",
        "Used",
        "creating,",
        "creates",
        "implement",
        "`factory`:",
        "`PersonnelDAO`:",
        "summary",
        "isFamilyMemberSmoker",
        "send",
        "information,",
        "heart",
        "allergy,",
        "`isFamilyMemberSmoker(FamilyMemberBean",
        "loggedInMID",
        "description)`:",
        "hrDAO",
        "`getPatient()`:",
        "class",
        "`OfficeVisitDAO`,",
        "`EmailUtil`",
        "familyDAO",
        "logged-in",
        "`getAllergies()`:",
        "allergyDAO",
        "personal",
        "patients",
        "String",
        "`FamilyDAO`,",
        "**Purpose:**",
        "`PatientBaseAction`",
        "doesFamilyMemberHaveCancer",
        "bean",
        "records,",
        "getFamilyMemberCOD",
        "`HCPUAP`:",
        "used",
        "record,",
        "cholesterol.",
        "makeEmail",
        "Retrieves",
        "Updates",
        "laurenhayward",
        "getAllOfficeVisits",
        "patient,",
        "record",
        "factory",
        "methods",
        "getDiseasesAtRisk"
    ],
    "EditPrescriptionAction": [
        "responsible",
        "pres)`:",
        "patient's",
        "functionality",
        "pres",
        "@author",
        "modify",
        "`EditPrescriptionAction(DAOFactory",
        "understanding",
        "updating",
        "edit",
        "provides",
        "**Methods:**",
        "`PrescriptionBean`.",
        "information.",
        "constructs",
        "object",
        "Smith",
        "ovDAO",
        "Requirements:**",
        "needs",
        "3.",
        "1.",
        "4.",
        "meet",
        "`DAOFactory`",
        "case",
        "`editPrescription`",
        "`ovDAO`:",
        "database.",
        "class,",
        "purpose,",
        "provided",
        "captures",
        "specific",
        "`editPrescriptionAction`",
        "providing",
        "perform",
        "editPrescription",
        "Edits",
        "hcp-uap/editPrescription.jsp",
        "existing",
        "`EditPrescriptionAction`",
        "prescription",
        "**Attributes:**",
        "attributes,",
        "information",
        "class:",
        "necessary",
        "office",
        "created",
        "**Use",
        "factory)`:",
        "update",
        "Case",
        "uses",
        "instance",
        "new",
        "Used",
        "`editPrescription(PrescriptionBean",
        "summary",
        "method",
        "2.",
        "operation.",
        "operations",
        "actual",
        "Ben",
        "class",
        "`OfficeVisitDAO`,",
        "edits",
        "**Purpose:**",
        "`OfficeVisitDAO`",
        "using",
        "`OfficeVisitDAO`.",
        "prescriptions.",
        "`DAOFactory`.",
        "visits.",
        "requirements.",
        "use",
        "used",
        "clear",
        "interact",
        "database",
        "iTrust",
        "related",
        "initialize",
        "initializing",
        "methods"
    ],
    "EditRepresentativesAction": [
        "patient's",
        "DAO",
        "MID",
        "adds",
        "(set",
        "system,",
        "@author",
        "`loggedInMID`:",
        "role,",
        "record.",
        "edit",
        "checks",
        "**Methods:**",
        "authDAO",
        "objects",
        "pid",
        "object",
        "allowing",
        "`EditRepresentativesAction`",
        "manage",
        "*",
        "patient",
        "initializes",
        "`authDAO`:",
        "removeRepresentative",
        "input)`:",
        "removes",
        "`addRepresentative(String",
        "hcp/editRepresentatives.jsp",
        "database.",
        "superclass",
        "roles.",
        "representatives.",
        "`PatientDAO`",
        "representing",
        "`getRepresented(long",
        "input",
        "another",
        "represent",
        "Edits",
        "patient.",
        "factory,",
        "patientDAO",
        "`loggedInMID`",
        "returns",
        "validate",
        "pid)`:",
        "logs",
        "`pid`.",
        "add",
        "**Attributes:**",
        "`EditRepresentativesAction(DAOFactory",
        "given",
        "class:",
        "records.",
        "pidString",
        "allows",
        "representatives",
        "necessary",
        "`removeRepresentative(String",
        "list",
        "MID,",
        "represented",
        "editing",
        "`AuthDAO`",
        "feature",
        "transDAO",
        "addRepresentative",
        "long",
        "edited",
        "Used",
        "implement",
        "system.",
        "summary",
        "method",
        "loggedInMID",
        "valid",
        "class",
        "constructor",
        "`pid`:",
        "user",
        "Representatives\"",
        "personal",
        "validates",
        "String",
        "`patientDAO`:",
        "patients",
        "**Purpose:**",
        "`transDAO`:",
        "log",
        "`TransactionDAO`",
        "used",
        "loggedInMID,",
        "interact",
        "\"Edit",
        "getRepresented",
        "laurenhayward",
        "pidString)`:",
        "iTrust",
        "sets",
        "`PatientBaseAction`).",
        "attribute.",
        "remove",
        "transaction"
    ],
    "EmergencyReportAction": [
        "responsible",
        "full",
        "patient's",
        "retrieve",
        "DAO",
        "MID",
        "getAllergies",
        "@author",
        "`loggedInMID`:",
        "viewed.",
        "transactions.",
        "Name:**",
        "`getWarningDiagnoses()`:",
        "AllergyDAO",
        "OfficeVisitDAO",
        "email",
        "Emergency",
        "provides",
        "allergies.",
        "age.",
        "**Methods:**",
        "blood",
        "information.",
        "ovDAO",
        "TransactionDAO",
        "whose",
        "diagnoses",
        "range",
        "reports",
        "`getPatientName()`:",
        "indicated",
        "page",
        "notify",
        "requirement:",
        "*",
        "DiagnosisRange",
        "case",
        "patient",
        "emails.",
        "Report",
        "creating",
        "getPatientAge",
        "`ovDAO`:",
        "`pb`:",
        "`emailutil`:",
        "type.",
        "prescriptions",
        "code",
        "class,",
        "emailutil",
        "display",
        "emergencyReport.jsp",
        "generated.",
        "fake",
        "EmergencyReportAction",
        "getBloodType",
        "Creates",
        "`getPatientGender()`:",
        "pb",
        "`allergyDAO`:",
        "viewing",
        "patient.",
        "patientDAO",
        "getCurrentPrescriptions",
        "report",
        "high-level",
        "`getPatientEmergencyContact()`:",
        "**Attributes:**",
        "contact.",
        "attributes,",
        "given",
        "PatientBean",
        "create",
        "`getImmunizations()`:",
        "office",
        "created",
        "getPatientName",
        "list",
        "getPatientGender",
        "`getBloodType()`:",
        "map",
        "DAOFactory",
        "currently",
        "overview",
        "transDAO",
        "new",
        "Used",
        "instances.",
        "EmailUtil",
        "system.",
        "getImmunizations",
        "`factory`:",
        "send",
        "summary",
        "report.",
        "`getPatientAge()`:",
        "loggedInMID",
        "`makeEmail()`:",
        "PatientDAO",
        "instance,",
        "class",
        "`getAllergies()`:",
        "user",
        "taking.",
        "name.",
        "allergyDAO",
        "patients",
        "Returns",
        "`patientDAO`:",
        "gender.",
        "methods,",
        "emergency",
        "**Class",
        "**Purpose:**",
        "getWarningDiagnoses",
        "`transDAO`:",
        "log",
        "requirement.",
        "getPatientEmergencyContact",
        "immunizations",
        "visits.",
        "use",
        "used",
        "makeEmail",
        "`getCurrentPrescriptions()`:",
        "laurenhayward",
        "allergies",
        "enum.",
        "iTrust"
    ],
    "GenerateCalendarAction": [
        "visit",
        "retrieve",
        "containing",
        "`getOfficeVisitsTable()`:",
        "`getSend()`:",
        "boolean",
        "@author",
        "methods.",
        "getOfficeVisitsTable",
        "data.",
        "retrieves",
        "a_action",
        "generating",
        "**Methods:**",
        "`a_action`:",
        "objects",
        "r_action",
        "getConflicts",
        "13,",
        "`getConflicts()`:",
        "getLabProceduresTable",
        "Team",
        "*",
        "case",
        "code",
        "`ViewMyApptsAction`",
        "actions",
        "purpose",
        "array",
        "help",
        "class,",
        "representing",
        "various",
        "`EditApptTypeAction`",
        "data",
        "processes",
        "\"Project",
        "visit,",
        "lab",
        "types.",
        "`getLabProceduresTable()`:",
        "types",
        "store",
        "year.",
        "thisYear",
        "conflicts",
        "returns",
        "**Attributes:**",
        "attributes,",
        "given",
        "calendar.jsp",
        "class:",
        "`r_action`:",
        "capturing",
        "displayed",
        "table",
        "thisMonth",
        "Checks",
        "`ViewMyRecordsAction`",
        "office",
        "month",
        "appointment",
        "list",
        "map",
        "Software",
        "process",
        "generate",
        "instance",
        "`OfficeVisitBean`",
        "conflicts.",
        "2010",
        "GenerateCalendarAction",
        "system.",
        "send",
        "Class:**",
        "summary",
        "`send`:",
        "appointments",
        "class",
        "`getApptsTable()`:",
        "**Purpose",
        "indicating",
        "view",
        "Returns",
        "Engineering",
        "values",
        "`LabProcedureBean`",
        "`types`:",
        "calendar",
        "Action",
        "requirement,",
        "handle",
        "getSend",
        "`ApptBean`",
        "use",
        "Zephyr\"",
        "used",
        "appointment,",
        "calendar.",
        "hash",
        "procedure",
        "iTrust",
        "related",
        "getApptsTable"
    ],
    "GetUserNameAction": [
        "action.",
        "likely",
        "user's",
        "initializes",
        "`getUserName(String",
        "retrieve",
        "**Attributes:**",
        "`iTrustException`",
        "class",
        "MID",
        "message.",
        "constructor",
        "certain",
        "DAOs",
        "given",
        "class:",
        "person's",
        "ID",
        "inputMID",
        "name.",
        "Getting",
        "create",
        "@author",
        "web",
        "based",
        "values",
        "**Class",
        "associated",
        "`GetUserNameAction(DAOFactory",
        "name",
        "GetUserNameAction",
        "factory)`:",
        "getUserName",
        "MID.",
        "mid",
        "Handles",
        "MID,",
        "display",
        "input",
        "**Methods:**",
        "application",
        "`factory`",
        "(MID).",
        "default",
        "Medical",
        "specific",
        "used",
        "error",
        "instance",
        "takes",
        "getUser.jsp",
        "Used",
        "parameter",
        "inputMID)`:",
        "`String`",
        "laurenhayward",
        "Purpose:**",
        "`factory`:",
        "throws",
        "summary",
        "page",
        "method",
        "sets",
        "`DAOFactory`",
        "attribute.",
        "returns",
        "`getUser.jsp`",
        "factory",
        "correct",
        "format,",
        "*"
    ],
    "GetVisitRemindersAction": [
        "responsible",
        "`testHepA(int",
        "visit",
        "patient's",
        "duplicates",
        "retrieve",
        "MID",
        "DAOs",
        "time",
        "Access",
        "diagnosed",
        "firstDoseTime)`,",
        "patientAge,",
        "retrieving",
        "`testMeasles(int",
        "@author",
        "`loggedInMID`:",
        "data.",
        "retrieves",
        "`testDipTet(int",
        "testHPV",
        "checks",
        "time)`:",
        "age.",
        "**Methods:**",
        "care",
        "missing",
        "pid",
        "Identifier)",
        "`checkImmunizations(long",
        "time)`,",
        "also",
        "needs",
        "logging",
        "shot",
        "testRotaVirus",
        "testHepA",
        "testPolio",
        "*",
        "reminders",
        "patient",
        "`testPneumo(int",
        "`testPolio(int",
        "removes",
        "immunization",
        "etc.)",
        "`PatientDAO`",
        "various",
        "`ReminderType`:",
        "specific",
        "types",
        "utilizes",
        "VisitReminders",
        "patientDAO",
        "schedule.",
        "Gets",
        "returns",
        "testHaemoFlu",
        "(Data",
        "pid)`:",
        "patientAge",
        "`visitReminderDAO`:",
        "visitReminders.jsp",
        "**Attributes:**",
        "`stripDupes(List<VisitReminderReturnForm>",
        "information",
        "given",
        "testHepB",
        "class:",
        "(e.g.,",
        "`GetVisitRemindersAction`",
        "type",
        "based",
        "visitReminderDAO",
        "check",
        "list",
        "specified",
        "`testHepB(int",
        "firstDoseTime",
        "uses",
        "Objects)",
        "transDAO",
        "instance",
        "long",
        "time,",
        "Used",
        "testMeasles",
        "needers,",
        "getImmunizationNeeders",
        "checkImmunizations",
        "(Medical",
        "summary",
        "stripDupes",
        "type)`:",
        "`testHaemoFlu(int",
        "reminder",
        "loggedInMID",
        "mid)`:",
        "testVaricella",
        "patients)`:",
        "class",
        "enumeration",
        "`testVaricella(int",
        "medical",
        "logged-in",
        "user",
        "need",
        "count",
        "patients",
        "`patientDAO`:",
        "status",
        "**Purpose:**",
        "`transDAO`:",
        "testPneumo",
        "**Enums:**",
        "testDipTet",
        "mid",
        "immunizations",
        "getVisitReminders",
        "`VisitRemindersDAO`",
        "`TransactionDAO`",
        "used",
        "history",
        "`testRotaVirus(int",
        "interact",
        "database",
        "`getImmunizationNeeders(long",
        "count,",
        "laurenhayward",
        "flu",
        "transactions",
        "helper",
        "methods",
        "`getVisitReminders(ReminderType"
    ],
    "LabProcHCPAction": [
        "visit",
        "sorts",
        "MID",
        "`LabProcHCP.jsp`",
        "logged",
        "boolean",
        "`loggedInMID`:",
        "understanding",
        "OfficeVisitDAO",
        "checks",
        "getLabProcForNextMonth",
        "handles",
        "**Methods:**",
        "checkAccess",
        "(HCPs).",
        "object",
        "acts",
        "ovDAO",
        "TransactionDAO",
        "id",
        "page",
        "*",
        "case",
        "sortByLOINC",
        "mapping",
        "`changePrivacy(long",
        "`ovDAO`:",
        "`sortByLOINC(long",
        "validator",
        "code",
        "value",
        "`LabProcHCPAction`",
        "class,",
        "HCP",
        "privacy",
        "application.",
        "various",
        "LabProcedureDAO",
        "data",
        "`checkAccess(long",
        "one",
        "purpose,",
        "lab",
        "LabProcedureValidator",
        "x)`:",
        "`validator`:",
        "@extends",
        "procedure-related",
        "`lpDAO`:",
        "returns",
        "validate",
        "LOINC",
        "action",
        "logs",
        "`getLabProcForNextMonth()`:",
        "**Attributes:**",
        "attributes,",
        "given",
        "class:",
        "useful",
        "healthcare",
        "LabProcUAPAction",
        "sorted",
        "office",
        "month",
        "created",
        "list",
        "next",
        "transDAO",
        "settings",
        "id)`:",
        "summary",
        "operations",
        "loggedInMID",
        "good",
        "controller",
        "procedures",
        "class",
        "changePrivacy",
        "**Purpose:**",
        "`transDAO`:",
        "log",
        "requirement.",
        "Action",
        "changes",
        "LabProcHCP.jsp.",
        "use",
        "used",
        "x",
        "interact",
        "lpDAO",
        "providers",
        "provide",
        "transactions",
        "procedure",
        "iTrust",
        "transaction",
        "methods"
    ],
    "LabProcUAPAction": [
        "responsible",
        "logged",
        "DAOs",
        "retrieving",
        "`loggedInMID`:",
        "updating",
        "email",
        "provides",
        "**Methods:**",
        "id",
        "manage",
        "(UAPs)",
        "logging",
        "`DAOFactory`",
        "*",
        "patient",
        "ID",
        "validator",
        "validating",
        "Account",
        "lists",
        "class,",
        "data",
        "`makeEmail(LabProcedureBean",
        "lab",
        "User",
        "notification",
        "`validator`:",
        "performing",
        "viewing",
        "Class",
        "`lpDAO`:",
        "informing",
        "procedures,",
        "returns",
        "action",
        "set",
        "LabProcUAP.jsp.",
        "Overall,",
        "updateProcedure",
        "**Attributes:**",
        "including",
        "UAPs",
        "class:",
        "procedures.",
        "LabProcUAPAction",
        "create",
        "viewProcedures",
        "handling",
        "list",
        "specified",
        "sending",
        "Handles",
        "transDAO",
        "instance",
        "`LabProcedureValidator`",
        "creates",
        "id)`:",
        "system.",
        "updated",
        "`factory`:",
        "sends",
        "summary",
        "operations",
        "loggedInMID",
        "UAP",
        "procedures",
        "class",
        "Providers",
        "view",
        "b",
        "status",
        "**Purpose:**",
        "`transDAO`:",
        "patients,",
        "`updateProcedure(LabProcedureBean",
        "notifications,",
        "changes",
        "`TransactionDAO`",
        "`LabProcedureDAO`",
        "updates",
        "used",
        "makeEmail",
        "b)`:",
        "lpDAO",
        "transactions",
        "`viewProcedures(long",
        "procedure",
        "iTrust",
        "notifications",
        "factory",
        "methods"
    ],
    "LoginFailureAction": [
        "recordLoginFailure",
        "perfectly",
        "container",
        "login",
        "form",
        "isValidForLogin",
        "note",
        "boolean",
        "Denial",
        "@author",
        "`ipAddr`:",
        "would",
        "free",
        "doesn't",
        "/>",
        "limitation",
        "easily",
        "checks",
        "best",
        "**Methods:**",
        "(a)",
        "`isValidForLogin()`:",
        "less",
        "authDAO",
        "-",
        "want",
        "change",
        "support",
        "number",
        "ipAddr)`:",
        "address",
        "ipAddr",
        "3.",
        "it's",
        "manage",
        "looked",
        "JSP's",
        "*",
        "attempt",
        "JDBCRealm",
        "`authDAO`:",
        "records",
        "jar",
        "tracked",
        "learn",
        "logic.",
        "certain",
        "extend",
        "code",
        "acceptable.",
        "multiple",
        "`recordLoginFailure()`:",
        "options",
        "ip",
        "buried",
        "fault",
        "address.",
        "mechanism",
        "Service",
        "attempts",
        "account",
        "educational",
        "reason",
        "MAX_LOGIN_ATTEMPTS",
        "addresses",
        "<br",
        "per",
        "failure",
        "factory,",
        "`LoginFailureAction(DAOFactory",
        "specifying",
        "technically",
        "`transactionDAO`:",
        "set",
        "logs",
        "add",
        "**Attributes:**",
        "value.",
        "transactionDAO",
        "given",
        "making",
        "class:",
        "pretty",
        "Please",
        "installation",
        "(Tomcat),",
        "access",
        "extending",
        "attacks.",
        "failed",
        "transaction.",
        "Tomcat",
        "Feel",
        "account,",
        "this;",
        "(yuck!),",
        "mitigation",
        "`AuthDAO`",
        "feature",
        "track",
        "instance",
        "implement",
        "actually",
        "denied",
        "summary",
        "method",
        "string",
        "Andy",
        "source",
        "lockout.",
        "I've",
        "valid",
        "authentication",
        "class",
        "constructor",
        "`LoginFailureAction`",
        "easy.",
        "spoofable",
        "user",
        "addresses.",
        "implemented",
        "better",
        "webapps.",
        "indicating",
        "current",
        "password",
        "web",
        "String",
        "Returns",
        "**Purpose:**",
        "log",
        "way",
        "(2)",
        "application,",
        "application",
        "`TransactionDAO`",
        "attempts.",
        "used",
        "basic",
        "interact",
        "lockout).",
        "database",
        "IP",
        "keep",
        "done",
        "transactions",
        "defaults",
        "checking",
        "(actually,"
    ],
    "ManageHospitalAssignmentsAction": [
        "assigns",
        "`PersonnelDAO`",
        "MID",
        "hospitalID",
        "@author",
        "`loggedInMID`:",
        "get",
        "checks",
        "`assignHCPToHospital(String",
        "provides",
        "data,",
        "**Methods:**",
        "hcpID",
        "object",
        "midString",
        "auditing",
        "manage",
        "Manages",
        "corresponding",
        "checkHCPID",
        "*",
        "`getAvailableHospitals(String",
        "midString)`:",
        "removes",
        "managing",
        "ID",
        "purposes.",
        "hospitals",
        "getAssignedHospitals",
        "hospitalsDAO",
        "HCP",
        "data",
        "assigned",
        "hospitalAssignments.jsp",
        "removeAllAssignmentsFromHCP",
        "hospitals.",
        "(HCPs)",
        "`checkHCPID(String",
        "hospital",
        "getAvailableHospitals",
        "returns",
        "logs",
        "available",
        "**Attributes:**",
        "given",
        "class:",
        "assignHCPToHospital",
        "Healthcare",
        "`removeAllAssignmentsFromHCP(String",
        "list",
        "specified",
        "hospitals,",
        "personnel",
        "midString,",
        "personnelDAO",
        "assignment",
        "currently",
        "transDAO",
        "Used",
        "removeHCPAssignmentToHospital",
        "`HospitalsDAO`",
        "`getAssignedHospitals(String",
        "system.",
        "HCP.",
        "summary",
        "loggedInMID",
        "`ManageHospitalAssignmentsAction`",
        "assignments",
        "valid",
        "class",
        "user",
        "Providers",
        "String",
        "**Purpose:**",
        "`transDAO`:",
        "log",
        "HCPs",
        "`TransactionDAO`",
        "`personnelDAO`:",
        "used",
        "hcpID)`:",
        "interact",
        "laurenhayward",
        "transactions",
        "manages",
        "hospitalID)`:",
        "assignment,",
        "iTrust",
        "`hospitalsDAO`:",
        "remove",
        "assign",
        "`removeHCPAssignmentToHospital(String",
        "transaction",
        "methods"
    ],
    "MonitorAdverseEventAction": [
        "message",
        "MID",
        "removal.",
        "`loggedInMID`:",
        "name",
        "email",
        "`MonitorAdverseEventAction`",
        "patientMID",
        "**Methods:**",
        "reports,",
        "`AdverseEventDAO`",
        "`getName(long",
        "reports",
        "id",
        "(prescription",
        "3.",
        "manage",
        "1.",
        "event",
        "logging",
        "start",
        "`SendMessageAction`",
        "events.",
        "*",
        "provider",
        "patient",
        "scenarios.",
        "start,",
        "providers.",
        "cover",
        "adverse",
        "sendEmail",
        "cases",
        "events,",
        "messenger",
        "PHAs",
        "managing",
        "emails",
        "code",
        "`PatientDAO`",
        "requesting",
        "Patient",
        "Provider)",
        "provided",
        "isPrescription,",
        "notification",
        "emailer",
        "messages",
        "patientDAO",
        "adverseEventDAO",
        "Removes",
        "report",
        "`transactionDAO`:",
        "regarding",
        "prescription",
        "MID)`:",
        "`getReports(boolean",
        "**Attributes:**",
        "transactionDAO",
        "information",
        "end",
        "`MonitorAdverseEventAction`:",
        "healthcare",
        "Pharmacists",
        "type",
        "based",
        "isPrescription",
        "Healthcare",
        "list",
        "specified",
        "sending",
        "patientMID,",
        "`remove(int",
        "`adverseEventDAO`:",
        "instance",
        "message)`:",
        "Used",
        "notification:",
        "following",
        "implement",
        "id)`:",
        "send",
        "summary",
        "sends",
        "possible",
        "2.",
        "may",
        "accessing",
        "loggedInMID",
        "Note",
        "class",
        "`EmailUtil`",
        "logged-in",
        "events",
        "cases:",
        "getReports",
        "end)`:",
        "(PHAs)",
        "view",
        "getName",
        "patients",
        "String",
        "`patientDAO`:",
        "Returns",
        "Reporting",
        "immunization)",
        "**Purpose:**",
        "reported",
        "`emailer`:",
        "`sendEmail(long",
        "Sends",
        "`TransactionDAO`",
        "use",
        "dates",
        "used",
        "`messenger`:",
        "providers",
        "transactions",
        "professional",
        "(Pharmacist",
        "events:",
        "remove",
        "notifications"
    ],
    "MyDiagnosisAction": [
        "responsible",
        "SurveyDAO,",
        "visit",
        "getDiagnoses",
        "retrieve",
        "MID",
        "logged",
        "retrieving",
        "icdcode",
        "Summary:**",
        "@author",
        "**Patient",
        "`loggedInMID`:",
        "system",
        "data.",
        "laboratory",
        "getHCPByDiagnosis",
        "**Prescription",
        "**Methods:**",
        "diagnoses",
        "Requirements:**",
        "number",
        "TransactionDAO,",
        "3.",
        "1.",
        "4.",
        "seen",
        "PrescriptionBeans",
        "satisfaction",
        "code.",
        "`getDiagnoses()`:",
        "*",
        "matching",
        "patient",
        "`HCPDiagnosisBeanComparator`:",
        "results.",
        "Management**:",
        "Experience**:",
        "able",
        "prescriptions",
        "managing",
        "diagnosis",
        "in.",
        "database.",
        "Diagnosis",
        "HCP",
        "privacy",
        "**HCP",
        "data",
        "diagnosis.",
        "specific",
        "inner",
        "MyDiagnosisAction",
        "ICD",
        "Edits",
        "hcpid",
        "`officeVisitDAO`:",
        "patient.",
        "myDiagnoses.jsp",
        "patientDAO",
        "`transactionDAO`:",
        "`getHCPByDiagnosis(String",
        "**Attributes:**",
        "transactionDAO",
        "including",
        "information",
        "labprocDAO",
        "given",
        "getPrescriptionsByHCPAndICD",
        "procedures.",
        "based",
        "HCP,",
        "sorted",
        "office",
        "surveyDAO",
        "associated",
        "list",
        "specified",
        "**Use",
        "personnel",
        "Case",
        "code,",
        "static",
        "`surveyDAO`:",
        "HCP-specific",
        "personnelDAO",
        "PatientDAO,",
        "currently",
        "instance",
        "compare",
        "LabProcedureDAO,",
        "treated",
        "diagnosis,",
        "system.",
        "information,",
        "2.",
        "`labprocDAO`:",
        "loggedInMID",
        "**Comparing",
        "+",
        "diagnoses,",
        "class",
        "logged-in",
        "user",
        "patients",
        "String",
        "`patientDAO`:",
        "levels",
        "**Class",
        "HCPDiagnosisBeans",
        "**Purpose:**",
        "log",
        "MID.",
        "officeVisitDAO",
        "survey",
        "DiagnosisBeans",
        "experience",
        "OfficeVisitDAO,",
        "HCPs",
        "`personnelDAO`:",
        "used",
        "lists,",
        "interact",
        "Retrieves",
        "hcpid,",
        "laurenhayward",
        "particular",
        "transactions",
        "`getPrescriptionsByHCPAndICD(long",
        "procedure",
        "patient,",
        "icdcode)`:",
        "PersonnelDAO,"
    ],
    "PrescriptionReportAction": [
        "patient's",
        "retrieve",
        "DAO",
        "MID",
        "`buildQueryString(List<Integer>",
        "hcp-uap/getPrescriptionReport.jsp,",
        "boolean",
        "@author",
        "isRepresenting",
        "`loggedInMID`:",
        "internal",
        "checks",
        "provides",
        "selected",
        "query",
        "Retrieve",
        "**Methods:**",
        "ovOffsets",
        "objects",
        "visits",
        "pid",
        "object",
        "ovDAO",
        "patient/getMyPrescriptionReport.jsp,",
        "String>",
        "`getPrescriptionReports(Map",
        "List<OfficeVisitBean>",
        "Requirements:**",
        "focuses",
        "reports",
        "API",
        "Represent",
        "*",
        "getPatient",
        "patient",
        "paramMap,",
        "input)`:",
        "hcp-uap/viewPrescriptionRecord.jsp,",
        "Generate",
        "paramMap",
        "representing",
        "myParams,",
        "getPrescriptionReports",
        "input",
        "another",
        "represent",
        "`getAllOfficeVisits()`:",
        "patient/viewMyPrescriptionRecord.jsp",
        "officeVisits)`:",
        "patientDAO",
        "report",
        "implementation",
        "buildQueryString",
        "returns",
        "`representPatient(String",
        "&",
        "prescription",
        "details",
        "**Attributes:**",
        "visits,",
        "`PrescriptionReportBean`",
        "Prescription",
        "given",
        "making",
        "class:",
        "based",
        "representee's",
        "office",
        "params",
        "`PrescriptionReportAction`",
        "params,",
        "ovOffsets)`:",
        "list",
        "**Use",
        "map",
        "Case",
        "Handles",
        "workings",
        "generate",
        "`ovDAO`,",
        "class.",
        "`transDAO`,",
        "transDAO",
        "patients.",
        "checkOfficeVisits",
        "Used",
        "`OfficeVisitBean`",
        "`isRepresenting`:",
        "transactions,",
        "`PatientBean`",
        "summary",
        "report.",
        "string",
        "representPatient",
        "builds",
        "loggedInMID",
        "`getPatient()`:",
        "officeVisits",
        "whether",
        "getQueryString",
        "Note",
        "class",
        "myParams",
        "`pid`:",
        "to:",
        "user",
        "`checkOfficeVisits(HashMap<String,",
        "indicating",
        "patients",
        "`patientDAO`:",
        "**Purpose:**",
        "`getQueryString(Map",
        "public",
        "handle",
        "representee",
        "used",
        "Reports",
        "takes",
        "parameter",
        "respectively",
        "laurenhayward",
        "provide",
        "getAllOfficeVisits",
        "offsets",
        "patient,",
        "methods"
    ],
    "ReferralManagementAction": [
        "responsible",
        "MID",
        "adding,",
        "part",
        "system,",
        "retrieving",
        "/auth/hcp/hcpConsultation.jsp",
        "`loggedInMID`:",
        "data.",
        "transactions.",
        "Name:**",
        "updating",
        "`updateReferral(ReferralBean",
        "provides",
        "**Methods:**",
        "sent",
        "information.",
        "TransactionDAO",
        "Requirements:**",
        "logging",
        "requirement:",
        "*",
        "provider",
        "getReferralsSentToMe",
        "case",
        "patient",
        "adding",
        "`getReferralsSentToMe()`:",
        "system's",
        "managing",
        "sent,",
        "code",
        "workflow.",
        "database.",
        "class,",
        "another",
        "data",
        "received,",
        "referral,",
        "(HCPs)",
        "r)`:",
        "existing",
        "`referralDAO`:",
        "referring",
        "set",
        "logs",
        "Overall,",
        "**Attributes:**",
        "sendReferral",
        "made",
        "HCPs.",
        "given",
        "refer",
        "making",
        "healthcare",
        "r",
        "ID)",
        "call",
        "referralDAO",
        "transaction.",
        "list",
        "**Use",
        "map",
        "Case",
        "update",
        "currently",
        "crucial",
        "referral",
        "transDAO",
        "instance",
        "new",
        "scenarios:",
        "Used",
        "following",
        "ReferralDAO",
        "system.",
        "(Medical",
        "summary",
        "loggedInMID",
        "involves",
        "class",
        "logged-in",
        "getReferralsSentFromMe",
        "updateReferral",
        "user",
        "view",
        "patients",
        "**Class",
        "received",
        "**Purpose:**",
        "updating,",
        "`transDAO`:",
        "ReferralManagementAction",
        "MID.",
        "`sendReferral(ReferralBean",
        "referrals",
        "use",
        "Adds",
        "used",
        "provider,",
        "`getReferralsSentFromMe()`:",
        "database",
        "Retrieves",
        "wants",
        "Updates",
        "providers",
        "iTrust",
        "referral.",
        "methods"
    ],
    "ReportAdverseEventAction": [
        "Add",
        "MID",
        "`PersonnelDAO`",
        "logged",
        "alternative",
        "sendMail",
        "`sendMail(AdverseEventBean",
        "`loggedInMID`:",
        "data.",
        "transactions.",
        "aeBean)`:",
        "email",
        "handles",
        "**Methods:**",
        "`sendMails`",
        "hcpID",
        "`AdverseEventDAO`",
        "object",
        "Requirements:**",
        "Send",
        "logging",
        "event",
        "events.",
        "*",
        "provider",
        "patient",
        "emails.",
        "initializes",
        "Report",
        "adding",
        "providers.",
        "adverse",
        "`ReportAdverseEventAction(String",
        "user.",
        "ID",
        "validator",
        "validating",
        "emails",
        "database.",
        "beans.",
        "`PatientDAO`",
        "data",
        "`validator`",
        "specific",
        "`ReportAdverseEventAction(DAOFactory",
        "notification",
        "emailer",
        "`validator`:",
        "factory,",
        "patientDAO",
        "adverseEventDAO",
        "report",
        "`ReportAdverseEventAction`",
        "validate",
        "parameters.",
        "`transactionDAO`:",
        "add",
        "**Attributes:**",
        "transactionDAO",
        "given",
        "`hcpID`:",
        "class:",
        "reports.",
        "healthcare",
        "aeList)`:",
        "**Notes:**",
        "ID)",
        "addReport",
        "`transactionDAO`",
        "transaction.",
        "list",
        "**Use",
        "sending",
        "personnel",
        "Case",
        "process",
        "aeList",
        "single",
        "personnelDAO",
        "DAOFactory",
        "uses",
        "aeBean",
        "`adverseEventDAO`:",
        "instance",
        "long",
        "Used",
        "`AdverseEventValidator`",
        "(Medical",
        "send",
        "summary",
        "loggedInMID)`:",
        "sends",
        "method",
        "accessing",
        "loggedInMID",
        "class",
        "`EmailUtil`",
        "constructor",
        "events",
        "to:",
        "provider.",
        "`sendMail`",
        "patients",
        "`patientDAO`:",
        "**Purpose:**",
        "log",
        "`addReport(AdverseEventBean",
        "`emailer`:",
        "hcpID,",
        "Sends",
        "`TransactionDAO`",
        "`personnelDAO`:",
        "use",
        "Adds",
        "attribute",
        "used",
        "constructor,",
        "`sendMails(List<AdverseEventBean>",
        "database",
        "`addReport`",
        "providers",
        "transactions",
        "primary",
        "bean.",
        "sendMails",
        "notifications",
        "methods"
    ],
    "ResetPasswordAction": [
        "role",
        "0",
        "checkAnswerNull",
        "MID",
        "empty.",
        "answer)`:",
        "checkRole",
        "Verify",
        "question",
        "@author",
        "confirmPassword",
        "role,",
        "matches",
        "Cases:**",
        "isMaxedOut",
        "email",
        "checks",
        "match",
        "**Methods:**",
        "authDAO",
        "change.",
        "midString",
        "number",
        "ipAddr)`:",
        "address",
        "`DAOFactory`:",
        "ipAddr",
        "DAOs.",
        "3.",
        "manage",
        "1.",
        "Manages",
        "4.",
        "successful.",
        "getSecurityQuestion",
        "6.",
        "confirmation",
        "*",
        "found,",
        "patient",
        "user's",
        "`authDAO`:",
        "`ResetPasswordAction`",
        "reset",
        "certain",
        "midString)`:",
        "ensure",
        "constant",
        "value",
        "exceeded",
        "database.",
        "null",
        "`PatientDAO`",
        "`checkRole(long",
        "`checkAnswerNull(String",
        "representing",
        "5.",
        "`makeEmailApp(long",
        "attempts",
        "resetPassword.jsp",
        "confirmPassword)`:",
        "`getSecurityQuestion(long",
        "resets",
        "patientDAO",
        "resetPassword",
        "email.",
        "informing",
        "returns",
        "Retreive",
        "**Attributes:**",
        "given",
        "class:",
        "MAX_RESET_ATTEMPTS",
        "create",
        "formatting",
        "answer,",
        "`validatePassword(String",
        "specified",
        "**Use",
        "confirmPassword,",
        "security",
        "process",
        "`MAX_RESET_ATTEMPTS`:",
        "password.",
        "Check",
        "`AuthDAO`",
        "integer",
        "instance",
        "long",
        "Used",
        "creates",
        "system.",
        "sends",
        "summary",
        "send",
        "mid,",
        "2.",
        "mid)`:",
        "checkMID",
        "Validate",
        "authentication",
        "makeEmailApp",
        "class",
        "7.",
        "users",
        "role.",
        "maximum",
        "to:",
        "user",
        "password,",
        "criteria.",
        "ipAddress",
        "exists",
        "meets",
        "String",
        "password",
        "`patientDAO`:",
        "not.",
        "allowed.",
        "role)`:",
        "**Purpose:**",
        "MID.",
        "answer",
        "mid",
        "resetting",
        "attempts.",
        "ipAddress)`:",
        "used",
        "`isMaxedOut(String",
        "interact",
        "validatePassword",
        "IP",
        "laurenhayward",
        "Reset",
        "iTrust",
        "`checkMID(String",
        "`resetPassword(long",
        "factory"
    ],
    "SearchUsersAction": [
        "retrieve",
        "MID",
        "searchForPersonnelWithName",
        "`PersonnelDAO`",
        "functionality",
        "DAOs",
        "Summary:**",
        "system",
        "retrieves",
        "enables",
        "provides",
        "case-insensitive,",
        "match",
        "**Methods:**",
        "objects",
        "-",
        "information.",
        "object",
        "whose",
        "needs",
        "3.",
        "1.",
        "`SearchUsersAction`",
        "patient",
        "initializes",
        "Java",
        "records",
        "searchForPatientsWithName",
        "multiple",
        "interacts",
        "class,",
        "department",
        "`PatientDAO`",
        "firstName,",
        "within",
        "`SearchUsersAction(DAOFactory",
        "`personnelDAO`",
        "provided",
        "personnel,",
        "performing",
        "factory,",
        "patientDAO",
        "hospital",
        "name,",
        "parameters.",
        "action",
        "action.",
        "names",
        "lastName",
        "staff,",
        "**Attributes:**",
        "including",
        "class:",
        "create",
        "based",
        "records.",
        "@param",
        "criterion",
        "list",
        "personnel",
        "fundamental",
        "personnelDAO",
        "DAOFactory",
        "patients.",
        "long",
        "scenarios:",
        "empty",
        "following",
        "registration",
        "`searchForPatientsWithName(String",
        "`searchForPersonnelWithName(String",
        "summary",
        "loggedInMID)`:",
        "administrator",
        "method",
        "2.",
        "string",
        "last",
        "loggedInMID",
        "either",
        "class",
        "constructor",
        "users",
        "user",
        "roles",
        "patients",
        "String",
        "firstName",
        "search.",
        "lastName)`:",
        "**Class",
        "using",
        "names.",
        "search",
        "administrators.",
        "`DAOFactory`.",
        "wildcarded",
        "application",
        "application,",
        "used",
        "database",
        "results",
        "`patientDAO`",
        "iTrust",
        "defaults",
        "first",
        "factory",
        "Set"
    ],
    "SendMessageAction": [
        "messageDAO",
        "responsible",
        "Instances",
        "message",
        "retrieve",
        "DAO",
        "MID",
        "`MessageValidator`",
        "Access",
        "system,",
        "system",
        "`loggedInMID`:",
        "`getMyDLHCPs`:",
        "formats.",
        "name",
        "email",
        "mid):",
        "provides",
        "Retrieve",
        "could",
        "**Methods:**",
        "integrated",
        "sendMessage",
        "pid",
        "information.",
        "message,",
        "Requirements:**",
        "Send",
        "also",
        "getMyDLHCPs",
        "transaction",
        "larger",
        "`SendMessageAction`",
        "instances",
        "*",
        "patient",
        "emails.",
        "adding",
        "emailVal",
        "comprehensive",
        "validating",
        "database.",
        "messaging",
        "Manage",
        "HCP",
        "data",
        "mBean",
        "(long",
        "emailer",
        "personnel,",
        "mBean):",
        "patient.",
        "messages",
        "Class",
        "patientDAO",
        "messVal",
        "(Data",
        "`transactionDAO`:",
        "getPersonnelName",
        "logs",
        "`EMailValidator`",
        "designated",
        "**Attributes:**",
        "message.",
        "transactionDAO",
        "information",
        "(MessageBean",
        "given",
        "class:",
        "allows",
        "ID)",
        "handling",
        "getMyRepresentees",
        "getPatientName",
        "list",
        "**Use",
        "`patientDAO`,",
        "personnel",
        "sending",
        "Case",
        "personnel.",
        "`emailVal`,",
        "service.",
        "personnelDAO",
        "`personnelDAO`,",
        "respectively.",
        "Object)",
        "instance",
        "patients.",
        "`sendMessage`",
        "system.",
        "(Medical",
        "`getPatientName`",
        "send",
        "summary",
        "`messVal`:",
        "accessing",
        "operations",
        "loggedInMID",
        "getDLHCPsFor",
        "class",
        "`EmailUtil`",
        "users",
        "logged-in",
        "to:",
        "user",
        "recipient(s).",
        "management",
        "represents.",
        "patients",
        "interface,",
        "`getPersonnelName`",
        "**Purpose:**",
        "MID.",
        "`getDLHCPsFor`",
        "mid",
        "`emailer`:",
        "HCPs",
        "Sends",
        "pid):",
        "used",
        "`messageDAO`,",
        "`getMyRepresentees`:",
        "database",
        "Retrieves",
        "provide",
        "iTrust",
        "patient,",
        "SendMessage.jsp.",
        "methods"
    ],
    "SetSecurityQuestionAction": [
        "a)`:",
        "MID",
        "logged",
        "Staff",
        "retrieving",
        "Summary:**",
        "@author",
        "system",
        "`loggedInMID`:",
        "Constructor",
        "Name:**",
        "retrieves",
        "checks",
        "provides",
        "`retrieveInformation()`:",
        "**Methods:**",
        "authDAO",
        "information.",
        "Identifier)",
        "allowing",
        ")",
        "Private",
        "throws",
        "manage",
        "Mapping:**",
        "*",
        "initializes",
        "`authDAO`:",
        "`checkMID(long",
        "user.",
        "database.",
        "Patient",
        "updateInformation",
        "provided",
        "(",
        "factory,",
        "rLoggedInMID)`:",
        "`loggedInMID`",
        "`updateInformation(SecurityQA",
        "returns",
        "ensures",
        "staff/editPersonnell.jsp",
        "**Attributes:**",
        "summary:",
        "information",
        "Method",
        "staff/editMyDemographics.jsp",
        "`SetSecurityQuestionAction(DAOFactory",
        "retrieveInformation",
        "questions/answers",
        "`authDAO`",
        "patient/editMyDemographics.jsp",
        "question/answer",
        "**Use",
        "security",
        "Case",
        "update",
        "Handles",
        "currently",
        "`AuthDAO`",
        "instance",
        "long",
        "Used",
        "attributes.",
        "following",
        "system.",
        "(Medical",
        "method",
        "`SecurityQA`",
        "loggedInMID",
        "mid)`:",
        "checkMID",
        "authentication",
        "class",
        "users",
        "cases:",
        "user",
        "exists",
        "patient/editMyDemographics.jsp,",
        "not.",
        "exception",
        "**Class",
        "**Purpose:**",
        "staff/editMyDemographics.jsp,",
        "using",
        "way",
        "mid",
        "setting",
        "handle",
        "updates",
        "SetSecurityQuestionAction",
        "use",
        "used",
        "interact",
        "database",
        "wants",
        "laurenhayward",
        "iTrust",
        "bean."
    ],
    "SurveyAction": [
        "action.",
        "linked",
        "add",
        "patient",
        "case",
        "initializes",
        "visit",
        "user's",
        "adding",
        "**Attributes:**",
        "visitID",
        "class",
        "MID",
        "adds",
        "constructor",
        "logged",
        "logged-in",
        "class:",
        "user",
        "ID",
        "database,",
        "`loggedInMID`:",
        "addSurvey",
        "database.",
        "surveyBean",
        "office",
        "DBException`:",
        "**Purpose:**",
        "`transDAO`:",
        "surveyDAO",
        "log",
        "bean,",
        "survey",
        "ID.",
        "taking",
        "`addSurvey(SurveyBean",
        "visitID)",
        "map",
        "`surveyDAO`:",
        "`SurveyAction(DAOFactory",
        "requirement,",
        "data",
        "`SurveyAction`",
        "**Methods:**",
        "completed",
        "`TransactionDAO`",
        "DAOFactory",
        "use",
        "linking",
        "used",
        "Additionally,",
        "transDAO",
        "object",
        "long",
        "database",
        "transactions",
        "`SurveyDAO`",
        "factory,",
        "throws",
        "summary",
        "loggedInMID)`:",
        "logging",
        "method",
        "sets",
        "surveys",
        "surveyBean,",
        "record",
        "added,",
        "transaction",
        "loggedInMID",
        "*",
        "logs"
    ],
    "UpdateCPTCodeListAction": [
        "`addCPTCode(ProcedureBean",
        "medical,",
        "responsible",
        "Add",
        "DAO",
        "List",
        "MID",
        "services",
        "adds",
        "functionality",
        "describes",
        "Verify",
        "(medical",
        "are:",
        "@author",
        "Procedures)",
        "`loggedInMID`:",
        "http://www.ama-assn.org/ama/pub/physician-resources/solutions-managing-your-practice/coding-billing-insurance/cpt/about-cpt.shtml",
        "transactions.",
        "Name:**",
        "Constructor",
        "correctly",
        "administrative,",
        "updating",
        "financial,",
        "`updateInformation(ProcedureBean",
        "surgical,",
        "provides",
        "communicate",
        "**Methods:**",
        "procedure)",
        "permissions",
        "information.",
        "`cptDAO`,",
        "cptDAO",
        "object",
        "Requirements:**",
        "number",
        "manage",
        "`ProcedureBeanValidator`",
        "`CPTCodesDAO`",
        "Update",
        "meet",
        "CPT",
        "*",
        "updateCode",
        "case",
        "organizations,",
        "initializes",
        "Java",
        "UpdateCPTCodeListAction",
        "comprehensive",
        "`UpdateCPTCodeListAction`",
        "factory",
        "managing",
        "purposes.",
        "validator",
        "physicians,",
        "code",
        "actions",
        "database.",
        "validator,",
        "`cptDAO`:",
        "page.",
        "accurately",
        "persisted",
        "data",
        "updateInformation",
        "perform",
        "`validator`:",
        "`ProcedureBean`",
        "factory,",
        "Code",
        "reference",
        "existing",
        "returns",
        "validate",
        "`cptDAO`",
        "set",
        "ensures",
        "logs",
        "`transDAO`.",
        "designed",
        "rows.",
        "addCPTCode",
        "**Attributes:**",
        "analytical",
        "information",
        "given",
        "procedures)",
        "class:",
        "coders,",
        "codes",
        "necessary",
        "list",
        "**Use",
        "update",
        "Case",
        "payers",
        "editCPTProcedureCodes.jsp",
        "requirements",
        "uses",
        "transDAO",
        "new",
        "long",
        "Used",
        "@see",
        "updated",
        "(Medical",
        "summary",
        "loggedInMID)`:",
        "administrator",
        "method",
        "diagnostic",
        "loggedInMID",
        "proc)`:",
        "procedures",
        "class",
        "medical",
        "proc",
        "uniform",
        "CPTs.",
        "validates",
        "validated",
        "**Class",
        "`updateCode(ProcedureBean",
        "**Purpose:**",
        "`transDAO`:",
        "patients,",
        "log",
        "MID.",
        "using",
        "administrators.",
        "bean",
        "`TransactionDAO`",
        "updates",
        "among",
        "use",
        "Adds",
        "objects.",
        "used",
        "interact",
        "database",
        "Updates",
        "laurenhayward",
        "administrators",
        "procedure",
        "accreditation",
        "transaction",
        "`UpdateCPTCodeListAction(DAOFactory"
    ],
    "UpdateHospitalListAction": [
        "message",
        "MID",
        "adds",
        "functionality",
        "DAOs",
        "system,",
        "performerID)`:",
        "transactions:",
        "@author",
        "updating",
        "hospitalListing.jsp",
        "Adding",
        "provides",
        "**Methods:**",
        "information.",
        "addHospital",
        "TransactionDAO,",
        "3.",
        "Mapping:**",
        "1.",
        "*",
        "HospitalsDAO,",
        "case",
        "layer",
        "implementing",
        "`addHospital(HospitalBean",
        "performer",
        "ID",
        "`transDAO`",
        "database,",
        "hospitals",
        "`addHospital`",
        "updateInformation",
        "provided",
        "providing",
        "`performerID`:",
        "performing",
        "factory,",
        "trail",
        "updateHospital",
        "performerID",
        "existing",
        "hospital",
        "`updateInformation(HospitalBean",
        "returns",
        "hospDAO",
        "logs",
        "add",
        "**Attributes:**",
        "made",
        "information",
        "class:",
        "Updating",
        "`UpdateHospitalListAction(DAOFactory",
        "Logging",
        "list",
        "**Use",
        "update",
        "hospital,",
        "Case",
        "Handles",
        "`updateInformation`",
        "transDAO",
        "hosp)`:",
        "new",
        "instance",
        "long",
        "scenarios:",
        "Used",
        "`hospDAO`:",
        "following",
        "updated",
        "system.",
        "summary",
        "information,",
        "method",
        "2.",
        "encapsulation",
        "person",
        "audit",
        "valid",
        "class",
        "`updateHospital(HospitalBean",
        "Itrust",
        "UpdateHospitalListAction",
        "information:",
        "Requirement",
        "management",
        "validates",
        "status",
        "**Purpose:**",
        "`transDAO`:",
        "log",
        "hospital:",
        "abstraction",
        "changes",
        "handle",
        "updates",
        "use",
        "private",
        "used",
        "constructor,",
        "interact",
        "database",
        "updates,",
        "successfully.",
        "laurenhayward",
        "transactions",
        "sets",
        "related",
        "transaction",
        "methods",
        "hosp"
    ],
    "UpdateICDCodeListAction": [
        "ICD)",
        "responsible",
        "Add",
        "List",
        "functionality",
        "DAOs",
        "adding,",
        "(diagnosis)",
        "performerID)`:",
        "quickly",
        "@author",
        "understand",
        "data.",
        "wide",
        "updating",
        "ID.",
        "provides",
        "addition",
        "classify",
        "**Methods:**",
        "`ICDCodesDAO`",
        "information.",
        "codes.",
        "object",
        "`updateInformation(DiagnosisBean",
        "allowing",
        "`DiagnosisBean`.",
        "variety",
        "Health",
        "`icdDAO`:",
        "causes",
        "auditing",
        "Update",
        "(most",
        "(diagnoses)",
        "*",
        "case",
        "adding",
        "Java",
        "`UpdateICDCodeListAction(DAOFactory",
        "Statistical",
        "external",
        "managing",
        "codes,",
        "validator",
        "purposes.",
        "ID",
        "performer",
        "code",
        "diagnosis",
        "database.",
        "disease.",
        "symptoms,",
        "representing",
        "Diseases",
        "data",
        "signs,",
        "unique",
        "purpose,",
        "updateInformation",
        "provided",
        "Log",
        "injury",
        "specific",
        "Related",
        "Classification",
        "ICD",
        "`validator`:",
        "`performerID`:",
        "performing",
        "factory,",
        "Code",
        "performerID",
        "International",
        "existing",
        "developers",
        "high-level",
        "returns",
        "validate",
        "logs",
        "complaints,",
        "**Attributes:**",
        "entry",
        "message.",
        "attributes,",
        "information",
        "given",
        "diagn",
        "editICDCodes.jsp",
        "based",
        "codes",
        "diseases",
        "abbreviation",
        "handling",
        "icdDAO",
        "necessary",
        "Use",
        "map",
        "update",
        "Case",
        "Handles",
        "`DiagnosisBeanValidator`",
        "overview",
        "transDAO",
        "instance",
        "new",
        "long",
        "Used",
        "@see",
        "circumstances",
        "http://www.cdc.gov/nchs/icd9.htm",
        "summary",
        "Problems",
        "Requirements:",
        "person",
        "`UpdateICDCodeListAction`",
        "Validate",
        "class's",
        "class",
        "constructor",
        "(Diagnosis)",
        "social",
        "diagn)`:",
        "methods,",
        "successful,",
        "`addICDCode(DiagnosisBean",
        "**Class",
        "update.",
        "updating,",
        "`transDAO`:",
        "log",
        "findings,",
        "abnormal",
        "`UpdateICDCodeListAction`:",
        "`TransactionDAO`",
        "requirements.",
        "use",
        "Adds",
        "used",
        "addICDCode",
        "interact",
        "database",
        "Updates",
        "laurenhayward",
        "Purpose:**",
        "success",
        "commonly",
        "sets",
        "method,",
        "known",
        "methods",
        "transactional"
    ],
    "UpdateLOINCListAction": [
        "responsible",
        "MID",
        "`LOINCDAO`",
        "Number)",
        "transactions.",
        "laboratory",
        "updating",
        "Used.",
        "LOINCs.",
        "checks",
        "data,",
        "Adding",
        "provides",
        "(LOINC)",
        "**Methods:**",
        "integrity,",
        "objects",
        "information.",
        "Identifiers",
        "object",
        "Names",
        "Requirements:**",
        "operations.",
        "3.",
        "manage",
        "1.",
        "4.",
        "logging",
        "code.",
        "adding",
        "managing",
        "ones.",
        "validator",
        "`LOINCBeanValidator`",
        "codes,",
        "code",
        "database,",
        "Codes)",
        "database.",
        "`lDAO`:",
        "Codes",
        "mechanism",
        "input",
        "data",
        "updateInformation",
        "`validator`:",
        "`performerID`:",
        "performerID",
        "reference",
        "existing",
        "professionals",
        "validate",
        "LOINC",
        "http://loinc.org/",
        "logs",
        "add",
        "them.",
        "(Logical",
        "**Attributes:**",
        "made",
        "diagn",
        "class:",
        "`updateInformation(LOINCbean",
        "Updating",
        "Validating",
        "codes",
        "allows",
        "Logging",
        "ensuring",
        "transaction.",
        "**Use",
        "update",
        "Case",
        "Handles",
        "standard",
        "Information",
        "scenario",
        "transDAO",
        "new",
        "instance",
        "@see",
        "following",
        "implement",
        "system.",
        "(Medical",
        "summary",
        "2.",
        "duplicate",
        "person",
        "observations.",
        "class",
        "users",
        "medical",
        "cases:",
        "need",
        "validates",
        "diagn)`:",
        "lDAO",
        "Observation",
        "**Purpose:**",
        "`transDAO`:",
        "log",
        "changes",
        "LOINCs",
        "consistency",
        "bean",
        "`TransactionDAO`",
        "updates",
        "use",
        "Adds",
        "objects.",
        "used",
        "observations,",
        "`UpdateLOINCListAction`",
        "`add(LOINCbean",
        "interact",
        "database",
        "Updates",
        "transactions",
        "Logical",
        "iTrust",
        "universal",
        "identifying"
    ],
    "UpdateNDCodeListAction": [
        "med",
        "List",
        "(Prescription)",
        "DAOs",
        "performerID)`:",
        "medication)",
        "@author",
        "States",
        "drugs",
        "transactions.",
        "`NDCodesDAO`",
        "updating",
        "data,",
        "provides",
        "MedicationBean",
        "**Methods:**",
        "medications)",
        "`UpdateNDCodeListAction`",
        "intended",
        "Requirements:**",
        "(prescription",
        "National",
        "manage",
        "`UpdateNDCodeListAction(DAOFactory",
        "*",
        "updateCode",
        "initializes",
        "med)`:",
        "ID",
        "validator",
        "code",
        "two",
        "database,",
        "database.",
        "use.",
        "class,",
        "input",
        "(NDC)",
        "updateInformation",
        "product",
        "ND",
        "medications.",
        "editNDCodes.jsp",
        "`validator`:",
        "`performerID`:",
        "factory,",
        "Code",
        "performerID",
        "existing",
        "methods:",
        "validate",
        "action",
        "add",
        "prescription",
        "`MedicationBeanValidator`",
        "**Attributes:**",
        "`addNDCode()`",
        "information",
        "making",
        "class:",
        "codes",
        "allows",
        "list,",
        "`ndDAO`:",
        "list.",
        "transaction.",
        "list",
        "**Use",
        "update",
        "Case",
        "Handles",
        "identifier",
        "Drug",
        "transDAO",
        "instance",
        "new",
        "long",
        "Used",
        "@see",
        "implement",
        "main",
        "summary",
        "method",
        "ndDAO",
        "`addNDCode(MedicationBean",
        "medication).",
        "NDC",
        "class",
        "constructor",
        "users",
        "http://www.fda.gov/Drugs/InformationOnDrugs/ucm142438.htm",
        "United",
        "`updateInformation()`.",
        "user",
        "need",
        "web",
        "`updateCode(MedicationBean",
        "**Class",
        "addNDCode",
        "validator.",
        "`transDAO`:",
        "log",
        "changes",
        "application",
        "`updateInformation(MedicationBean",
        "`TransactionDAO`",
        "updates",
        "Adds",
        "private",
        "objects.",
        "used",
        "interact",
        "Updates",
        "laurenhayward",
        "Purpose:**",
        "human",
        "sets",
        "defaults",
        "universal",
        "methods"
    ],
    "OfficeVisitBaseAction": [
        "visit",
        "patient's",
        "equivalent",
        "retrieve",
        "MID",
        "characters",
        "verified",
        "correctness",
        "inserting",
        "common",
        "PersonnelBaseAction}",
        "Name:**",
        "{@link",
        "verifies",
        "ID.",
        "`getOvID()`:",
        "provides",
        "pidString,",
        "special",
        "**Methods:**",
        "thrown",
        "visits",
        "ovDAO",
        "encodes",
        "Requirements:**",
        "also",
        "base",
        "page",
        "Pass",
        "3.",
        "1.",
        "4.",
        "`encode(String",
        "representation.",
        "requirement:",
        "*",
        "case",
        "patient",
        "PatientBaseAction.",
        "initializes",
        "HTML",
        "input)`:",
        "certain",
        "`ovDAO`:",
        "ID",
        "code",
        "actions",
        "encode",
        "`ovID`:",
        "visit.",
        "input",
        "PatientBaseAction}",
        "unique",
        "(herited",
        "requires",
        "patient.",
        "factory,",
        "representation",
        "implementation",
        "functionalities",
        "returns",
        "action",
        "`OfficeVisitBaseAction(DAOFactory",
        "action.",
        "**Attributes:**",
        "kick",
        "given",
        "convert",
        "allow",
        "verify",
        "whenever",
        "office",
        "created",
        "Use",
        "associated",
        "**Use",
        "map",
        "Case",
        "MID,",
        "extends",
        "`checkOfficeVisitID`",
        "identifier",
        "editing",
        "`PatientBaseAction`)",
        "OfficeVisitBaseAction",
        "abstract",
        "contains",
        "`encode`",
        "involve",
        "instance",
        "identifiers",
        "actions.",
        "similar",
        "summary",
        "IDs",
        "method",
        "2.",
        "string",
        "`getOvID`",
        "association",
        "existence.",
        "valid",
        "class",
        "includes",
        "constructor",
        "(which",
        "`pid`:",
        "user",
        "relating",
        "String",
        "exception",
        "**Class",
        "**Purpose:**",
        "`OfficeVisitDAO`",
        "`PatientBaseAction`",
        "visits.",
        "among",
        "use",
        "default",
        "concrete",
        "used",
        "existence",
        "constructor,",
        "home",
        "page).",
        "`checkOfficeVisitID(String",
        "database",
        "getOvID",
        "ovID",
        "patient,",
        "related",
        "ovIDString)`:",
        "methods",
        "interacting",
        "checkOfficeVisitID"
    ],
    "PatientBaseAction": [
        "OfficeVisitBaseAction}",
        "exceptions",
        "patient's",
        "MID",
        "functionality",
        "thrown,",
        "asserting",
        "correctness",
        "incorrect",
        "(long)",
        "exceptions.",
        "PersonnelBaseAction}",
        "JSPs",
        "rewrite",
        "{@link",
        "doesn't",
        "strict",
        "exist",
        "Cases:**",
        "Subclasses",
        "ID.",
        "dealing",
        "checks",
        "**Methods:**",
        "pid",
        "information.",
        "object",
        "passed",
        "loads",
        "valid,",
        "number",
        "assert",
        "it's",
        "require",
        "wrong",
        "editPatient.jsp).",
        "*",
        "patient",
        "input)`:",
        "extend",
        "ID",
        "actions",
        "database,",
        "patients'",
        "page.",
        "input",
        "context",
        "provided",
        "errors",
        "getPid",
        "throwing",
        "requires",
        "exist.",
        "patient.",
        "factory,",
        "MIDs.",
        "held",
        "existing",
        "returns",
        "correct",
        "action",
        "ensures",
        "existence,",
        "`checkPatientID(String",
        "way,",
        "**Attributes:**",
        "`PatientBaseAction(DAOFactory",
        "class:",
        "create",
        "associate",
        "allows",
        "whenever",
        "resulting",
        "access",
        "ensuring",
        "Use",
        "associated",
        "(e.g.",
        "**Use",
        "getting",
        "MID,",
        "editing",
        "loading,",
        "class.",
        "abstract",
        "extended",
        "long",
        "preventing",
        "format",
        "checkPatientID",
        "`factory`:",
        "similar",
        "summary",
        "method",
        "contract",
        "string",
        "existence.",
        "functionality,",
        "whether",
        "class",
        "constructor",
        "JSP",
        "`pid`:",
        "user",
        "need",
        "exists",
        "String",
        "exception",
        "**Purpose:**",
        "`PatientBaseAction`",
        "suitable",
        "`getPid()`:",
        "private",
        "checked",
        "concrete",
        "existence",
        "home",
        "ID,",
        "database",
        "pidString)`:",
        "patient,",
        "checking",
        "initialize",
        "factory",
        "runtime",
        "kicked"
    ],
    "PersonnelBaseAction": [
        "retrieve",
        "scenarios",
        "`long`",
        "functionality",
        "thrown,",
        "asserting",
        "correctness",
        "rewrite",
        "`PersonnelBaseAction(DAOFactory,",
        "{@link",
        "strict",
        "Cases:**",
        "Subclasses",
        "ID.",
        "dealing",
        "checks",
        "provides",
        "**Methods:**",
        "pid",
        "information.",
        "object",
        "passed",
        "loads",
        "base",
        "valid,",
        "**Similarity",
        "page",
        "require",
        "wrong",
        "`DAOFactory`",
        "editPatient.jsp).",
        "*",
        "patient",
        "`checkPersonnelID(String)`:",
        "extend",
        "ID",
        "actions",
        "value",
        "class,",
        "`PersonnelBaseAction`",
        "page.",
        "representing",
        "input",
        "PatientBaseAction}",
        "context",
        "provided",
        "getPid",
        "requires",
        "classes:**",
        "MIDs.",
        "held",
        "existing",
        "used.",
        "implementation",
        "returns",
        "validate",
        "action",
        "ensures",
        "designed",
        "way,",
        "**Attributes:**",
        "given",
        "rather",
        "class:",
        "associate",
        "allows",
        "whenever",
        "resulting",
        "IDs.",
        "`pid`",
        "ensuring",
        "Use",
        "associated",
        "(e.g.",
        "**Use",
        "personnel",
        "getting",
        "personnel.",
        "editing",
        "class.",
        "abstract",
        "String)`:",
        "format",
        "`factory`:",
        "similar",
        "summary",
        "method",
        "IDs",
        "contract",
        "string",
        "existence.",
        "functionality,",
        "valid",
        "class",
        "constructor",
        "JSP",
        "`pid`:",
        "user",
        "need",
        "personnel'",
        "exception",
        "**Purpose:**",
        "way",
        "load,",
        "`PatientBaseAction`",
        "public",
        "`getPid()`:",
        "default",
        "attribute",
        "private",
        "checked",
        "concrete",
        "used",
        "existence",
        "home",
        "ID,",
        "checkPersonnelID",
        "sets",
        "specifically",
        "factory",
        "runtime",
        "kicked"
    ],
    "AdverseEventBean": [
        "holds",
        "patient's",
        "setDate",
        "retrieve",
        "storage",
        "MID",
        "functionality",
        "containing",
        "Sets",
        "`getDate()`:",
        "`date`:",
        "`getDescription()`:",
        "Here's",
        "code)`:",
        "`description`:",
        "Source",
        "getStatus",
        "data.",
        "`setDrug(String",
        ">",
        "get",
        "name",
        "**Methods:**",
        "prescriber",
        "Prescriber",
        "`setPrescriber(String",
        "`getDrug()`:",
        "getId",
        "`setDescription(String",
        "getPrescriber",
        "number",
        "phone",
        "setMID",
        "id",
        "`getCode()`:",
        "date)`:",
        "prescriber.",
        "event",
        "together).",
        "`getMID()`:",
        "*",
        "Getters",
        "Java",
        "status)`:",
        "adverse",
        "(with",
        "number.",
        "Generate",
        "code",
        "purpose",
        "setStatus",
        "`Prescriber`:",
        "setId",
        "representing",
        "concatenating",
        "`getStatus()`:",
        "various",
        "data",
        "mID)`:",
        "unique",
        "identification",
        "Hint:",
        "`id`:",
        "`AdverseEventBean`:",
        "store",
        "uniquely",
        "setDrug",
        "description",
        "`drug`:",
        "specifying",
        "set",
        "minor",
        "**Attributes:**",
        "`code`:",
        "information",
        "Setters",
        "formatting",
        "based",
        "create",
        "numbers",
        "Use",
        "`AdverseEventBean`",
        "must",
        "easily)",
        "identifier",
        "string.",
        "`status`:",
        "getDrug",
        "date",
        "setDescription",
        "`setId(int",
        "Period.",
        "integer",
        "(Eclipse",
        "id)`:",
        "setPrescriber",
        "summary",
        "`getPrescriber()`:",
        "string",
        "event.",
        "`getId()`:",
        "added",
        "`setMID(String",
        "description)`:",
        "bean's",
        "setCode",
        "class",
        "drug.",
        "drugs,",
        "medical",
        "events",
        "brief",
        "drug)`:",
        "indicating",
        "Returns",
        "exception",
        "drug",
        "status",
        "storing",
        "**Purpose:**",
        "`MID`:",
        "Little",
        "`setDate(String",
        "getMID",
        "bean",
        "prescriber)`:",
        "used",
        "attributes",
        "getDate",
        "integer.",
        "getCode",
        "related",
        "`setStatus(String",
        "`setCode(String",
        "identifying",
        "getDescription",
        "methods",
        "mID"
    ],
    "AllergyBean": [
        "functionality",
        "`getDescription()`:",
        "AllergyBean",
        "`description`:",
        "Source",
        "data.",
        ">",
        "found.",
        "firstFound",
        "**Methods:**",
        "`setFirstFound(Date)`:",
        "object",
        "allergies,",
        "getId",
        "setPatientID",
        "phone",
        "simply",
        "id",
        "it's",
        "`firstFound`:",
        "together).",
        "*",
        "patient",
        "Getters",
        "\"MM/dd/yyyy\",",
        "cloned",
        "getPatientID",
        "(with",
        "Generate",
        "`getFirstFound()`:",
        "ID",
        "purpose",
        "value",
        "null",
        "setId",
        "patientID",
        "concatenating",
        "data",
        "cloning",
        "unique",
        "getFirstFound",
        "allergy",
        "Hint:",
        "`id`:",
        "store",
        "description",
        "toString",
        "representation",
        "getFirstFoundStr",
        "returns",
        "occurs",
        "minor",
        "attribute,",
        "**Attributes:**",
        "including",
        "Setters",
        "class:",
        "formatting",
        "create",
        "numbers",
        "Use",
        "must",
        "easily)",
        "describing",
        "identifier",
        "belongs",
        "setDescription",
        "date",
        "Period.",
        "empty",
        "(Eclipse",
        "format",
        "summary",
        "allergy,",
        "string",
        "`getId()`:",
        "added",
        "Date",
        "`getFirstFoundStr()`:",
        "bean's",
        "class",
        "Allergies.",
        "exception",
        "storing",
        "**Purpose:**",
        "Little",
        "description,",
        "bean",
        "`getPatientID()`:",
        "default",
        "attribute",
        "used",
        "error",
        "`setDescription(String)`:",
        "copy",
        "ID,",
        "`patientID`:",
        "setFirstFound",
        "`toString()`:",
        "found",
        "sets",
        "first",
        "getDescription"
    ],
    "ApptBean": [
        "setDate",
        "retrieve",
        "(set",
        "time",
        "`date`:",
        "Summary:**",
        "retrieving",
        "system",
        "modify",
        "parts",
        "Timestamp",
        "setComment",
        "`apptType`:",
        "provides",
        "`comment`:",
        "**Methods:**",
        "setPatient",
        "property",
        "allowing",
        "simple",
        "comment",
        "getComment",
        "effective",
        "require",
        "*",
        "provider",
        "getPatient",
        "patient",
        "Getters",
        "Java",
        "cases",
        "managing",
        "represents",
        "@return",
        "etc.)",
        "Creating",
        "application.",
        "hcp",
        "data",
        "unique",
        "represent",
        "visit,",
        "specific",
        "setHcp",
        "name,",
        "get)",
        "Overall,",
        "getHcp",
        "**Attributes:**",
        "including",
        "attributes,",
        "information",
        "comments",
        "class:",
        "healthcare",
        "(e.g.,",
        "type",
        "based",
        "setApptType",
        "essential",
        "`hcp`:",
        "associated",
        "appointment",
        "**Use",
        "cases:**",
        "`patient`:",
        "schedules",
        "Searching",
        "identifier",
        "date",
        "ApptBean",
        "check-up,",
        "companies",
        "as:",
        "type,",
        "integer",
        "long",
        "system.",
        "insurance",
        "summary",
        "information,",
        "appointment.",
        "string",
        "Transmitting",
        "additional",
        "appointments",
        "class",
        "apptType",
        "**Class",
        "storing",
        "criteria",
        "way",
        "suitable",
        "application",
        "encapsulate",
        "bean",
        "use",
        "doctor's",
        "used",
        "appointment,",
        "getDate",
        "filtering",
        "notes",
        "providers",
        "related",
        "record",
        "getApptType"
    ],
    "ApptTypeBean": [
        "0",
        "setName",
        "case",
        "duration.",
        "Java",
        "initializes",
        "**Attributes:**",
        "`ApptTypeBean()`:",
        "class",
        "constructor",
        "attributes,",
        "information",
        "given",
        "appointments,",
        "`setDuration(int",
        "getter",
        "name)`:",
        "getName",
        "represents",
        "type",
        "`getName()`:",
        "String",
        "understand",
        "different",
        "`getDuration()`:",
        "setter",
        "`name`:",
        "minutes",
        "**Purpose:**",
        "class,",
        "ITrust",
        "appointment",
        "name",
        "null",
        "duration)`:",
        "map",
        "specified",
        "requirement.",
        "representing",
        "data",
        "**Methods:**",
        "int",
        "getDuration",
        "bean",
        "updates",
        "purpose,",
        "use",
        "default",
        "attribute",
        "`setName(String",
        "used",
        "`ApptTypeBean(String",
        "setDuration",
        "`duration`:",
        "integer",
        "duration",
        "allowing",
        "types",
        "store",
        "system.",
        "summary",
        "manage",
        "method",
        "name,",
        "`ApptTypeBean`",
        "returns",
        "methods",
        "requirement:",
        "*",
        "effectively"
    ],
    "DiagnosisBean": [
        "classification",
        "getICDCode",
        "`getFormattedDescription()`:",
        "visit",
        "applications,",
        "visitID",
        "storage",
        "functionality",
        "container",
        "getClassification",
        "`getDescription()`:",
        "tracking",
        "`getOvDiagnosisID()`:",
        "`DiagnosisBean(String",
        "code)`:",
        "`ovDiagnosisID`:",
        "`description`:",
        "Source",
        "data.",
        ">",
        "`ovDiagnosisID`",
        "provides",
        "**Methods:**",
        "`setVisitID(long",
        "`getClassification()`:",
        "`DiagnosisBean()`:",
        "applicable).",
        "`visitID`",
        "Diagnosis.",
        "`setDescription(String",
        "diagnoses",
        "variety",
        "Requirements:**",
        "phone",
        "`description`",
        "vid)`:",
        "combining",
        "together).",
        "*",
        "patient",
        "Getters",
        "`classification`:",
        "getVisitID",
        "initializes",
        "`description`,",
        "records",
        "(with",
        "Generate",
        "ID",
        "code",
        "purpose",
        "represents",
        "diagnosis",
        "`getVisitID()`:",
        "representing",
        "concatenating",
        "context.",
        "data",
        "diagnosis.",
        "represent",
        "formatted",
        "`getICDCode()`:",
        "(optional)",
        "**Constructors:**",
        "`icdCode`,",
        "setICDCode",
        "Hint:",
        "`setOvDiagnosisID(long",
        "setters",
        "ICD",
        "store",
        "description",
        "(initially",
        "well",
        "\"no\",",
        "returns",
        "getters",
        "set",
        "minor",
        "designed",
        "`setICDCode(String",
        "**Attributes:**",
        "attributes,",
        "information",
        "making",
        "Setters",
        "class:",
        "optional",
        "formatting",
        "create",
        "numbers",
        "(if",
        "Use",
        "documenting",
        "getFormattedDescription",
        "associated",
        "**Use",
        "diagnoses.",
        "Case",
        "code,",
        "`DiagnosisBean`",
        "must",
        "easily)",
        "classification,",
        "setDescription",
        "Period.",
        "integer",
        "no-argument",
        "setOvDiagnosisID",
        "long",
        "hold",
        "overridden)",
        "diagnosis,",
        "(Eclipse",
        "summary",
        "string",
        "classification)`:",
        "`icdCode`",
        "added",
        "icdCode",
        "description)`:",
        "+",
        "bean's",
        "Setters:**",
        "class",
        "constructor",
        "medical",
        "`classification`",
        "vid",
        "String",
        "values",
        "exception",
        "storing",
        "setVisitID",
        "ovDiagnosisID",
        "**Purpose:**",
        "Little",
        "description,",
        "suitable",
        "**Getters",
        "bean",
        "use",
        "default",
        "attribute",
        "used",
        "getOvDiagnosisID",
        "attributes",
        "ovDiagnosisID)`:",
        "sets",
        "`icdCode`:",
        "method,",
        "getDescription",
        "`visitID`:"
    ],
    "DrugInteractionBean": [
        "message",
        "retrieve",
        "storage",
        "functionality",
        "`setSecondDrug(String)`:",
        "`getDescription()`:",
        "getSecondDrug",
        "`setFirstDrug(String)`:",
        "`description`:",
        "modify",
        "Source",
        "data.",
        "drugs",
        ">",
        "`secondDrug`",
        "name",
        "**Methods:**",
        "`firstDrug`:",
        "Requirements:**",
        "`DrugInteractionBean`",
        "phone",
        "`description`",
        "together).",
        "*",
        "Getters",
        "(with",
        "Generate",
        "getter",
        "getFirstDrug",
        "purpose",
        "two",
        "representing",
        "concatenating",
        "data",
        "one",
        "providing",
        "setSecondDrug",
        "Hint:",
        "store",
        "description",
        "setFirstDrug",
        "returns",
        "interaction.",
        "minor",
        "names",
        "designed",
        "`secondDrug`:",
        "**Attributes:**",
        "information",
        "`getFirstDrug()`:",
        "Setters",
        "class:",
        "formatting",
        "create",
        "interactions",
        "access",
        "numbers",
        "Use",
        "involved",
        "**Use",
        "Case",
        "must",
        "easily)",
        "setDescription",
        "Period.",
        "`getSecondDrug()`:",
        "hold",
        "attributes.",
        "(Eclipse",
        "summary",
        "added",
        "another.",
        "bean's",
        "class",
        "interaction",
        "user",
        "brief",
        "drugs.",
        "exception",
        "drug",
        "setter",
        "storing",
        "**Purpose:**",
        "Little",
        "bean",
        "second",
        "used",
        "`setDescription(String)`:",
        "`firstDrug`",
        "attributes",
        "`String`",
        "firstDrug",
        "sets",
        "attribute.",
        "secondDrug",
        "first",
        "getDescription",
        "methods"
    ],
    "Email": [
        "`equals(Object)`,",
        "`setTimeAdded(Timestamp)`:",
        "`setFrom(String)`:",
        "setFrom",
        "strings",
        "functionality",
        "otherToList",
        "Get",
        "containing",
        "time",
        "sender,",
        "setTimeAdded",
        "`Timestamp`",
        "subject.",
        "`timeAdded`:",
        "Source",
        "data.",
        "equals",
        ">",
        "email",
        "Implement",
        "body",
        "getFrom",
        "**Methods:**",
        "object",
        "phone",
        "`getFrom()`,",
        "hashing.",
        "3.",
        "`getSubject()`,",
        "manage",
        "1.",
        "4.",
        "setBody",
        "getToList",
        "together).",
        "6.",
        "from",
        "case",
        "`setBody(String)`:",
        "Getters",
        "emails.",
        "Java",
        "setSubject",
        "(with",
        "Generate",
        "managing",
        "purpose",
        "represents",
        "recipient(s),",
        "`toList`:",
        "address.",
        "representing",
        "concatenating",
        "various",
        "5.",
        "application.",
        "data",
        "subject",
        "fake",
        "separated",
        "toList",
        "subject,",
        "Hint:",
        "`setToList(List<String>)`:",
        "store",
        "addresses,",
        "toString",
        "representation",
        "`subject`:",
        "set",
        "timeAdded",
        "added.",
        "minor",
        "`equals`",
        "**Attributes:**",
        "getBody",
        "attributes,",
        "including",
        "given",
        "Setters",
        "setToList",
        "class:",
        "`setSubject(String)`:",
        "formatting",
        "create",
        "`getToListStr()`:",
        "8.",
        "numbers",
        "getToListStr",
        "Use",
        "list",
        "equality",
        "map",
        "must",
        "easily)",
        "`from`:",
        "`Email`",
        "timestamp.",
        "Period.",
        "email,",
        "listEquals",
        "`hashCode`",
        "(Eclipse",
        "getSubject",
        "getTimeAdded",
        "body.",
        "summary",
        "`getToList()`,",
        "2.",
        "string",
        "added",
        "`hashCode()`:",
        "bean's",
        "Fake",
        "`body`:",
        "hashCode",
        "class",
        "7.",
        "addresses.",
        "`getBody()`,",
        "recipients,",
        "Returns",
        "obj",
        "exception",
        "**Class",
        "storing",
        "Little",
        "`getTimeAdded()`,",
        "requirement,",
        "body,",
        "bean",
        "use",
        "used",
        "commas.",
        "recipient",
        "Purpose:**",
        "`toString()`:",
        "timestamp",
        "methods",
        "sender's",
        "Emails."
    ],
    "FamilyMemberBean": [
        "responsible",
        "setRelation",
        "full",
        "retrieve",
        "getFullName():",
        "functionality",
        "(long)",
        "retrieving",
        "FamilyMemberBean",
        "Source",
        "data.",
        "Name:**",
        ">",
        "member",
        "name",
        "**Methods:**",
        "information.",
        "allowing",
        "members.",
        "number",
        "phone",
        "getLastName():",
        "Family",
        "classes",
        "(String)",
        "together).",
        "carrier,",
        "getFullName",
        "*",
        "Getters",
        "Java",
        "(with",
        "getFirstName",
        "number.",
        "Generate",
        "getter",
        "setMid(long):",
        "purpose",
        "getRelation",
        "getRelation():",
        "class,",
        "concatenating",
        "data",
        "unique",
        "identification",
        "relation,",
        "setFirstName(String):",
        "lastName:",
        "getFirstName():",
        "Hint:",
        "store",
        "member's",
        "name,",
        "returns",
        "family",
        "minor",
        "designed",
        "details",
        "getMid",
        "lastName",
        "**Attributes:**",
        "attributes,",
        "given",
        "Setters",
        "class:",
        "setLastName",
        "formatting",
        "create",
        "first",
        "calculated",
        "numbers",
        "Use",
        "must",
        "easily)",
        "identifier",
        "getMid():",
        "Period.",
        "setFirstName",
        "firstName:",
        "(Eclipse",
        "summary",
        "carrier",
        "added",
        "last",
        "bean's",
        "class",
        "setLastName(String):",
        "name.",
        "firstName",
        "exception",
        "setter",
        "**Class",
        "storing",
        "**Purpose:**",
        "mid:",
        "Little",
        "Members.",
        "mid",
        "bean",
        "relation:",
        "getLastName",
        "used",
        "relation",
        "setRelation(String):",
        "provide",
        "sets",
        "setMid",
        "methods"
    ],
    "HCPDiagnosisBean": [
        "visit",
        "message",
        "retrieve",
        "storage",
        "functionality",
        "visitSat",
        "`setTreatmentSat(int",
        "getTreatmentSatisfaction",
        "methods.",
        "sat",
        "Source",
        "data.",
        ">",
        "`getHCPName()`:",
        "`numPatients`:",
        "`HCPDiagnosisBean`",
        "name",
        "`HCPID`:",
        "data,",
        "surveyCount",
        "**Methods:**",
        "object",
        "setLabList",
        "diagnosis-related",
        "medications",
        "number",
        "`treatmentSat`:",
        "phone",
        "satisfied",
        "`visitSat`:",
        "seen",
        "together).",
        "satisfaction",
        "lablist",
        "*",
        "provider",
        "`setHCPName(String",
        "`setMedList(List<MedicationBean>",
        "Getters",
        "case",
        "patient",
        "getLabList",
        "(with",
        "Generate",
        "`surveyCount`:",
        "`incNumPatients()`:",
        "ID",
        "name)`:",
        "purpose",
        "diagnosis",
        "getHCPName",
        "value",
        "`getTreatmentSatisfaction()`:",
        "representing",
        "concatenating",
        "data",
        "hcp",
        "getMedList",
        "unique",
        "purpose,",
        "lab",
        "getNumPatients",
        "Hint:",
        "HCPID",
        "`getHCP()`:",
        "prescribed",
        "store",
        "`medList`:",
        "percentage",
        "incNumPatients",
        "procedures,",
        "returns",
        "getVisitSatisfaction",
        "minor",
        "requirement",
        "**Attributes:**",
        "treatment",
        "`HCPname`:",
        "attributes,",
        "information",
        "given",
        "including",
        "Setters",
        "class:",
        "(HCP)",
        "healthcare",
        "`labList`:",
        "formatting",
        "create",
        "setVisitSat",
        "numbers",
        "Use",
        "list",
        "map",
        "medlist",
        "must",
        "easily)",
        "identifier",
        "hcp)`:",
        "HCPname",
        "medlist)`:",
        "getHCP",
        "Period.",
        "setHCPName",
        "integer",
        "hold",
        "(Eclipse",
        "HCP.",
        "summary",
        "information,",
        "`getMedList()`:",
        "added",
        "performed",
        "(or",
        "lablist)`:",
        "bean's",
        "procedures",
        "class",
        "`getNumPatients()`:",
        "count",
        "treatmentSat",
        "patients",
        "sat)`:",
        "exception",
        "`setHCP(long",
        "storing",
        "medList",
        "received",
        "labList",
        "**Purpose:**",
        "setMedList",
        "Little",
        "survey",
        "setTreatmentSat",
        "bean",
        "updates",
        "available)",
        "use",
        "`getVisitSatisfaction()`:",
        "used",
        "setHCP",
        "`setVisitSat(int",
        "total",
        "results",
        "increments",
        "provider's",
        "surveys.",
        "numPatients",
        "sets",
        "`getLabList()`:",
        "medications,",
        "surveys",
        "identifying",
        "`setLabList(List<LabProcedureBean>"
    ],
    "HCPLinkBean": [
        "storage",
        "functionality",
        "`isChecked()`:",
        "boolean",
        "code)`:",
        "Source",
        "understanding",
        "data.",
        "`setDrug(String",
        ">",
        "prescriber",
        "formatting.",
        "`getDrug()`:",
        "phone",
        "`getCode()`:",
        "`setChecked(boolean",
        "event",
        "HCPLinkBean",
        "together).",
        "mini-bean",
        "`prescriberMID`",
        "setChecked",
        "*",
        "case",
        "Getters",
        "Java",
        "adverse",
        "complex",
        "(with",
        "Generate",
        "ID",
        "code",
        "purpose",
        "value",
        "`drug`",
        "class,",
        "representing",
        "concatenating",
        "data",
        "mID)`:",
        "prescriberMID",
        "Hint:",
        "**Class:**",
        "perform",
        "`prescriberMID`:",
        "store",
        "`checked`:",
        "setDrug",
        "`drug`:",
        "`setPrescriberMID(long",
        "views.",
        "getPrescriberMID",
        "returns",
        "minor",
        "designed",
        "requirement",
        "`getPrescriberMID()`:",
        "**Attributes:**",
        "`code`:",
        "given",
        "viewPrescriptionRecords.jsp",
        "Setters",
        "class:",
        "formatting",
        "create",
        "pass",
        "numbers",
        "Use",
        "associated",
        "isChecked",
        "`checked`",
        "`code`",
        "map",
        "must",
        "easily)",
        "getDrug",
        "Period.",
        "integer",
        "long",
        "(Eclipse",
        "summary",
        "string",
        "added",
        "checked)`:",
        "holds,",
        "functionality,",
        "bean's",
        "whether",
        "setCode",
        "Setters:**",
        "class",
        "drug)`:",
        "indicating",
        "exception",
        "setPrescriberMID",
        "drug",
        "**Purpose:**",
        "Little",
        "**Getters",
        "bean",
        "use",
        "checked",
        "used",
        "interact",
        "reportAdverseEvent.jsp",
        "getCode",
        "sets",
        "`setCode(String",
        "methods",
        "mID"
    ],
    "HCPVisitBean": [
        "visit",
        "patient's",
        "retrieve",
        "`hcpMID`:",
        "storage",
        "functionality",
        "Sets",
        "getHCPSpecialty",
        "`HCPSpecialty`:",
        "boolean",
        "Source",
        "data.",
        "Name:**",
        "`setDesignated(boolean",
        ">",
        "`getHCPName()`:",
        "name",
        "`getHCPMID()`:",
        "**Methods:**",
        "allowing",
        "phone",
        "address",
        "date)`:",
        "setHCPAddr",
        "Mapping:**",
        "together).",
        "HCP's",
        "`HCPAddr`:",
        "*",
        "`setHCPName(String",
        "Getters",
        "Java",
        "(with",
        "Generate",
        "getter",
        "ID",
        "name)`:",
        "address,",
        "purpose",
        "getHCPName",
        "value",
        "\"\")",
        "capture",
        "HCP",
        "concatenating",
        "data",
        "visit,",
        "getOVDate",
        "HCPName",
        "setHCPSpecialty",
        "Hint:",
        "(default",
        "store",
        "`OVDate`",
        "`HCPSpecialty`",
        "val)`:",
        "`OVDate`:",
        "name,",
        "well",
        "`HCPAddr`",
        "minor",
        "attribute,",
        "`getOVDate()`:",
        "`isDesignated()`:",
        "addr",
        "designated",
        "**Attributes:**",
        "HCPVisitBean",
        "specialty,",
        "including",
        "information",
        "given",
        "Setters",
        "class:",
        "`setHCPSpecialty(String",
        "`setOVDate(String",
        "hcpMID",
        "`getHCPSpecialty()`:",
        "formatting",
        "create",
        "essential",
        "isDesignated",
        "addr)`:",
        "numbers",
        "Healthcare",
        "Use",
        "**Use",
        "HCPAddr",
        "Case",
        "must",
        "easily)",
        "setOVDate",
        "`setHCPAddr(String",
        "designated.",
        "date",
        "val",
        "Period.",
        "setHCPName",
        "`setHCPMID(long",
        "getHCPMID",
        "specialty)`:",
        "(Eclipse",
        "HCP.",
        "summary",
        "specialty",
        "`HCPName`",
        "added",
        "OVDate",
        "mid)`:",
        "Provider",
        "bean's",
        "whether",
        "class",
        "(HCP).",
        "setHCPMID",
        "`HCPName`:",
        "Requirement",
        "indicating",
        "setDesignated",
        "HCPSpecialty",
        "exception",
        "setter",
        "**Class",
        "storing",
        "retrieval.",
        "**Purpose:**",
        "Little",
        "mid",
        "getHCPAddr",
        "bean",
        "Provider.",
        "used",
        "attributes",
        "ID,",
        "Retrieves",
        "provide",
        "`designated`:",
        "`getHCPAddr()`:",
        "methods"
    ],
    "HealthRecord": [
        "setBloodPressureSystolic",
        "bloodPressureN",
        "\"X/Y\"",
        "`height`:",
        "retrieve",
        "patient's",
        "functionality",
        "`getBodyMassIndex()`:",
        "cholesterolHDL",
        "`personnelID`:",
        "setSmoker",
        "boolean",
        "health-related",
        "smoking",
        "Source",
        "`bloodPressureN`:",
        "data.",
        "`setters`",
        ">",
        "recorded",
        "data,",
        "provides",
        "isSmoker",
        "body",
        "**Methods:**",
        "setBloodPressureN",
        "getCholesterolTri",
        "blood",
        "`HealthRecord`",
        "`getTotalCholesterol()`:",
        "setBloodPressureD",
        "index",
        "simple",
        "setPatientID",
        "(mmHg),",
        "phone",
        "personnelID",
        "getDateRecorded",
        "status.",
        "kilograms,",
        "setCholesterolLDL",
        "manage",
        "diastolic",
        "together).",
        "weight",
        "*",
        "patient",
        "Getters",
        "mass",
        "getTotalCholesterol",
        "getPatientID",
        "cholesterol",
        "`getWeight()`,",
        "(with",
        "Generate",
        "getWeight",
        "ID",
        "purpose",
        "getCholesterolHDL",
        "getBloodPressureDiastolic",
        "value",
        "timestamp",
        "different",
        "facilitate",
        "health",
        "patientID",
        "concatenating",
        "data",
        "setWeight",
        "unique",
        "`isSmoker`:",
        "`getHeight()`,",
        "meters,",
        "Hint:",
        "store",
        "getHeight",
        "retrieval",
        "returns",
        "level",
        "minor",
        "getCholesterolLDL",
        "cholesterolLDL",
        "**Attributes:**",
        "getBloodPressureD",
        "setCholesterolHDL",
        "`cholesterolTri`:",
        "information",
        "making",
        "Setters",
        "class:",
        "healthcare",
        "bloodPressureD",
        "(e.g.,",
        "create",
        "formatting",
        "based",
        "setPersonnelID",
        "getBloodPressure",
        "numbers",
        "Use",
        "efficient",
        "cholesterolTri",
        "must",
        "easily)",
        "`cholesterolLDL`,",
        "rounding",
        "identifier",
        "setBloodPressureDiastolic",
        "represented",
        "systolic",
        "setCholesterolTri",
        "Period.",
        "integer",
        "setDateRecorded",
        "patients.",
        "`cholesterolHDL`,",
        "calculates",
        "triacylglycerol",
        "(Eclipse",
        "format",
        "system.",
        "getBloodPressureN",
        "`dateRecorded`:",
        "summary",
        "categories,",
        "string",
        "\"120/80\")",
        "added",
        "`bloodPressureD`:",
        "getBodyMassIndex",
        "bloodPressure",
        "getPersonnelID",
        "bean's",
        "whether",
        "class",
        "getBloodPressureSystolic",
        "medical",
        "height",
        "`weight`:",
        "indicating",
        "smoker",
        "levels",
        "levels,",
        "pressure,",
        "exception",
        "values",
        "units",
        "storing",
        "LDL,",
        "**Purpose:**",
        "way",
        "Little",
        "pressure",
        "`getters`",
        "suitable",
        "bean",
        "double",
        "integers",
        "use",
        "attribute",
        "HDL,",
        "dateRecorded",
        "weight,",
        "used",
        "Javabean",
        "total",
        "ID,",
        "height,",
        "`patientID`:",
        "professional",
        "(BMI)",
        "`getBloodPressure()`:",
        "setHeight",
        "record",
        "methods",
        "modification"
    ],
    "HospitalBean": [
        "hospitalName",
        "functionality",
        "`getHospitalName()`:",
        "hospitalID",
        "Summary:**",
        "hospital's",
        "demonstration",
        "Source",
        "data.",
        "obj)`",
        "equals",
        "retrieves",
        ">",
        "name",
        "checks",
        "provides",
        "**Methods:**",
        "properly",
        "objects",
        "intended",
        "setHospitalName",
        "object",
        "`setHospitalName(String",
        "phone",
        "hashing.",
        "manage",
        "together).",
        "`equals(HospitalBean",
        "*",
        "Getters",
        "Java",
        "HospitalBean",
        "purposes",
        "(with",
        "Generate",
        "ID",
        "`getHospitalID()`:",
        "purpose",
        "code",
        "two",
        "comparison",
        "value",
        "facilitate",
        "(note:",
        "hospitals",
        "concatenating",
        "application.",
        "another",
        "data",
        "obj)`:",
        "unique",
        "Hint:",
        "store",
        "only)",
        "hospital",
        "`setHospitalID(String",
        "getters",
        "returns",
        "setters,",
        "minor",
        "designed",
        "equal",
        "convenient",
        "**Attributes:**",
        "getHospitalID",
        "information",
        "Setters",
        "class:",
        "formatting",
        "create",
        "based",
        "enable",
        "numbers",
        "Use",
        "hospitalName)`:",
        "must",
        "easily)",
        "identifier",
        "hospital-related",
        "Period.",
        "compare",
        "(Eclipse",
        "other)`:",
        "summary",
        "proper",
        "method",
        "setHospitalID",
        "added",
        "hospital.",
        "`hospitalName`:",
        "getHospitalName",
        "`hashCode()`:",
        "bean's",
        "hashCode",
        "class",
        "obj",
        "overrides",
        "exception",
        "**Class",
        "storing",
        "**Purpose:**",
        "work",
        "using",
        "way",
        "Little",
        "encapsulate",
        "bean",
        "private",
        "used",
        "`equals(Object",
        "`hospitalID`:",
        "hash",
        "data-only",
        "hospitalID)`:",
        "encapsulates",
        "sets",
        "methods"
    ],
    "LabProcedureBean": [
        "`status`",
        "visit",
        "patient's",
        "functionality",
        "Sets",
        "statusComplete",
        "Completed",
        "`statusComplete()`:",
        "\"NOT",
        "getResults",
        "Source",
        "`statusNotReceived()`:",
        "getStatus",
        "data.",
        "`setters`",
        "`allow()`:",
        "Timestamp",
        ">",
        "laboratory",
        "setLoinc",
        "**Methods:**",
        "statusNotReceived",
        "pid",
        "procedure.",
        "number",
        "phone",
        "restrict",
        "`rights`",
        "`statusPending()`:",
        "alphanumeric",
        "start",
        "together).",
        "Restrict",
        "Unique",
        "*",
        "case",
        "Getters",
        "Java",
        "\"PENDING\",",
        "(with",
        "Generate",
        "RECEIVED\".",
        "purpose",
        "setStatus",
        "`ovID`:",
        "help",
        "Allow",
        "ordered.",
        "lhcp",
        "concatenating",
        "granted",
        "procedureID",
        "data",
        "setOvID",
        "specifies",
        "captures",
        "lab",
        "object.",
        "Digits",
        "Permission",
        "getPid",
        "setCommentary",
        "Hint:",
        "store",
        "patient.",
        "Identifier",
        "getTimestamp",
        "`rights`:",
        "minor",
        "designed",
        "**Attributes:**",
        "10-digit",
        "including",
        "information",
        "given",
        "Setters",
        "statusPending",
        "allow",
        "setTimestamp",
        "formatting",
        "create",
        "test,",
        "essential",
        "office",
        "numbers",
        "One",
        "Use",
        "\"PENDING\".",
        "status,",
        "map",
        "must",
        "easily)",
        "commentary",
        "identifier",
        "results,",
        "represented",
        "\"ALLOWED\".",
        "`status`:",
        "setRights",
        "`LabProcedureBean`:",
        "`loinc`:",
        "Period.",
        "\"RESTRICTED\".",
        "Pending",
        "(Long",
        "update,",
        "(Eclipse",
        "format",
        "setResults",
        "summary",
        "Not_Received",
        "Code),",
        "`timestamp`:",
        "LOIN",
        "added",
        "last",
        "getProcedureID",
        "getCommentary",
        "bean's",
        "either",
        "`commentary`:",
        "getRights",
        "nnnnn-n.",
        "class",
        "getLoinc",
        "\"COMPLETED\".",
        "`pid`:",
        "`restrict()`:",
        "`LabProcedureBean`",
        "exception",
        "Form",
        "9.",
        "status",
        "storing",
        "**Class",
        "RECEIVED\",",
        "update.",
        "ordered",
        "requirement.",
        "Little",
        "`getters`",
        "rights",
        "bean",
        "500",
        "use",
        "loinc",
        "attribute",
        "commentary,",
        "setPid",
        "YET",
        "`procedureID`:",
        "ID,",
        "results",
        "`results`:",
        "getOvID",
        "Date/Time",
        "Purpose:**",
        "ovID",
        "procedure",
        "characters.",
        "attribute.",
        "timestamp",
        "setProcedureID",
        "\"ALLOWED\""
    ],
    "LOINCbean": [
        "getComponent",
        "aKindOfProperty",
        "`labProcedureCode`:",
        "storage",
        "functionality",
        "setTimeAspect",
        "time",
        "`setTimeAspect(String",
        "system",
        "Source",
        "setSystem",
        "data.",
        "`timeAspect`",
        "setScaleType",
        ">",
        "aMethodType",
        "`getScaleType()`:",
        "setLabProcedureCode",
        "provides",
        "**Methods:**",
        "labProcedureCode",
        "aMethodType)`:",
        "property",
        "`setKindOfProperty(String",
        "aspect",
        "object",
        "getSystem",
        "`getSystem()`:",
        "aKindOfProperty)`:",
        "phone",
        "`kindOfProperty`",
        "`setComponent(String",
        "`timeAspect`:",
        "together).",
        "scale",
        "*",
        "case",
        "Getters",
        "`methodType`:",
        "(with",
        "`getMethodType()`:",
        "`component`",
        "Generate",
        "purpose",
        "code",
        "value",
        "setMethodType",
        "kindOfProperty",
        "representing",
        "concatenating",
        "`kindOfProperty`:",
        "data",
        "purpose,",
        "lab",
        "Hint:",
        "aComponent",
        "store",
        "Code",
        "Procedure",
        "returns",
        "getKindOfProperty",
        "`getComponent()`:",
        "minor",
        "aTimeAspect",
        "**Attributes:**",
        "attributes,",
        "information",
        "given",
        "making",
        "Setters",
        "class:",
        "timeAspect",
        "aScaleType",
        "easier",
        "formatting",
        "getTimeAspect",
        "create",
        "type",
        "getScaleType",
        "`setLabProcedureCode(String",
        "`component`:",
        "aComponent)`:",
        "numbers",
        "Use",
        "`LOINCbean`",
        "map",
        "must",
        "easily)",
        "`system`",
        "Codes.",
        "aLabProcedureCode",
        "`setSystem(String",
        "`system`:",
        "overview",
        "getLabProcedureCode",
        "Period.",
        "hold",
        "`getTimeAspect()`:",
        "(Eclipse",
        "`scaleType`",
        "Lab",
        "aScaleType)`:",
        "summary",
        "method",
        "string",
        "kind",
        "added",
        "`labProcedureCode`",
        "aLabProcedureCode)`:",
        "bean's",
        "class's",
        "getMethodType",
        "class",
        "scaleType",
        "`setScaleType(String",
        "`scaleType`:",
        "aTimeAspect)`:",
        "`setMethodType(String",
        "`getLabProcedureCode()`:",
        "methods,",
        "exception",
        "storing",
        "**Purpose:**",
        "Laboratory",
        "requirement.",
        "setComponent",
        "Little",
        "`methodType`",
        "component",
        "bean",
        "use",
        "used",
        "clear",
        "methodType",
        "aSystem)`:",
        "setKindOfProperty",
        "procedure",
        "aSystem",
        "sets",
        "`getKindOfProperty()`:"
    ],
    "MedicationBean": [
        "scenarios",
        "easy",
        "`getDescription()`:",
        "like",
        "system,",
        "code)`:",
        "lookup",
        "@author",
        "`description`:",
        "data.",
        "equals",
        "retrieves",
        "{@link",
        "enabling",
        "checks",
        "data,",
        "provides",
        "PrescriptionBean}",
        "**Methods:**",
        "-",
        "medication,",
        "object",
        "`setDescription(String",
        "allowing",
        "simple",
        "medications",
        "also",
        "description.",
        "`getNDCodeFormatted()`:",
        "National",
        "it's",
        "Mapping:**",
        "\"XXXXX-XXXXX\")",
        "Meneely",
        "code.",
        "See",
        "referred",
        "*",
        "applications.",
        "example:",
        "code",
        "represents",
        "comparison",
        "getNDCodeFormatted",
        "`MedicationBean`",
        "various",
        "visit;",
        "(implementation",
        "represent",
        "assigned",
        "formatted",
        "pharmacy",
        "ND",
        "description",
        "accurate",
        "processed.",
        "returns",
        "Overall,",
        "designed",
        "**Attributes:**",
        "processing",
        "including",
        "`setNDCode(String",
        "making",
        "class:",
        "research",
        "useful",
        "healthcare",
        "(e.g.,",
        "characteristics.",
        "office",
        "`getNDCode()`:",
        "medication",
        "associated",
        "efficient",
        "**Use",
        "fast",
        "equality",
        "managed",
        "Case",
        "details.",
        "setNDCode",
        "setDescription",
        "Drug",
        "overridden)",
        "that's",
        "other)`:",
        "NDCode",
        "summary",
        "information,",
        "manipulate",
        "string",
        "Andy",
        "healthcare-related",
        "description)`:",
        "\"Aspirin\".",
        "`hashCode()`:",
        "hashCode",
        "class",
        "filtering,",
        "brief",
        "need",
        "management",
        "querying,",
        "`NDCode`:",
        "thing",
        "**Purpose:**",
        "way",
        "\"prescription\".",
        "getNDCode",
        "component",
        "characteristics",
        "encapsulate",
        "records,",
        "used",
        "(ND)",
        "`equals(Object",
        "hash",
        "encapsulates",
        "sets",
        "project,",
        "analysis",
        "getDescription"
    ],
    "MessageBean": [
        "message",
        "setFrom",
        "`getFrom()`:",
        "MID",
        "functionality",
        "Sets",
        "getParentMessageId",
        "time",
        "easy",
        "parentMsgId",
        "system",
        "parent",
        "Source",
        "data.",
        "setTo",
        "Name:**",
        ">",
        "Message",
        "setParentMessageId",
        "another,",
        "getTo",
        "body",
        "getFrom",
        "**Methods:**",
        "`setSentDate(Timestamp)`:",
        "manipulation",
        "`getSubject()`:",
        "setMessageId",
        "allowing",
        "`getParentMessageId()`:",
        "phone",
        "`parentMsgId`:",
        "id",
        "status.",
        "corresponding",
        "setBody",
        "together).",
        "from",
        "*",
        "`setBody(String)`:",
        "Getters",
        "Java",
        "setSubject",
        "sender",
        "(with",
        "Generate",
        "ID",
        "purpose",
        "`getRead()`:",
        "`read`:",
        "setRead",
        "messaging",
        "`getBody()`:",
        "`setTo(long)`:",
        "concatenating",
        "data",
        "one",
        "subject",
        "subject,",
        "Hint:",
        "MessageBean",
        "`id`:",
        "store",
        "getRead",
        "messages",
        "timestamp,",
        "retrieval",
        "Gets",
        "getSentDate",
        "`subject`:",
        "minor",
        "getMessageId",
        "to",
        "**Attributes:**",
        "getBody",
        "attributes,",
        "given",
        "Setters",
        "`setSubject(String)`:",
        "class:",
        "formatting",
        "create",
        "numbers",
        "Use",
        "must",
        "easily)",
        "`from`:",
        "Period.",
        "setSentDate",
        "read",
        "(Eclipse",
        "getSubject",
        "IDs,",
        "summary",
        "`timestamp`:",
        "`setParentMessageId(long)`:",
        "added",
        "`getTo()`:",
        "another.",
        "bean's",
        "`body`:",
        "class",
        "`to`:",
        "`getMessageId()`:",
        "user",
        "exception",
        "**Class",
        "storing",
        "status",
        "**Purpose:**",
        "Little",
        "`setMessageId(long)`:",
        "body,",
        "bean",
        "used",
        "`setRead(int)`:",
        "ID,",
        "recipient",
        "`setFrom(long)`:",
        "recipients",
        "`getSentDate()`:",
        "timestamp",
        "MIDs"
    ],
    "OfficeVisitBean": [
        "visit",
        "getDiagnoses",
        "retrieve",
        "visitID",
        "storage",
        "functionality",
        "container",
        "hospitalID",
        "electronic",
        "visitDateStr",
        "retrieving",
        "system",
        "OfficeVisitBean",
        "Source",
        "data.",
        "getID",
        "wide",
        ">",
        "data,",
        "written",
        "provides",
        "**Methods:**",
        "objects",
        "hcpID",
        "intended",
        "PrescriptionBean",
        "object",
        "`getPrescriptions()`,",
        "diagnoses",
        "simple",
        "setPatientID",
        "Requirements:**",
        "range",
        "phone",
        "operations.",
        "3.",
        "1.",
        "4.",
        "`getProcedures()`:",
        "together).",
        "6.",
        "parses",
        "getHcpID",
        "provider",
        "patient",
        "Getters",
        "applications.",
        "getVisitID",
        "getPatientID",
        "setPrescriptions",
        "complex",
        "(with",
        "prescriptions",
        "Generate",
        "setVisitDateStr",
        "Constructor:",
        "managing",
        "lists",
        "purpose",
        "health",
        "`getDiagnoses()`,",
        "patientID",
        "ProcedureBean",
        "concatenating",
        "5.",
        "representing",
        "data",
        "unique",
        "`diagnoses`:",
        "visit,",
        "getPrescriptions",
        "Hint:",
        "requires",
        "store",
        "performing",
        "setDiagnoses",
        "hospital",
        "representation",
        "DiagnosisBean",
        "`getVisitDate()`:",
        "minor",
        "setHcpID",
        "designed",
        "**Attributes:**",
        "getVisitDateStr",
        "visits,",
        "getHospitalID",
        "made",
        "getProcedures",
        "information",
        "comments",
        "`hcpID`:",
        "Setters",
        "class:",
        "making",
        "healthcare",
        "parameters",
        "create",
        "formatting",
        "8.",
        "office",
        "numbers",
        "setNotes",
        "Use",
        "associated",
        "list",
        "**Use",
        "Case",
        "must",
        "easily)",
        "(EHR)",
        "identifier",
        "took",
        "date",
        "Period.",
        "getNotes",
        "`prescriptions`:",
        "hold",
        "parameterized",
        "getVisitDate",
        "(Eclipse",
        "system.",
        "summary",
        "method",
        "2.",
        "setHospitalID",
        "Getters:",
        "string",
        "added",
        "hospital.",
        "Date",
        "performed",
        "bean's",
        "flexible",
        "procedures",
        "place",
        "class",
        "diagnoses,",
        "7.",
        "constructor",
        "`visitDateStr`:",
        "values",
        "exception",
        "9.",
        "prescriptions,",
        "storing",
        "**Purpose:**",
        "`procedures`:",
        "way",
        "Little",
        "`notes`:",
        "setting",
        "suitable",
        "bean",
        "use",
        "default",
        "attribute",
        "used",
        "setProcedures",
        "`visitID`:",
        "`hospitalID`:",
        "attributes",
        "parameter",
        "respectively",
        "notes",
        "Setters:",
        "visitDate",
        "`patientID`:",
        "logic",
        "initializing",
        "record",
        "field",
        "methods"
    ],
    "OperationalProfile": [
        "createEmptyMap",
        "storage",
        "functionality",
        "Integer>)`:",
        "Sets",
        "tracking",
        "getTotalCount",
        "`setNumPersonnelTransactions(int)`:",
        "Source",
        "setNumPatientTransactions",
        "data.",
        "transactions.",
        ">",
        "numPatientTransactions",
        "numTransactions",
        "data,",
        "distribution",
        "`totalCount`:",
        "**Methods:**",
        "`numPersonnelTransactions`",
        "stores",
        "getPatientCount",
        "number",
        "`totalCount`",
        "phone",
        "`setPersonnelCount(HashMap<TransactionType,",
        "patientCount",
        "setNumTotalTransactions",
        "`personnelCount`",
        "together).",
        "*",
        "case",
        "patient",
        "Getters",
        "(with",
        "`setTotalCount(HashMap<TransactionType,",
        "totalCount",
        "Generate",
        "hashmaps",
        "purpose",
        "represents",
        "personnelCount",
        "`OperationalProfile()`:",
        "OperationalProfile",
        "help",
        "operational",
        "concatenating",
        "data",
        "`setPatientCount(HashMap<TransactionType,",
        "**Constructors:**",
        "maps.",
        "`getNumPersonnelTransactions()`:",
        "Hint:",
        "store",
        "getPersonnelCount",
        "numPersonnelTransactions",
        "getNumTotalTransactions",
        "getNumPatientTransactions",
        "setNumPersonnelTransactions",
        "minor",
        "requirement",
        "`patientCount`:",
        "**Attributes:**",
        "`personnelCount`:",
        "profile",
        "given",
        "Setters",
        "class:",
        "hashmap",
        "formatting",
        "create",
        "`getNumTotalTransactions()`:",
        "type",
        "getNumPersonnelTransactions",
        "`numTotalTransactions`:",
        "numbers",
        "Use",
        "personnel",
        "map",
        "must",
        "easily)",
        "numTotalTransactions",
        "`setNumTotalTransactions(int)`:",
        "`numPersonnelTransactions`:",
        "`numPatientTransactions`:",
        "Period.",
        "track",
        "empty",
        "(Eclipse",
        "summary",
        "added",
        "involves",
        "bean's",
        "`getNumPatientTransactions()`:",
        "class",
        "setTotalCount",
        "`totalCount`,",
        "`personnelCount`,",
        "count",
        "`numPatientTransactions`",
        "Returns",
        "`getPatientCount()`:",
        "exception",
        "storing",
        "`numTotalTransactions`",
        "**Purpose:**",
        "`getPersonnelCount()`:",
        "Little",
        "`setNumPatientTransactions(int)`:",
        "bean",
        "use",
        "attribute",
        "`getTotalCount()`:",
        "used",
        "setPatientCount",
        "total",
        "transactions",
        "setPersonnelCount",
        "`patientCount`",
        "Initializes"
    ],
    "PatientBean": [
        "holds",
        "patient's",
        "getPhone3",
        "MID",
        "functionality",
        "emergencyPhone1",
        "getZip1",
        "container",
        "getMotherMID",
        "getPhone2",
        "getIcState",
        "getIcAddress3",
        "setIcAddress1",
        "retrieving",
        "confirmPassword",
        "setEthnicity",
        "methods.",
        "icPhone3",
        "Source",
        "data.",
        "getZip",
        "Name:**",
        "card",
        ">",
        "setEmergencyName",
        "methods",
        "setMotherMID",
        "email",
        "getEmergencyPhone3",
        "emergencyPhone3",
        "messageFilter",
        "getIcZip1",
        "provides",
        "fatherMID",
        "getSecurityAnswer",
        "setSecurityAnswer",
        "zip1",
        "**Methods:**",
        "getIcPhone2",
        "blood",
        "setIcPhone3",
        "information.",
        "acts",
        "getEmergencyPhone2",
        "setIcPhone2",
        "`MID`",
        "days",
        "...",
        "setEmergencyPhone1",
        "phone",
        "getGender",
        "setMID",
        "3.",
        "manage",
        "getIcPhone1",
        "setIcPhone1",
        "1.",
        "4.",
        "death)",
        "setConfirmPassword",
        "getSecurityQuestion",
        "together).",
        "getFullName",
        "topicalNotes",
        "emergencyPhone2",
        "*",
        "`firstName`",
        "case",
        "contact",
        "Getters",
        "patient",
        "Java",
        "getDateOfBirthStr",
        "getIcPhone",
        "(with",
        "getFirstName",
        "Generate",
        "setIcAddress2",
        "getEmail",
        "phone2",
        "setCity",
        "address,",
        "purpose",
        "setIcID",
        "code",
        "icPhone2",
        "setPhone2",
        "streetAddress2",
        "icID",
        "setPhone3",
        "getCreditCardType",
        "zip2",
        "emergencyName",
        "setEthnicityStr",
        "class,",
        "address.",
        "ethnicity,",
        "help",
        "getIcPhone3",
        "getDateOfDeath",
        "getState",
        "state",
        "concatenating",
        "creditCardNumber",
        "`getAge()`:",
        "5.",
        "data",
        "various",
        "unique",
        "purpose,",
        "icName",
        "provided",
        "getEthnicity",
        "setSecurityQuestion",
        "getBloodType",
        "dateOfDeathStr",
        "`getAgeInDays()`:",
        "providing",
        "Hint:",
        "setStreetAddress1",
        "motherMID",
        "setTopicalNotes",
        "store",
        "ethnicity",
        "setDateOfDeathStr",
        "setCreditCardNumber",
        "patient.",
        "(String):",
        "icPhone1",
        "setMessageFilter",
        "getPhone",
        "getFatherMID",
        "getIcCity",
        "getStreetAddress1",
        "gender",
        "phone3",
        "(long):",
        "getDateOfDeathStr",
        "minor",
        "icZip1",
        "getTopicalNotes",
        "lastName",
        "setPassword",
        "**Attributes:**",
        "getCreditCardNumber",
        "getPassword",
        "including",
        "attributes,",
        "information",
        "given",
        "setIcName",
        "Setters",
        "`PatientBean`:",
        "setLastName",
        "(e.g.,",
        "create",
        "formatting",
        "based",
        "first",
        "getIcName",
        "securityAnswer",
        "numbers",
        "getStreetAddress3",
        "icState",
        "Use",
        "setEmergencyPhone2",
        "getAgeInDays",
        "dateOfBirthStr",
        "`setLastName(String)`)",
        "map",
        "bloodType",
        "getPhone1",
        "must",
        "easily)",
        "numbers,",
        "setBloodTypeStr",
        "setDateOfBirthStr",
        "`email`",
        "date",
        "`setFirstName(String)`,",
        "overview",
        "setCauseOfDeath",
        "phone1",
        "Period.",
        "getEmergencyName",
        "type,",
        "getDateOfBirth",
        "getCauseOfDeath",
        "calculates",
        "attributes.",
        "getEmergencyPhone1",
        "`set`",
        "setFatherMID",
        "setGender",
        "(Eclipse",
        "setEmergencyPhone3",
        "setPhone1",
        "weeks",
        "birth.",
        "getAge",
        "`PatientBean`",
        "summary",
        "demographic",
        "birth,",
        "information,",
        "setCreditCardType",
        "2.",
        "getIcZip",
        "setEmail",
        "added",
        "getConfirmPassword",
        "serialVersionUID",
        "setZip1",
        "last",
        "setBloodType",
        "identifier.",
        "contact)",
        "bean's",
        "setIcZip1",
        "class's",
        "setIcState",
        "streetAddress1",
        "getStreetAddress2",
        "getZip2",
        "class",
        "getEmergencyPhone",
        "medical",
        "getIcZip2",
        "name.",
        "setZip2",
        "personal",
        "icZip2",
        "firstName",
        "password",
        "many",
        "exception",
        "including:",
        "emergency",
        "**Class",
        "storing",
        "**Purpose:**",
        "credit",
        "getAgeInWeeks",
        "Little",
        "causeOfDeath",
        "icAddress1",
        "mid",
        "getIcAddress2",
        "getMID",
        "setting",
        "requirement,",
        "setState",
        "bean",
        "age",
        "securityQuestion",
        "getIcID",
        "use",
        "attribute",
        "icCity",
        "getLastName",
        "gender)",
        "attributes",
        "icAddress2",
        "getCity",
        "getIcAddress1",
        "setStreetAddress2",
        "`getAgeInWeeks()`:",
        "city",
        "Description:**",
        "setIcCity",
        "creditCardType",
        "`lastName`",
        "patient,",
        "related",
        "setGenderStr",
        "setIcZip2",
        "setFirstName",
        "getMessageFilter"
    ],
    "PatientVisitBean": [
        "setLastOVDateD",
        "lastOVDate",
        "patient's",
        "year",
        "functionality",
        "Setter",
        "`LastOVDateD`,",
        "setLastOVDateM",
        "month,",
        "`LastOVDate`",
        "Source",
        "data.",
        "lastOVDateY)`:",
        ">",
        "Summary:",
        "**Methods:**",
        "setPatient",
        "`getAddress1()`,",
        "LastOVDateM",
        "stores",
        "`setAddress2(String",
        "`getPatientName()`:",
        "phone",
        "lastOVDateD",
        "10.",
        "3.",
        "1.",
        "4.",
        "getLastOVDateM",
        "setAddress1",
        "setLastOVDateY",
        "together).",
        "6.",
        "`PatientName`:",
        "getPatient",
        "patient",
        "Getters",
        "case",
        "setPatientName",
        "Java",
        "address1)`,",
        "(with",
        "Generate",
        "`LastOVDateM`,",
        "purpose",
        "code",
        "PatientVisitBean**",
        "lastOVDateY",
        "getLastOVDateD",
        "`getAddress2()`:",
        "help",
        "address.",
        "visit.",
        "representing",
        "concatenating",
        "5.",
        "data",
        "`LastOVDateY`",
        "Hint:",
        "holder",
        "store",
        "day,",
        "lastOVDateM",
        "`Address2`:",
        "getLastOVDate",
        "`setLastOVDateM(String",
        "LastOVDateY",
        "`setPatientName(String",
        "lastOVDateD)`,",
        "minor",
        "`Address1`",
        "**Attributes:**",
        "`getLastOVDateD()`,",
        "`patient`",
        "made",
        "information",
        "Setters",
        "`PatientName`",
        "PatientName",
        "PatientBean",
        "formatting",
        "create",
        "based",
        "8.",
        "lastOVDateM)`,",
        "getLastOVDateY",
        "numbers",
        "Use",
        "getPatientName",
        "map",
        "`patient`:",
        "must",
        "easily)",
        "getAddress2",
        "`LastOVDateY`:",
        "Strings",
        "Period.",
        "instance",
        "attributes.",
        "Address1",
        "`Address1`,",
        "`setLastOVDate(String",
        "Address2",
        "(Eclipse",
        "summary",
        "`getLastOVDateM()`,",
        "getAddress1",
        "method",
        "2.",
        "string",
        "added",
        "address2)`:",
        "last",
        "address2",
        "`getPatient()`:",
        "`setLastOVDateD(String",
        "patientName",
        "bean's",
        "patientName)`:",
        "`Address2`",
        "class",
        "7.",
        "address1",
        "name.",
        "`getLastOVDateY()`:",
        "provided:",
        "lastOVDate)`:",
        "exception",
        "9.",
        "**Class",
        "storing",
        "setLastOVDate",
        "**Purpose:**",
        "patient)`:",
        "Little",
        "PatientVisitBean",
        "Getter",
        "bean",
        "`setLastOVDateY(String",
        "LastOVDate",
        "requirements.",
        "use",
        "`setAddress1(String",
        "`setPatient(PatientBean",
        "`getLastOVDate()`:",
        "setAddress2",
        "LastOVDateD",
        "attribute.",
        "methods"
    ],
    "PersonnelBean": [
        "role",
        "setSpecialty",
        "`email`,",
        "getPhone3",
        "storage",
        "MID",
        "functionality",
        "getZip1",
        "getPhone2",
        "31",
        "confirmPassword",
        "getRole",
        "Source",
        "data.",
        "getZip",
        "`getPhone()`",
        ">",
        "Message",
        "email",
        "`zip2`",
        "messageFilter",
        "zip1",
        "getSecurityAnswer",
        "setSecurityAnswer",
        "`phone1`,",
        "**Methods:**",
        "implements",
        "`messageFilter`",
        "`PersonnelBean`",
        "`serialVersionUID`",
        "`MID`",
        "index",
        "amid",
        "number",
        "phone",
        "26",
        "setMID",
        "`zip1`,",
        "setConfirmPassword",
        "getSecurityQuestion",
        "together).",
        "Unique",
        "getFullName",
        "*",
        "getSpecialty",
        "case",
        "Getters",
        "Specialty:",
        "`phone2`,",
        "AMID",
        "(with",
        "getFirstName",
        "Generate",
        "getEmail",
        "getAMID",
        "setCity",
        "phone2",
        "purpose",
        "code",
        "comparison",
        "`securityAnswer`",
        "setPhone2",
        "streetAddress2",
        "`phone3`,",
        "setPhone3",
        "zip2",
        "help",
        "Personal",
        "getState",
        "state",
        "concatenating",
        "getIndexIn",
        "data",
        "unique",
        "`AMID`",
        "`getFullName()`",
        "setSecurityQuestion",
        "Hint:",
        "setStreetAddress1",
        "`securityQuestion`,",
        "setters",
        "`private",
        "store",
        "setMessageFilter",
        "filter:",
        "hospital",
        "getPhone",
        "getStreetAddress1",
        "phone3",
        "minor",
        "names",
        "identifiers:",
        "lastName",
        "setAMID",
        "setPassword",
        "`Serializable`",
        "**Attributes:**",
        "value.",
        "getPassword",
        "attributes,",
        "information",
        "given",
        "Setters",
        "class:",
        "setLastName",
        "create",
        "formatting",
        "based",
        "**Notes:**",
        "`streetAddress2`,",
        "`role`",
        "securityAnswer",
        "numbers",
        "`compareTo()`.",
        "Use",
        "list",
        "map",
        "getPhone1",
        "must",
        "easily)",
        "static",
        "employee.",
        "`specialty`",
        "phone1",
        "combine",
        "Period.",
        "setRole",
        "hold",
        "(Eclipse",
        "format",
        "`getZip()`",
        "final`",
        "setPhone1",
        "summary",
        "specialty",
        "Role:",
        "method",
        "setEmail",
        "serialized",
        "added",
        "getConfirmPassword",
        "serialVersionUID",
        "setZip1",
        "last",
        "`confirmPassword`,",
        "`firstName`,",
        "bean's",
        "streetAddress1",
        "getStreetAddress2",
        "getZip2",
        "class",
        "information:",
        "`password`,",
        "deserialized.",
        "indicating",
        "setZip2",
        "implemented",
        "firstName",
        "password",
        "`lastName`,",
        "methods,",
        "exception",
        "interface,",
        "including:",
        "storing",
        "Security",
        "**Purpose:**",
        "`getIndexIn()`",
        "requirement.",
        "zip",
        "Little",
        "mid",
        "getMID",
        "setState",
        "bean",
        "`city`,",
        "securityQuestion",
        "`state`,",
        "use",
        "attribute",
        "find",
        "getLastName",
        "used",
        "setStreetAddress2",
        "getCity",
        "`streetAddress1`,",
        "city",
        "first",
        "setFirstName",
        "getMessageFilter"
    ],
    "PrescriptionBean": [
        "visit",
        "visitID",
        "storage",
        "functionality",
        "container",
        "(long)",
        "instructions.",
        "Source",
        "data.",
        "visitID)`:",
        "equals",
        "dosage)`:",
        ">",
        "\"MM/dd/yyyy\"",
        "**Methods:**",
        "`setVisitID(long",
        "`PrescriptionBean`",
        "objects",
        "compares",
        "fixed",
        "hashCode()",
        "endDate)`:",
        "medication,",
        "object",
        "getId",
        "phone",
        "issued",
        "id",
        "`setEndDateStr(String",
        "getDosage",
        "getEndDateStr",
        "(String)",
        "start",
        "getMedication",
        "together).",
        "getStartDateStr",
        "setEndDateStr",
        "getInstructions",
        "*",
        "`getEndDateStr()`:",
        "case",
        "Getters",
        "getVisitID",
        "getEndDate",
        "`getEndDate()`:",
        "(with",
        "`getStartDate()`:",
        "Generate",
        "ID",
        "startDate",
        "endDate",
        "`endDateStr`:",
        "purpose",
        "two",
        "methods:**",
        "help",
        "setId",
        "dosage",
        "`MedicationBean`",
        "`getVisitID()`:",
        "representing",
        "concatenating",
        "data",
        "unique",
        "`Date`",
        "prescription,",
        "Hint:",
        "prescribed",
        "`id`:",
        "store",
        "startDateStr",
        "`setMedication(MedicationBean",
        "(int)",
        "returns",
        "dosage,",
        "`getMedication()`:",
        "minor",
        "prescription.",
        "prescription",
        "designed",
        "**Attributes:**",
        "value.",
        "instruction)`:",
        "`medication`:",
        "attributes,",
        "information",
        "given",
        "Setters",
        "class:",
        "end",
        "formatting",
        "create",
        "based",
        "instruction",
        "numbers",
        "Use",
        "medication",
        "`setId(long",
        "`dosage`:",
        "map",
        "must",
        "easily)",
        "setMedication",
        "identifier",
        "setDosage",
        "date",
        "Period.",
        "instance",
        "(Eclipse",
        "id)`:",
        "format",
        "summary",
        "dates,",
        "`hashCode()`",
        "medication)`:",
        "`equals()`",
        "method",
        "setInstructions",
        "`getInstructions()`:",
        "added",
        "**equals()",
        "additional",
        "bean's",
        "hashCode",
        "getStartDate",
        "class",
        "`instructions`:",
        "`getStartDateStr()`:",
        "exception",
        "storing",
        "setVisitID",
        "**Purpose:**",
        "`setInstructions(String",
        "requirement.",
        "instructions",
        "Little",
        "`setDosage(int",
        "`startDateStr`:",
        "`getDosage()`:",
        "bean",
        "use",
        "setStartDateStr",
        "always",
        "ID,",
        "notes",
        "sets",
        "`visitID`:",
        "endDateStr"
    ],
    "PrescriptionReportBean": [
        "visit",
        "getPrescription",
        "container",
        "@author",
        "Bean),",
        "query.",
        "{@link",
        "/>",
        "query",
        "could",
        "PrescriptionBean}",
        "OfficeVisitBean}",
        "**Methods:**",
        "`PrescriptionBean`",
        "entity,",
        "PrescriptionBean",
        "displaying",
        "allowing",
        "combines",
        "clean",
        "Requirements:**",
        "Meneely",
        "See",
        "*",
        "case",
        "`prescription`:",
        "Report",
        "officeVisit",
        "represents",
        "`getOfficeVisit()`:",
        "`MedicationBean`",
        "query.<br",
        "data",
        "Medication",
        "one",
        "`prescription`",
        "fetching",
        "<br",
        "`setPrescription(PrescriptionBean",
        "`officeVisit`:",
        "report",
        "`getPrescription()`:",
        "returns",
        "prescription",
        "details",
        "**Attributes:**",
        "`PrescriptionReportBean`",
        "made",
        "Prescription",
        "including",
        "class:",
        "officeVisit)`:",
        "necessary",
        "office",
        "medication",
        "**Use",
        "map",
        "Case",
        "single",
        "requirements",
        "contains",
        "`PrescriptionBean`,",
        "involve",
        "instance",
        "turn",
        "`OfficeVisitBean`",
        "prescription)`:",
        "summary",
        "information,",
        "report.",
        "Andy",
        "setPrescription",
        "class",
        "(which",
        "`officeVisit`",
        "fetch",
        "`setOfficeVisit(OfficeVisitBean",
        "`MedicationBean`)",
        "**Purpose:**",
        "requirement.",
        "setOfficeVisit",
        "bean",
        "use",
        "attribute",
        "used",
        "getOfficeVisit",
        "done",
        "bean.",
        "sets"
    ],
    "ProcedureBean": [
        "`getHcpid()`,",
        "`hcpid`:",
        "setDate",
        "`setHcpid(String)`:",
        "storage",
        "functionality",
        "(long)",
        "`date`:",
        "`description`:",
        "methods.",
        "`setDate(Date)`:",
        "Source",
        "data.",
        "Constructor",
        "`getDate()`,",
        ">",
        "setCPTCode",
        "**Methods:**",
        "object",
        "procedure.",
        "`CPTCode`",
        "phone",
        "`attribute`",
        "manage",
        "getOvProcedureID",
        "(String)",
        "`description`",
        "CPT",
        "description)`,",
        "together).",
        "*",
        "setAttribute",
        "Getters",
        "combinations",
        "(with",
        "setHcpid",
        "Generate",
        "getter",
        "ID",
        "code",
        "purpose",
        "Terminology)",
        "`ProcedureBean()`:",
        "concatenating",
        "various",
        "data",
        "getCPTCode",
        "unique",
        "`CPTCode`:",
        "Hint:",
        "hcpid",
        "store",
        "`ProcedureBean`",
        "description",
        "d",
        "`getOvProcedureID()`,",
        "procedures,",
        "attribute)`,",
        "Constructors",
        "minor",
        "attribute,",
        "designed",
        "**Attributes:**",
        "information",
        "Setters",
        "class:",
        "beyond",
        "healthcare",
        "setOvProcedureID",
        "formatting",
        "create",
        "Procedural",
        "`attribute`:",
        "numbers",
        "Use",
        "ovProcedureID",
        "code,",
        "must",
        "easily)",
        "identifier",
        "setDescription",
        "date",
        "Period.",
        "`getCPTCode()`,",
        "`ovProcedureID`:",
        "(Eclipse",
        "getAttribute",
        "summary",
        "`getAttribute()`,",
        "hcpid)`:",
        "added",
        "attrib",
        "performed",
        "additional",
        "`date`",
        "bean's",
        "`hcpid`",
        "class",
        "constructor",
        "brief",
        "String",
        "exception",
        "setter",
        "storing",
        "`setOvProcedureID(long)`:",
        "**Purpose:**",
        "Little",
        "description,",
        "`setCPTCode(String)`:",
        "bean",
        "default",
        "CPTCode",
        "attribute",
        "(Current",
        "used",
        "`setDescription(String)`:",
        "getHcpid",
        "`ProcedureBean(String",
        "basic",
        "attributes",
        "`ovProcedureID`",
        "getDate",
        "code)`,",
        "(Date)",
        "`getDescription()`,",
        "professional",
        "procedure",
        "`setAttribute(String)`:",
        "initialize",
        "getDescription"
    ],
    "ReferralBean": [
        "storage",
        "getReceiverID",
        "functionality",
        "containing",
        "Sets",
        "sender,",
        "Summary:**",
        "**Setters:**",
        "methods.",
        "`setConsultationDetails(String",
        "Source",
        "referralDetails",
        "data.",
        "getStatus",
        "Name:**",
        "equals",
        ">",
        "`Declined`",
        "`getSenderID()`:",
        "`Pending`,",
        "**Methods:**",
        "`receiverID`:",
        "getSenderID",
        "getId",
        "senderID",
        "setPatientID",
        "`setStatus(ReferralStatus",
        "phone",
        "id",
        "status.",
        "`setReceiverID(long",
        "HashCode",
        "`equals(ReferralBean",
        "together).",
        "getReferralDetails",
        "*",
        "`getConsultationDetails()`:",
        "patient",
        "Getters",
        "status)`:",
        "senderID)`:",
        "getPatientID",
        "`getReceiverID()`:",
        "Methods:**",
        "sender",
        "(with",
        "Generate",
        "ID",
        "purpose",
        "code",
        "setStatus",
        "class,",
        "setId",
        "`consultationDetails`:",
        "patientID",
        "concatenating",
        "`getStatus()`:",
        "another",
        "data",
        "referralDetails)`:",
        "unique",
        "represent",
        "setConsultationDetails",
        "captures",
        "**Constructors:**",
        "referral,",
        "Hint:",
        "consultation",
        "`id`:",
        "store",
        "`ReferralBean()`",
        "**Getters:**",
        "methods:",
        "receiver,",
        "setters,",
        "`setPatientID(long",
        "minor",
        "designed",
        "details",
        "**Attributes:**",
        "`referralDetails`:",
        "attributes,",
        "including",
        "information",
        "Setters",
        "formatting",
        "create",
        "essential",
        "numbers",
        "Use",
        "involved",
        "`setId(long",
        "equality",
        "`ReferralBean`",
        "must",
        "easily)",
        "`senderID`:",
        "setSenderID",
        "identifier",
        "`status`:",
        "`setSenderID(long",
        "referral",
        "Period.",
        "consultationDetails",
        "receiverID",
        "setReferralDetails",
        "(Eclipse",
        "id)`:",
        "other)`:",
        "summary",
        "getConsultationDetails",
        "string",
        "`getId()`:",
        "added",
        "setReceiverID",
        "getters,",
        "+",
        "`hashCode()`:",
        "bean's",
        "either",
        "hashCode",
        "class",
        "constructor",
        "medical",
        "consultationDetails)`:",
        "**Equals",
        "constructors,",
        "current",
        "Returns",
        "Compares",
        "exception",
        "status",
        "storing",
        "**Class",
        "**Purpose:**",
        "Little",
        "`Finished`,",
        "bean",
        "details,",
        "`getPatientID()`:",
        "default",
        "used",
        "`getReferralDetails()`:",
        "receiver",
        "`setReferralDetails(String",
        "`equals(Object",
        "receiverID)`:",
        "hash",
        "`patientID`:",
        "patient,",
        "patientID)`:",
        "referral."
    ],
    "RemoteMonitoringDataBean": [
        "role",
        "RemoteMonitoringDataBean",
        "`glucoseLevel`:",
        "`reporterMID`:",
        "scenarios",
        "functionality",
        "time",
        "system",
        "Source",
        "getGlucoseLevel",
        "data.",
        "Constructor",
        "diastolicBloodPressure",
        ">",
        "recorded",
        "getSystolicBloodPressure",
        "patientMID",
        "`time`:",
        "setReporterRole",
        "blood",
        "information.",
        "`patientMID`:",
        "getPatientMID",
        "phone",
        "needs",
        "`getPatientMID()`",
        "diastolic",
        "together).",
        "glucose",
        "*",
        "patient",
        "Getters",
        "Constructors:",
        "attribute:",
        "`getSystolicBloodPressure()`",
        "`reporterRole`:",
        "(with",
        "Generate",
        "`systolicBloodPressure`:",
        "level,",
        "purpose",
        "Default",
        "setSystolicBloodPressure",
        "getTime",
        "concatenating",
        "application.",
        "monitoring",
        "remote",
        "data",
        "setTime",
        "`setReporterRole(String)`",
        "Hint:",
        "`getDiastolicBloodPressure()`",
        "store",
        "getReporterMID",
        "setLoggedInMID",
        "`setGlucoseLevel(int)`",
        "level",
        "minor",
        "`getReporterRole()`",
        "**Purpose**:",
        "information",
        "Setters",
        "systolicBloodPressure",
        "class:",
        "healthcare",
        "parameters",
        "formatting",
        "create",
        "`setTime(Timestamp)`",
        "**Attributes**:",
        "glucoseLevel",
        "numbers",
        "Use",
        "reporter",
        "must",
        "easily)",
        "MID,",
        "`patientMID`",
        "`getTime()`",
        "identifier",
        "systolic",
        "retrieved",
        "`setDiastolicBloodPressure(int)`",
        "reporterMID",
        "Period.",
        "patients.",
        "time,",
        "(Eclipse",
        "getDiastolicBloodPressure",
        "summary",
        "getReporterRole",
        "`getGlucoseLevel()`",
        "added",
        "+",
        "`setReporterMID(long)```",
        "**Methods**:",
        "bean's",
        "`setLoggedInMID(long)`",
        "setReporterMID",
        "class",
        "`diastolicBloodPressure`:",
        "constructor",
        "pressure,",
        "exception",
        "storing",
        "patients,",
        "Little",
        "pressure",
        "bean",
        "used",
        "`setSystolicBloodPressure(int)`",
        "parameter",
        "setGlucoseLevel",
        "reporterRole",
        "stored",
        "setDiastolicBloodPressure",
        "`getReporterMID()`",
        "timestamp"
    ],
    "ReportRequestBean": [
        "`status`",
        "getViewedDate",
        "`getRequestedDate()`:",
        "patient's",
        "MID",
        "functionality",
        "getRequestedDate",
        "getViewedDateString",
        "strings",
        "Sets",
        "part",
        "`requestedDate`",
        "Source",
        "getStatus",
        "data.",
        "getID",
        "getRequestedDateString",
        ">",
        "requestedDate",
        "viewed",
        "out,",
        "setViewedDate",
        "Viewed",
        "iD",
        "patientMID",
        "**Methods:**",
        "`setStatus(String)`:",
        "`setPatientMID(long)`:",
        "`setID(long)`:",
        "stores",
        "getPatientMID",
        "also",
        "date,",
        "phone",
        "Requested",
        "status.",
        "setPatientMID",
        "comment",
        "viewedDate",
        "together).",
        "request",
        "Unique",
        "*",
        "**Note:**",
        "patient",
        "Getters",
        "Format",
        "Java",
        "comment,",
        "string,",
        "requested",
        "(with",
        "Generate",
        "setRequestedDateString",
        "ID",
        "purpose",
        "getRequesterMID",
        "setStatus",
        "`getPatientMID()`:",
        "class,",
        "`getViewedDate()`:",
        "`setRequesterMID(long)`:",
        "concatenating",
        "`getStatus()`:",
        "data",
        "`setViewedDateString(String)`:",
        "`requesterMID`",
        "captures",
        "implementation.",
        "Hint:",
        "setters",
        "store",
        "setID",
        "(String):",
        "report",
        "methods:",
        "Gets",
        "(Date):",
        "getters",
        "(long):",
        "minor",
        "request.",
        "requester's",
        "**Attributes:**",
        "approved",
        "attributes,",
        "including",
        "made",
        "`getRequestedDateString()`:",
        "Setters",
        "(MM/dd/yyyy",
        "(e.g.,",
        "formatting",
        "create",
        "`viewedDate`",
        "setRequestedDate",
        "numbers",
        "Status",
        "Use",
        "`setRequestedDate(Date)`:",
        "must",
        "easily)",
        "MID,",
        "`patientMID`",
        "identifier",
        "date",
        "setRequesterMID",
        "dateFormat",
        "request,",
        "Period.",
        "requested,",
        "(Eclipse",
        "`getRequesterMID()`:",
        "HH:mm)",
        "viewed)",
        "summary",
        "may",
        "string",
        "added",
        "Date",
        "bean's",
        "class",
        "includes",
        "indicating",
        "current",
        "setViewedDateString",
        "exception",
        "status",
        "storing",
        "**Purpose:**",
        "Little",
        "`setRequestedDateString(String)`:",
        "`ID`",
        "requester",
        "bean",
        "approved,",
        "`getID()`:",
        "commented",
        "used",
        "`getViewedDateString()`:",
        "ID,",
        "requesterMID",
        "`setViewedDate(Date)`:",
        "`ReportRequestBean`",
        "`dateFormat`"
    ],
    "SecurityQA": [
        "storage",
        "functionality",
        "answer)`:",
        "question",
        "system",
        "confirmAnswer)`:",
        "Source",
        "data.",
        ">",
        "getConfirmAnswer",
        "**Methods:**",
        "`getAnswer()`:",
        "phone",
        "needs",
        "answer.",
        "manage",
        "corresponding",
        "together).",
        "`question`:",
        "confirmation",
        "`confirmAnswer`",
        "*",
        "Getters",
        "(with",
        "Generate",
        "purposes.",
        "`answer`:",
        "purpose",
        "value",
        "question.",
        "representing",
        "concatenating",
        "data",
        "recovery",
        "account",
        "`confirmAnswer`:",
        "Hint:",
        "store",
        "`setConfirmAnswer(String",
        "`answer`",
        "returns",
        "minor",
        "`setQuestion(String",
        "**Attributes:**",
        "information",
        "Setters",
        "class:",
        "formatting",
        "create",
        "numbers",
        "Use",
        "security",
        "`setAnswer(String",
        "must",
        "easily)",
        "getAnswer",
        "SecurityQA",
        "Period.",
        "scenario",
        "setAnswer",
        "hold",
        "(Eclipse",
        "summary",
        "getQuestion",
        "string",
        "added",
        "setConfirmAnswer",
        "bean's",
        "authentication",
        "class",
        "user",
        "setQuestion",
        "exception",
        "storing",
        "**Purpose:**",
        "Little",
        "answer",
        "`getConfirmAnswer()`:",
        "confirmAnswer",
        "bean",
        "answers,",
        "question)`:",
        "used",
        "`getQuestion()`:",
        "sets",
        "`question`",
        "attribute.",
        "questions"
    ],
    "SurveyBean": [
        "`setSurveyDateString(String",
        "visit",
        "13.",
        "visitID",
        "functionality",
        "dates.",
        "time",
        "getTreatmentSatisfaction",
        "methods.",
        "Source",
        "`setExamRoomMinutes(int",
        "data.",
        "visitID)`:",
        ">",
        "provides",
        "treatment,",
        "visitSatisfaction",
        "iD",
        "**Methods:**",
        "thread",
        "`setVisitID(long",
        "`setTreatmentSatisfaction(int",
        "(values",
        "stores",
        "`visitID`",
        "object",
        "number",
        "phone",
        "`setWaitingRoomMinutes(int",
        "10.",
        "treatmentSatisfaction",
        "3.",
        "manage",
        "1.",
        "4.",
        "together).",
        "6.",
        "satisfaction",
        "visitSatisfaction)`:",
        "*",
        "case",
        "patient",
        "Getters",
        "`treatmentSatisfaction`:",
        "getVisitID",
        "Java",
        "(with",
        "ensure",
        "Generate",
        "purpose",
        "code",
        "waiting",
        "spent",
        "null.",
        "minutes",
        "clones",
        "class,",
        "visit.",
        "`getVisitID()`:",
        "`getTreatmentSatisfaction()`:",
        "5.",
        "concatenating",
        "`examRoomMinutes`",
        "input",
        "data",
        "unique",
        "setSurveyDateString",
        "`Date`",
        "getWaitingRoomMinutes",
        "purpose,",
        "`surveyDate`",
        "Hint:",
        "store",
        "highlighting",
        "representation",
        "setVisitSatisfaction",
        "high-level",
        "ratings",
        "returns",
        "surveyDate)`:",
        "getVisitSatisfaction",
        "minor",
        "**Attributes:**",
        "getExamRoomMinutes",
        "attributes,",
        "given",
        "Setters",
        "class:",
        "formatting",
        "create",
        "8.",
        "**Notes:**",
        "setSurveyDate",
        "`setVisitSatisfaction(int",
        "office",
        "`getExamRoomMinutes()`:",
        "numbers",
        "`getSurveyDate()`:",
        "Use",
        "associated",
        "11.",
        "map",
        "waitingRoomMinutes)`:",
        "must",
        "easily)",
        "identifier",
        "`waitingRoomMinutes`",
        "uses",
        "date",
        "dateFormat",
        "overview",
        "1-100)",
        "setTreatmentSatisfaction",
        "Period.",
        "getSurveyDate",
        "waitingRoomMinutes",
        "hold",
        "empty",
        "(Eclipse",
        "treatmentSatisfaction)`:",
        "format",
        "`getWaitingRoomMinutes()`:",
        "summary",
        "exam",
        "method",
        "2.",
        "`getSurveyDateString`",
        "`SurveyBean`",
        "string",
        "added",
        "`getSurveyDateString()`:",
        "14.",
        "safety.",
        "bean's",
        "`surveyDate`:",
        "parsing",
        "class",
        "7.",
        "12.",
        "examRoomMinutes)`:",
        "getSurveyDateString",
        "examRoomMinutes",
        "exception",
        "9.",
        "storing",
        "setVisitID",
        "**Purpose:**",
        "requirement.",
        "Little",
        "setWaitingRoomMinutes",
        "survey",
        "`setSurveyDate`",
        "`setSurveyDate(Date",
        "bean",
        "gets",
        "setExamRoomMinutes",
        "use",
        "attribute",
        "s)`:",
        "`getVisitSatisfaction()`:",
        "surveyDate",
        "room",
        "`examRoomMinutes`:",
        "`treatmentSatisfaction`",
        "used",
        "respectively",
        "`visitSatisfaction`",
        "surveys.",
        "`waitingRoomMinutes`:",
        "sets",
        "related",
        "`visitID`:",
        "`dateFormat`"
    ],
    "SurveyResultBean": [
        "visit",
        "retrieve",
        "`hcpMID`:",
        "setHCPstate",
        "Sets",
        "setHCPaddress2",
        "retrieving",
        "`ANY_SPECIALTY`:",
        "setAvgWaitingRoomMinutes",
        "ANY_SPECIALTY",
        "`getHCPMID()`:",
        "provides",
        "addition",
        "visitSatisfaction",
        "**Methods:**",
        "OBGYN_SPECIALTY",
        "visits",
        "stores",
        "`hcpFirstName`,",
        "allowing",
        "`HEART_SPECIALTY`,",
        "...",
        "range",
        "also",
        "address",
        "treatmentSatisfaction",
        "3.",
        "1.",
        "getHCPcity",
        "getAvgExamRoomMinutes",
        "4.",
        "6.",
        "satisfaction",
        "`hcpHospitalID`:",
        "HCP's",
        "setPercentSatisfactionResults",
        "getHCPLastName",
        "provider",
        "Stores",
        "setHCPLastName",
        "Java",
        "results.",
        "`hcpZip`:",
        "`PEDiatrician_SPECIALTY`,",
        "avgTreatmentSatisfaction",
        "`getHCPFirstName()`:",
        "(search).",
        "ID",
        "waiting",
        "`SurveyResultBean`",
        "getHCPstate",
        "`avgExamRmMinutues`,",
        "HCP",
        "state",
        "5.",
        "minutes,",
        "`GENERAL_SPECIALTY`,",
        "unique",
        "`hcpAddress2`,",
        "`avgTreatmentSatisfaction`:",
        "setHCPaddress1",
        "(results",
        "setHCPFirstName",
        "store",
        "percentSatResultsAvailable",
        "percentage",
        "hcpAddress1",
        "hospital",
        "HEART_SPECIALTY",
        "getHCPaddress1",
        "`setHCPMID(long)`:",
        "names",
        "searching",
        "setAvgTreatmentSatisfaction",
        "lastName",
        "hcpHospitalID",
        "`setHCPFirstName(String)`:",
        "**Attributes:**",
        "treatment",
        "average",
        "specialty,",
        "`setHCPLastName(String)`:",
        "information",
        "beans",
        "getHCPhospital",
        "HCPs.",
        "works.",
        "class:",
        "(HCP)",
        "hcpMID",
        "healthcare",
        "based",
        "percent",
        "`SURGEON_SPECIALTY`,",
        "**Constants:**",
        "office",
        "`avgWaitingRmMinutes`,",
        "list",
        "getting",
        "`hcpLastName`:",
        "hospital,",
        "avgExamRmMinutues",
        "getAvgVisitSatisfaction",
        "GENERAL_SPECIALTY",
        "identifier",
        "results,",
        "variable",
        "contains",
        "`hcpSpecialty`:",
        "(similar",
        "getHCPspecialty",
        "waitingRoomMinutes",
        "Bean",
        "getHCPMID",
        "HCP.",
        "getHCPzip",
        "summary",
        "specialty",
        "exam",
        "setHCPzip",
        "satisfaction,",
        "possible",
        "2.",
        "`percentSatResultsAvailable`:",
        "setHCPspecialty",
        "`avgVisitSatisfaction`,",
        "last",
        "address2",
        "hcpZip",
        "office.",
        "hcpFirstName",
        "avgWaitingRmMinutes",
        "hcpCity",
        "class",
        "7.",
        "getPercentSatisfactionResults",
        "hcpSpecialty",
        "SURGEON_SPECIALTY",
        "setHCPMID",
        "getAvgWaitingRoomMinutes",
        "`OBGYN_SPECIALTY`,",
        "address1",
        "name.",
        "setAvgExamRoomMinutes",
        "Returns",
        "firstName",
        "examRoomMinutes",
        "hcpAddress2",
        "`hcpCity`,",
        "getHCPaddress2",
        "**Purpose:**",
        "MID.",
        "available.",
        "setHCPcity",
        "zip",
        "survey",
        "way",
        "1-5).",
        "mid",
        "setting",
        "`getHCPLastName()`:",
        "HCPs",
        "bean",
        "getHCPFirstName",
        "averages",
        "setHCPhospital",
        "setAvgVisitSatisfaction",
        "used",
        "`hcpAddress1`,",
        "room",
        "attribute)",
        "hcpState",
        "hcpLastName",
        "attributes",
        "results",
        "city",
        "filtering",
        "specialties.",
        "avgVisitSatisfaction",
        "getAvgTreatmentSatisfaction",
        "`hcpState`,",
        "first",
        "methods",
        "PEDIATRICIAN_SPECIALTY"
    ],
    "TransactionBean": [
        "role",
        "retrieve",
        "storage",
        "iTrust.",
        "functionality",
        "logged",
        "tranactionType",
        "getTimeLogged",
        "`loggedInMID`:",
        "getRole",
        "Source",
        "data.",
        ">",
        "getSecondaryMID",
        "`transactionID`:",
        "**Methods:**",
        "getTransactionType",
        "phone",
        "together).",
        "*",
        "case",
        "Getters",
        "secondaryMID",
        "setTransactionType",
        "setAddedInfo",
        "(with",
        "Generate",
        "ID",
        "code",
        "purpose",
        "represents",
        "class,",
        "timeLogged",
        "within",
        "concatenating",
        "`secondaryMID`:",
        "data",
        "`addedInfo`:",
        "unique",
        "captures",
        "`timeLogged`:",
        "Hint:",
        "`transactionType`:",
        "addedInfo",
        "`role`:",
        "getLoggedInMID",
        "store",
        "applicable)",
        "methods:",
        "setLoggedInMID",
        "occurred",
        "occurs",
        "set",
        "minor",
        "**Attributes:**",
        "attributes,",
        "information",
        "given",
        "making",
        "Setters",
        "class:",
        "easier",
        "formatting",
        "transactionID",
        "create",
        "type",
        "essential",
        "numbers",
        "(if",
        "Use",
        "setTimeLogged",
        "map",
        "institution",
        "must",
        "easily)",
        "identifier",
        "getTransactionID",
        "getAddedInfo",
        "Period.",
        "setRole",
        "(Eclipse",
        "system.",
        "setTransactionID",
        "summary",
        "`TransactionBean`",
        "added",
        "loggedInMID",
        "performed",
        "additional",
        "bean's",
        "`set*()`",
        "class",
        "medical",
        "user",
        "values",
        "methods,",
        "exception",
        "storing",
        "transactionType",
        "**Purpose:**",
        "requirement.",
        "Little",
        "bean",
        "use",
        "setSecondaryMID",
        "attributes",
        "(enum-defined)",
        "iTrust",
        "related",
        "timestamp",
        "transaction",
        "`get*()`"
    ],
    "EditOfficeVisitForm": [
        "holds",
        "visit",
        "patient's",
        "`removeLabProcID`,",
        "hospitalID",
        "Cause",
        "form",
        "setAddDiagID",
        "fill",
        "done,",
        "removeDiagID",
        "setRemoveImmunizationID",
        "would",
        "getRemoveImmunizationID",
        "record.",
        "necessarily",
        "get",
        "getRemoveLabProcID",
        "something",
        "could",
        "setStartDate",
        "**Methods:**",
        "setAddLabProcID",
        "hcpID",
        "Identifiers",
        "allowing",
        "getRemoveMedID",
        "setPatientID",
        "medications",
        "say",
        "getAddLabProcID",
        "`removeDiagID`,",
        "it's",
        "getDosage",
        "Unique",
        "`addMedID`:",
        "getHcpID",
        "`removeImmunizationID`,",
        "getInstructions",
        "*",
        "Notes",
        "provider",
        "case",
        "patient",
        "getEndDate",
        "getPatientID",
        "endDate",
        "startDate",
        "represents",
        "setRemoveMedID",
        "`ovID`:",
        "death",
        "help",
        "Instructions",
        "visit.",
        "dosage",
        "patientID",
        ":)",
        "various",
        "Dates",
        "data",
        "setOvID",
        "`causeOfDeath`:",
        "administrative",
        "visit,",
        "setAddMedID",
        "applicable)",
        "setVisitDate",
        "Identifier",
        "hospital",
        "procedures,",
        "getters",
        "setRemoveDiagID",
        "setHcpID",
        "attribute,",
        "**Attributes:**",
        "getHospitalID",
        "information",
        "given",
        "\"form\"",
        "making",
        "`hcpID`:",
        "class:",
        "Setters",
        "healthcare",
        "type",
        "setRemoveProcID",
        "office",
        "access",
        "getAddDiagID",
        "(if",
        "Think",
        "itself.",
        "bean,",
        "setNotes",
        "coming",
        "addMedID",
        "getAddImmunizationID",
        "removeImmunizationID",
        "setAddImmunizationID",
        "`dosage`:",
        "map",
        "identifier",
        "editing",
        "setDosage",
        "contains",
        "setCauseOfDeath",
        "contain",
        "removeLabProcID",
        "getNotes",
        "getCauseOfDeath",
        "`EditOfficeVisitForm`",
        "real-life",
        "`endDate`:",
        "getVisitDate",
        "addDiagID",
        "summary",
        "information,",
        "setHospitalID",
        "setInstructions",
        "`addProcID`,",
        "added",
        "removed",
        "procedures",
        "getStartDate",
        "class",
        "`removeMedID`:",
        "diagnoses,",
        "`instructions`:",
        "medical",
        "addLabProcID",
        "getRemoveProcID",
        "`addImmunizationID`,",
        "getAddProcID",
        "addProcID",
        "addImmunizationID",
        "`visitDate`,",
        "getRemoveDiagID",
        "removeProcID",
        "setAddProcID",
        "**Purpose:**",
        "instructions",
        "getAddMedID",
        "setRemoveLabProcID",
        "`addLabProcID`,",
        "causeOfDeath",
        "`notes`:",
        "requirement,",
        "setEndDate",
        "bean",
        "immunizations,",
        "`addDiagID`,",
        "`startDate`,",
        "use",
        "form's",
        "removeMedID",
        "`hospitalID`:",
        "kinda.",
        "Dosage",
        "notes.",
        "attributes",
        "`removeProcID`,",
        "notes",
        "getOvID",
        "visitDate",
        "sense",
        "`patientID`:",
        "ovID",
        "related",
        "modification"
    ],
    "HealthRecordForm": [
        "bloodPressureN",
        "patient's",
        "`height`:",
        "retrieve",
        "strings",
        "cholesterolHDL",
        "form",
        "fill",
        "done,",
        "system",
        "would",
        "data.",
        "record.",
        "necessarily",
        "updating",
        "get",
        "(true",
        "edit",
        "provides",
        "isSmoker",
        "something",
        "could",
        "collect",
        "**Methods:**",
        "setBloodPressureN",
        "getCholesterolTri",
        "blood",
        "setBloodPressureD",
        "allowing",
        "say",
        "numerator",
        "it's",
        "setCholesterolLDL",
        "`bloodPressureN`",
        "triglyceride",
        "*",
        "weight",
        "patient",
        "initializes",
        "Java",
        "cholesterol",
        "getter",
        "getWeight",
        "represents",
        "getCholesterolHDL",
        "false)",
        "database.",
        "health",
        "representing",
        ":)",
        "data",
        "modified.",
        "setWeight",
        "`isSmoker`:",
        "provided",
        "administrative",
        "object.",
        "store",
        "getHeight",
        "getCholesterolLDL",
        "attribute,",
        "cholesterolLDL",
        "**Attributes:**",
        "getBloodPressureD",
        "setCholesterolHDL",
        "`cholesterolTri`:",
        "\"form\"",
        "making",
        "class:",
        "healthcare",
        "bloodPressureD",
        "create",
        "Think",
        "itself.",
        "bean,",
        "coming",
        "cholesterolTri",
        "`cholesterolLDL`,",
        "editing",
        "retrieved",
        "example,",
        "setCholesterolTri",
        "contains",
        "contain",
        "`cholesterolHDL`,",
        "attributes.",
        "real-life",
        "getBloodPressureN",
        "summary",
        "information,",
        "string",
        "`bloodPressureD`:",
        "whether",
        "class",
        "constructor",
        "height",
        "`weight`:",
        "indicating",
        "patients",
        "smoker",
        "levels",
        "values",
        "getIsSmoker",
        "setter",
        "LDL,",
        "**Purpose:**",
        "`HealthRecordForm`",
        "pressure",
        "Getter",
        "bean",
        "default",
        "HDL,",
        "attribute",
        "used",
        "kinda.",
        "setIsSmoker",
        "attributes",
        "respectively",
        "sense",
        "setHeight",
        "related",
        "denominator",
        "record",
        "methods"
    ],
    "AdverseEventBeanLoader": [
        "responsible",
        "implemented,",
        "subclass",
        "AdverseEventBeanLoader",
        "Based",
        "(and",
        "note",
        "(should",
        "`loadList(ResultSet)`:",
        "`loadSingle(ResultSet)`:",
        "ResultSet.",
        "AdverseEventBean.",
        "{@link",
        "load",
        "**Methods:**",
        "loader",
        "to/from",
        "-",
        "inspect",
        "enforces",
        "corresponding",
        "AdverseEventBean)`",
        "AdverseEventBeans",
        "requirement:",
        "*",
        "case",
        "scenarios.",
        "Java",
        "cover",
        "`loadSingle(ResultSet)`",
        "rs",
        "cases",
        "code",
        "superclass",
        "persisting",
        "extracts",
        "class,",
        "Loads",
        "state.)",
        "summary:**",
        "it.",
        "provided",
        "cannot",
        "enforce",
        "do),",
        "(the",
        "Load",
        "existing",
        "None",
        "ResultSets)",
        "set",
        "loadSingle",
        "details",
        "them.",
        "**Attributes:**",
        "information",
        "beans",
        "given",
        "iterates",
        "parameters",
        "consistency.",
        "Please",
        "based",
        "necessary",
        "AdverseEventBean)`:",
        "ps",
        "(Note:",
        "Use",
        "operate",
        "list",
        "map",
        "bean).",
        "process",
        "single",
        "currently",
        "loadList",
        "attributes.",
        "ResultSet",
        "PreparedStatement",
        "BeanLoader",
        "summary",
        "possible",
        "method",
        "PreparedStatements.",
        "see",
        "BeanLoader}",
        "calls",
        "ResultSets",
        "loading",
        "class",
        "AdverseEventBean",
        "Throws",
        "to:",
        "current",
        "implemented",
        "exception",
        "**Class",
        "**Purpose:**",
        "using",
        "consistency",
        "bean",
        "use",
        "paradigm",
        "used",
        "loadParameters",
        "attributes",
        "`loadParameters(PreparedStatement,",
        "AdverseEventBeans.",
        "bean.",
        "sets",
        "might",
        "methods"
    ],
    "AllergyBeanLoader": [
        "responsible",
        "retrieve",
        "(and",
        "AllergyBean",
        "data.",
        "{@link",
        "load",
        "`IllegalStateException`.",
        "`rs`",
        "query",
        "**Methods:**",
        "loader",
        "objects",
        "to/from",
        "-",
        "Returns:",
        "`SQLException`",
        "`AllergyBeanLoader`",
        "acts",
        "object",
        "3.",
        "1.",
        "*",
        "case",
        "Java",
        "mapping",
        "result.",
        "loader,",
        "rs",
        "comprehensive",
        "code",
        "AllergyBeans.",
        "database.",
        "`loadParameters(PreparedStatement",
        "superclass",
        "`loadList`",
        "Loads",
        "data",
        "`ResultSet`.",
        "object.",
        "specific",
        "allergy",
        "store",
        "enforce",
        "do),",
        "used.",
        "loadSingle",
        "loaded",
        "designed",
        "`loadSingle(ResultSet",
        "details",
        "requirement",
        "**Attributes:**",
        "attributes,",
        "information",
        "beans",
        "given",
        "`AllergyBean`",
        "class:",
        "SQL",
        "ps,",
        "`AllergyBean`:",
        "create",
        "consistency.",
        "ps",
        "`List<AllergyBean>`",
        "Use",
        "list",
        "map",
        "`ArrayList<AllergyBean>`:",
        "versa.",
        "single",
        "uses",
        "bean)`:",
        "(ResultSet)",
        "loadList",
        "Throws:",
        "occurs.",
        "following",
        "`loadList(ResultSet",
        "rs)`:",
        "summary",
        "vice",
        "method",
        "2.",
        "PreparedStatements.",
        "see",
        "BeanLoader}",
        "relational",
        "ResultSets",
        "instance,",
        "class",
        "Throws",
        "objects:",
        "**Purpose:**",
        "using",
        "requirement.",
        "Args:",
        "bean",
        "use",
        "`loadSingle`",
        "paradigm",
        "objects.",
        "error",
        "used",
        "loadParameters",
        "record,",
        "database",
        "results",
        "implemented.",
        "allergies",
        "populate",
        "patient,",
        "methods"
    ],
    "ApptBeanLoader": [
        "Requirement:**",
        "applications,",
        "retrieve",
        "adds",
        "comment.",
        "systems,",
        "`ApptBeanLoader`",
        "query.",
        "load",
        "Retrieve",
        "**Methods:**",
        "implements",
        "objects",
        "instance.",
        "scheduling",
        "variety",
        "loads",
        "date,",
        "3.",
        "1.",
        "execute",
        "instances",
        "set,",
        "*",
        "doctor",
        "case",
        "patient",
        "Java",
        "records",
        "rs",
        "database.",
        "`loadParameters(PreparedStatement",
        "row,",
        "data",
        "`ResultSet`.",
        "**Class:**",
        "appt",
        "`PreparedStatement`",
        "loadSingle",
        "loaded",
        "`loadSingle(ResultSet",
        "**Attributes:**",
        "including",
        "information",
        "given",
        "class:",
        "iterates",
        "ps,",
        "healthcare",
        "parameters",
        "resulting",
        "ps",
        "list.",
        "list",
        "**Use",
        "appointment",
        "Case",
        "single",
        "systems.",
        "bean)`:",
        "ApptBean",
        "loadList",
        "rs)`",
        "type,",
        "instance",
        "set.",
        "following",
        "required",
        "`loadList(ResultSet",
        "rs)`:",
        "summary",
        "method",
        "manipulate",
        "2.",
        "class",
        "medical",
        "requirements:",
        "management",
        "values",
        "`BeanLoader`",
        "interface,",
        "**Purpose:**",
        "using",
        "Populate",
        "bean",
        "`ApptBean`",
        "use",
        "used",
        "calling",
        "loadParameters",
        "result",
        "attributes",
        "`ApptBean`:",
        "ID,",
        "database",
        "sets",
        "record"
    ],
    "ApptTypeBeanLoader": [
        "UI.",
        "case",
        "designed",
        "`loadSingle(ResultSet",
        "Java",
        "layer",
        "requirement",
        "**Attributes:**",
        "class",
        "processing",
        "rs",
        "Sets",
        "cases",
        "given",
        "part",
        "class:",
        "ps,",
        "need",
        "parameters",
        "type",
        "database.",
        "apptType",
        "`loadParameters(PreparedStatement",
        "ps",
        "Name:**",
        "**Class",
        "**Purpose:**",
        "Use",
        "list",
        "`ApptTypeBeanLoader`",
        "load",
        "appointment",
        "business",
        "map",
        "provides",
        "Loads",
        "application.",
        "display",
        "**Methods:**",
        "single",
        "use",
        "`ResultSet`.",
        "objects",
        "set",
        "objects.",
        "loadList",
        "apptType)`:",
        "object.",
        "loadParameters",
        "used",
        "object",
        "modification.",
        "interact",
        "types",
        "ApptTypeBean",
        "database",
        "Using",
        "objects,",
        "`loadList(ResultSet",
        "include:",
        "rs)`:",
        "summary",
        "prepared",
        "logic",
        "None",
        "object,",
        "may",
        "`ApptTypeBean`",
        "Loading",
        "statement",
        "methods",
        "loadSingle",
        "*"
    ],
    "BeanLoader": [
        "loaded",
        "responsible",
        "rs",
        "generic",
        "type",
        "extacting",
        "@param",
        "ps",
        "helps",
        "specifies",
        "bean",
        "loader",
        "class.",
        "paradigm",
        "contained",
        "loadList",
        "loadParameters",
        "interface",
        "set.",
        "result",
        "<T>",
        "loader.",
        "enforce",
        "loadSingle"
    ],
    "DiagnosisBeanLoader": [
        "responsible",
        "implemented,",
        "back",
        "(and",
        "fields.",
        "boolean",
        "ResultSet.",
        "`loadOVDiagnosisID`",
        "{@link",
        "load",
        "`IllegalStateException`.",
        "VisitID)",
        "OVDiagnosisID",
        "**Methods:**",
        "loader",
        "objects",
        "to/from",
        "object",
        "loads",
        "also",
        "throws",
        "populates",
        "*",
        "adding",
        "`loadSingle(ResultSet)`",
        "rs",
        "paradigms.",
        "`DiagnosisBeanLoader`",
        "database,",
        "database.",
        "`loadParameters(PreparedStatement",
        "superclass",
        "row,",
        "Loads",
        "store",
        "enforce",
        "do),",
        "flag",
        "DiagnosisBean",
        "loadSingle",
        "set",
        "`loadOVDiagnosisID`:",
        "`loadSingle(ResultSet",
        "details",
        "**Attributes:**",
        "information",
        "beans",
        "class:",
        "iterates",
        "ps,",
        "consistency.",
        "resulting",
        "ps",
        "list.",
        "Use",
        "list",
        "`DiagnosisBean`",
        "standard",
        "extends",
        "single",
        "bean)`:",
        "loadList",
        "new",
        "creates",
        "ResultSet",
        "(OVDiagnosisID",
        "`loadList(ResultSet",
        "rs)`:",
        "summary",
        "PreparedStatements.",
        "see",
        "BeanLoader}",
        "additional",
        "calls",
        "ResultSets",
        "either",
        "whether",
        "loading",
        "class",
        "indicating",
        "`BeanLoader`",
        "fields",
        "true,",
        "loadOVDiagnosisID",
        "**Purpose:**",
        "using",
        "DiagnosisBeans.",
        "consistency",
        "bean",
        "paradigm",
        "used",
        "loadParameters",
        "without",
        "VisitID",
        "VisitID),",
        "sets",
        "methods"
    ],
    "DrugInteractionBeanLoader": [
        "implemented,",
        "retrieve",
        "(and",
        "DrugInteractionBean",
        "populating",
        "data.",
        "{@link",
        "screening",
        "`IllegalStateException`.",
        "**Methods:**",
        "loader",
        "unimplemented.",
        "objects",
        "to/from",
        "intended",
        "object",
        "`DrugInteractionBean`",
        "loads",
        "objects,",
        "needs",
        "throws",
        "populates",
        "*",
        "rs",
        "cases",
        "multiple",
        "`loadParameters(PreparedStatement",
        "superclass",
        "`loadParameters`",
        "`loadList`",
        "Loads",
        "data",
        "`ResultSet`.",
        "DrugInteractionBeanLoader",
        "enforce",
        "do),",
        "beans,",
        "loadSingle",
        "set",
        "loaded",
        "`loadSingle(ResultSet",
        "MedicationBeans.",
        "details",
        "**Attributes:**",
        "information",
        "beans",
        "given",
        "class:",
        "ps,",
        "parameters",
        "interactions",
        "consistency.",
        "ps",
        "Use",
        "medication",
        "list",
        "single",
        "uses",
        "currently",
        "bean)`:",
        "loadList",
        "`loadList(ResultSet",
        "system.",
        "rs)`:",
        "summary",
        "`PreparedStatement`,",
        "method",
        "PreparedStatements.",
        "see",
        "BeanLoader}",
        "mediating",
        "ResultSets",
        "class",
        "interaction",
        "**Purpose:**",
        "using",
        "suitable",
        "bean",
        "use",
        "`loadSingle`",
        "paradigm",
        "objects.",
        "loadParameters",
        "database",
        "`ResultSet`",
        "bean.",
        "methods"
    ],
    "EmailBeanLoader": [
        "subclass",
        "retrieve",
        "Sets",
        "(and",
        "Email",
        "{@link",
        "load",
        "email",
        "query",
        "**Methods:**",
        "loader",
        "objects",
        "to/from",
        "object",
        "loads",
        "enforces",
        "statement",
        "superclass.",
        "*",
        "case",
        "rs",
        "database.",
        "`loadParameters(PreparedStatement",
        "superclass",
        "`loadParameters`",
        "email)`:",
        "`loadList`",
        "Loads",
        "object.",
        "specific",
        "enforce",
        "do),",
        "prepared",
        "None",
        "loadSingle",
        "`loadSingle(ResultSet",
        "requirement",
        "details",
        "**Attributes:**",
        "information",
        "beans",
        "class:",
        "ps,",
        "parameters",
        "consistency.",
        "ps",
        "Use",
        "list",
        "`Email`",
        "versa.",
        "single",
        "loadList",
        "email,",
        "set.",
        "`loadList(ResultSet",
        "`EmailBeanLoader`",
        "rs)`:",
        "summary",
        "emails,",
        "vice",
        "method",
        "PreparedStatements.",
        "see",
        "BeanLoader}",
        "involves",
        "ResultSets",
        "Fake",
        "loading",
        "class",
        "prepare",
        "`BeanLoader`",
        "**Class",
        "using",
        "consistency",
        "use",
        "`loadSingle`",
        "paradigm",
        "used",
        "loadParameters",
        "manipulating",
        "result",
        "database",
        "Purpose:**",
        "methods",
        "Emails."
    ],
    "FamilyBeanLoader": [
        "responsible",
        "(and",
        "system,",
        "Summary:**",
        "FamilyMemberBean",
        "Name:**",
        "{@link",
        "member",
        "load",
        "column",
        "could",
        "**Methods:**",
        "loader",
        "implements",
        "objects",
        "to/from",
        "object",
        "loads",
        "objects,",
        "needs",
        "statement",
        "enforcing",
        "superclass.",
        "*",
        "case",
        "patient",
        "initializes",
        "Java",
        "rs",
        "represents",
        "database,",
        "`loadParameters(PreparedStatement",
        "superclass",
        "required.",
        "Loads",
        "unimplemented,",
        "data",
        "members'",
        "enforce",
        "do),",
        "patient.",
        "prepared",
        "`relation`:",
        "loadSingle",
        "family",
        "loaded",
        "`loadSingle(ResultSet",
        "details",
        "**Attributes:**",
        "including",
        "information",
        "beans",
        "given",
        "`relation`",
        "FamilyBeanLoader",
        "ps,",
        "healthcare",
        "parameters",
        "create",
        "consistency.",
        "based",
        "ps",
        "Use",
        "list",
        "single",
        "example,",
        "currently",
        "bean)`:",
        "loadList",
        "rs)`",
        "`loadList(ResultSet",
        "BeanLoader",
        "rs)`:",
        "summary",
        "maps",
        "method",
        "PreparedStatements.",
        "ResultSet,",
        "see",
        "string",
        "BeanLoader}",
        "relationship",
        "ResultSets",
        "loading",
        "class",
        "constructor",
        "code:",
        "values",
        "interface,",
        "`FamilyBeanLoader(String",
        "**Class",
        "**Purpose:**",
        "using",
        "FamilyMemberBeans.",
        "setting",
        "consistency",
        "bean",
        "use",
        "paradigm",
        "attribute",
        "objects.",
        "relation)`:",
        "used",
        "loadParameters",
        "attributes",
        "relation",
        "database",
        "methods"
    ],
    "HealthRecordsBeanLoader": [
        "responsible",
        "adds",
        "Sets",
        "(and",
        "user,",
        "(since",
        "{@link",
        "doesn't",
        "load",
        "**Methods:**",
        "loader",
        "to/from",
        "`HealthRecord`",
        "also",
        "it's",
        "Mapping:**",
        "Iterates",
        "*",
        "case",
        "patient",
        "records",
        "loader,",
        "rs",
        "database.",
        "`loadParameters(PreparedStatement",
        "superclass",
        "health",
        "beans.",
        "Prepare",
        "insert",
        "Loads",
        "display",
        "data",
        "`ResultSet`.",
        "Creates",
        "enforce",
        "do),",
        "Load",
        "None",
        "`PreparedStatement`",
        "`HealthRecordsBeanLoader`",
        "loadSingle",
        "`loadSingle(ResultSet",
        "requirement",
        "details",
        "**Attributes:**",
        "attributes,",
        "information",
        "beans",
        "class:",
        "ps,",
        "parameters",
        "consistency.",
        "table",
        "HealthRecord",
        "Requirements",
        "ps",
        "Use",
        "list",
        "Prepares",
        "**Use",
        "update",
        "Case",
        "works",
        "example,",
        "bean)`:",
        "loadList",
        "scenario",
        "new",
        "inserted",
        "`loadList(ResultSet",
        "updated",
        "rs)`:",
        "summary",
        "PreparedStatements.",
        "see",
        "BeanLoader}",
        "+",
        "ResultSets",
        "loading",
        "class",
        "HealthRecords.",
        "to:",
        "need",
        "values",
        "fetch",
        "**Purpose:**",
        "using",
        "bean",
        "use",
        "paradigm",
        "used",
        "loadParameters",
        "attributes",
        "database",
        "`ResultSet`",
        "columns",
        "preparing",
        "bean.",
        "sets",
        "bean)",
        "record",
        "Map",
        "methods"
    ],
    "HospitalBeanLoader": [
        "responsible",
        "(and",
        "Summary:**",
        "ResultSet.",
        "{@link",
        "load",
        "name",
        "HospitalBeans.",
        "**Methods:**",
        "loader",
        "objects",
        "to/from",
        "object",
        "Requirements:**",
        "3.",
        "1.",
        "require",
        "Iterates",
        "*",
        "paradigm.",
        "HospitalBean",
        "implementing",
        "rs",
        "ID",
        "`loadParameters(PreparedStatement",
        "superclass",
        "`loadParameters`",
        "class,",
        "Loads",
        "provided",
        "bean-loading",
        "object.",
        "Creates",
        "store",
        "enforce",
        "do),",
        "`HospitalBeanLoader`",
        "Load",
        "hospital",
        "prepared",
        "loadSingle",
        "loaded",
        "`loadSingle(ResultSet",
        "details",
        "**Attributes:**",
        "information",
        "beans",
        "given",
        "class:",
        "ps,",
        "parameters",
        "consistency.",
        "loaded.",
        "ps",
        "list.",
        "ensuring",
        "Use",
        "list",
        "**Use",
        "Case",
        "extends",
        "single",
        "bean)`:",
        "loadList",
        "new",
        "ResultSet",
        "table.",
        "`List<HospitalBean>`:",
        "`loadList(ResultSet",
        "rs)`:",
        "summary",
        "method",
        "2.",
        "PreparedStatements.",
        "see",
        "BeanLoader}",
        "calls",
        "ResultSets",
        "loading",
        "class",
        "Throws",
        "indicating",
        "Returns",
        "`BeanLoader`",
        "statement.",
        "**Class",
        "storing",
        "called,",
        "using",
        "`IllegalStateException`",
        "consistency",
        "bean",
        "`loadSingle`",
        "paradigm",
        "objects.",
        "loadParameters",
        "individual",
        "`HospitalBean`:",
        "database",
        "implemented.",
        "May",
        "methods"
    ],
    "LabProcedureBeanLoader": [
        "responsible",
        "(and",
        "Summary:**",
        "ResultSet.",
        "data.",
        "{@link",
        "load",
        "provides",
        "**Methods:**",
        "loader",
        "unimplemented.",
        "objects",
        "to/from",
        "object",
        "objects,",
        "PreparedStatement.",
        "*",
        "Java",
        "LabProcedureBean",
        "rs",
        "purpose",
        "`loadParameters(PreparedStatement",
        "superclass",
        "`loadParameters`",
        "Loads",
        "separate",
        "it.",
        "data",
        "object.",
        "LabProcedureBeans.",
        "unimplemented",
        "enforce",
        "do),",
        "None",
        "returns",
        "loadSingle",
        "`loadSingle(ResultSet",
        "details",
        "**Attributes:**",
        "information",
        "beans",
        "given",
        "row",
        "class:",
        "iterates",
        "ps,",
        "parameters",
        "consistency.",
        "ps",
        "Use",
        "list",
        "extends",
        "single",
        "currently",
        "bean)`:",
        "loadList",
        "ResultSet",
        "future",
        "`loadList(ResultSet",
        "rs)`:",
        "summary",
        "method",
        "PreparedStatements.",
        "ResultSet,",
        "see",
        "BeanLoader}",
        "ResultSets",
        "loading",
        "class",
        "`LabProcedureBeanLoader`",
        "Throws",
        "`LabProcedureBean`",
        "`BeanLoader`",
        "**Class",
        "**Purpose:**",
        "using",
        "`IllegalStateException`",
        "consistency",
        "bean",
        "paradigm",
        "objects.",
        "used",
        "loadParameters",
        "database",
        "methods"
    ],
    "LOINCBeanLoader": [
        "functionality",
        "(and",
        "shown",
        "ResultSet.",
        "{@link",
        "load",
        "`IllegalStateException`.",
        "**Methods:**",
        "loader",
        "objects",
        "to/from",
        "object",
        "Requirements:**",
        "throws",
        "code.",
        "*",
        "mapping",
        "Java",
        "records",
        "rs",
        "`loadParameters(PreparedStatement",
        "superclass",
        "extracts",
        "class,",
        "Loads",
        "provided",
        "requires",
        "enforce",
        "do),",
        "`LOINCBeanLoader`",
        "LOINCbean",
        "loadSingle",
        "`loadSingle(ResultSet",
        "details",
        "**Attributes:**",
        "attributes,",
        "information",
        "beans",
        "given",
        "class:",
        "iterates",
        "ps,",
        "consistency.",
        "ps",
        "Use",
        "list",
        "**Use",
        "`LOINCbean`",
        "Case",
        "single",
        "direct",
        "uses",
        "currently",
        "bean)`:",
        "loadList",
        "ResultSet",
        "`loadList(ResultSet",
        "rs)`:",
        "summary",
        "method",
        "PreparedStatements.",
        "see",
        "BeanLoader}",
        "calls",
        "ResultSets",
        "class",
        "implemented",
        "values",
        "**Purpose:**",
        "using",
        "LOINCBeans.",
        "bean",
        "`loadSingle`",
        "paradigm",
        "objects.",
        "used",
        "loadParameters",
        "database",
        "LOINCBeans",
        "bean.",
        "sets",
        "program",
        "methods"
    ],
    "MedicationBeanLoader": [
        "responsible",
        "(and",
        "ResultSet.",
        "Name:**",
        "{@link",
        "load",
        "MedicationBean",
        "loader",
        "**Methods:**",
        "unimplemented.",
        "MedicationBeans,",
        "objects",
        "to/from",
        "-",
        "object",
        "needs",
        "Mapping:**",
        "**loadList(ResultSet",
        "set,",
        "row.",
        "rs",
        "purpose",
        "code",
        "database,",
        "superclass",
        "class,",
        "Loads",
        "data",
        "rs):**",
        "bean):**",
        "MedicationBeanLoader()",
        "**loadParameters(PreparedStatement",
        "captures",
        "object.",
        "enforce",
        "do),",
        "description",
        "IllegalStateException",
        "methods:",
        "None",
        "set",
        "loadSingle",
        "loaded",
        "MedicationBeans.",
        "details",
        "**Attributes:**",
        "MedicationBeanLoader",
        "attributes,",
        "information",
        "beans",
        "iterates",
        "ps,",
        "consistency.",
        "ps",
        "Use",
        "medication",
        "list",
        "**Use",
        "Case",
        "single",
        "versa.",
        "class.",
        "currently",
        "**Constructor:**",
        "loadList",
        "scenario",
        "instance",
        "new",
        "creates",
        "ResultSet",
        "summary",
        "vice",
        "method",
        "PreparedStatements.",
        "see",
        "BeanLoader}",
        "**loadSingle(ResultSet",
        "ResultSets",
        "loading",
        "class",
        "Throws",
        "Requirement",
        "**Class",
        "**Purpose:**",
        "using",
        "bean",
        "paradigm",
        "calling",
        "used",
        "loadParameters",
        "takes",
        "result",
        "database",
        "object,",
        "Initializes",
        "methods"
    ],
    "MessageBeanLoader": [
        "message",
        "Sets",
        "(and",
        "sender,",
        "MessageBeans.",
        "populating",
        "understanding",
        "{@link",
        "provides",
        "**Methods:**",
        "loader",
        "objects",
        "to/from",
        "object",
        "Requirements:**",
        "loads",
        "status.",
        "requirement:",
        "`PreparedStatements`.",
        "*",
        "case",
        "Java",
        "rs",
        "purposes",
        "code",
        "recipient,",
        "`loadParameters(PreparedStatement",
        "superclass",
        "Loads",
        "display",
        "inbox).",
        "purpose,",
        "`ResultSet`.",
        "object.",
        "`MessageBean`",
        "subject,",
        "MessageBean",
        "enforce",
        "do),",
        "messages",
        "None",
        "`PreparedStatement`",
        "Loading",
        "loadSingle",
        "`loadSingle(ResultSet",
        "details",
        "**Attributes:**",
        "attributes,",
        "information",
        "beans",
        "given",
        "making",
        "ps,",
        "(e.g.,",
        "parameters",
        "easier",
        "consistency.",
        "ps",
        "Use",
        "list",
        "**Use",
        "map",
        "Case",
        "`MessageBeanLoader`",
        "single",
        "loadList",
        "message)`:",
        "scenarios:",
        "Storing",
        "following",
        "attributes.",
        "read",
        "`loadList(ResultSet",
        "rs)`:",
        "summary",
        "PreparedStatements.",
        "see",
        "BeanLoader}",
        "ResultSets",
        "class's",
        "class",
        "methods,",
        "**Class",
        "Retrieving",
        "using",
        "requirement.",
        "body,",
        "use",
        "paradigm",
        "used",
        "clear",
        "loadParameters",
        "attributes",
        "database",
        "`ResultSets`",
        "Purpose:**",
        "methods"
    ],
    "OfficeVisitLoader": [
        "implemented,",
        "scenarios",
        "retrieve",
        "(and",
        "retrieving",
        "OfficeVisitBean",
        "ResultSet.",
        "data.",
        "{@link",
        "`SimpleDateFormat`).",
        "load",
        "`IllegalStateException`.",
        "could",
        "potentially",
        "**Methods:**",
        "loader",
        "objects",
        "to/from",
        "explicitly",
        "object",
        "implemented;",
        "needs",
        "throws",
        "classes",
        "p)`:",
        "*",
        "rs",
        "`OfficeVisitLoader`",
        "(such",
        "`loadParameters(PreparedStatement",
        "superclass",
        "`loadParameters`",
        "populated",
        "listed,",
        "`loadList`",
        "visit.",
        "Loads",
        "data",
        "`Date`",
        "enforce",
        "do),",
        "None",
        "loadSingle",
        "`loadSingle(ResultSet",
        "details",
        "**Attributes:**",
        "visits,",
        "information",
        "beans",
        "given",
        "ps,",
        "consistency.",
        "type",
        "office",
        "ps",
        "Use",
        "list",
        "single",
        "retrieved",
        "uses",
        "currently",
        "loadList",
        "`OfficeVisitBean`",
        "`loadList(ResultSet",
        "PreparedStatement",
        "rs)`:",
        "summary",
        "method",
        "PreparedStatements.",
        "see",
        "BeanLoader}",
        "`OfficeVisitLoader`:",
        "ResultSets",
        "class",
        "p",
        "OfficeVisitBeans.",
        "prepare",
        "**Purpose:**",
        "using",
        "bean",
        "`loadSingle`",
        "paradigm",
        "objects.",
        "used",
        "loadParameters",
        "attributes",
        "database",
        "methods"
    ],
    "OperationalProfileLoader": [
        "`BeanLoader`.",
        "List",
        "(and",
        "follows",
        "{@link",
        "load",
        "**Methods:**",
        "loader",
        "objects",
        "to/from",
        "object",
        "`OperationalProfile`",
        "loads",
        "counts",
        "*",
        "loader,",
        "rs",
        "totals",
        "different",
        "described",
        "`loadParameters(PreparedStatement",
        "superclass",
        "extracts",
        "OperationalProfile",
        "operational",
        "`loadList`",
        "Loads",
        "data",
        "extracted",
        "`ResultSet`.",
        "object.",
        "**Paradigm:**",
        "types.",
        "enforce",
        "do),",
        "`PreparedStatement`",
        "loadSingle",
        "set",
        "`loadSingle(ResultSet",
        "details",
        "**Attributes:**",
        "including",
        "information",
        "beans",
        "profile",
        "class:",
        "ps,",
        "parameters",
        "consistency.",
        "ps",
        "Use",
        "list",
        "**Use",
        "single",
        "bean)`:",
        "loadList",
        "Case:**",
        "`loadList(ResultSet",
        "rs)`:",
        "summary",
        "method",
        "PreparedStatements.",
        "see",
        "BeanLoader}",
        "ResultSets",
        "loading",
        "class",
        "profile.",
        "**Purpose:**",
        "using",
        "consistency",
        "bean",
        "`OperationalProfileLoader`",
        "`loadSingle`",
        "paradigm",
        "objects.",
        "used",
        "loadParameters",
        "database",
        "implemented.",
        "`ResultSet`",
        "sets",
        "object,",
        "transaction",
        "methods"
    ],
    "PatientLoader": [
        "responsible",
        "`PatientLoader`",
        "(and",
        "data.",
        "{@link",
        "load",
        "**Methods:**",
        "loader",
        "to/from",
        "object",
        "objects,",
        "`PatientBean",
        "p)`:",
        "*",
        "case",
        "patient",
        "rs",
        "`loadParameters(PreparedStatement",
        "superclass",
        "Loads",
        "object.",
        "enforce",
        "do),",
        "`PreparedStatement`",
        "loadSingle",
        "`loadSingle(ResultSet",
        "requirement",
        "details",
        "**Attributes:**",
        "processing",
        "information",
        "beans",
        "ps,",
        "PatientBean",
        "parameters",
        "consistency.",
        "loaded.",
        "necessary",
        "ps",
        "Java:",
        "Use",
        "list",
        "Prepares",
        "single",
        "uses",
        "loadList",
        "attributes.",
        "`loadList(ResultSet",
        "`PatientBean`",
        "summary",
        "rs)`:",
        "collection",
        "maps",
        "PreparedStatements.",
        "see",
        "BeanLoader}",
        "p`:",
        "ResultSets",
        "bean's",
        "loading",
        "class",
        "p",
        "patients",
        "**Purpose:**",
        "using",
        "bean",
        "use",
        "paradigm",
        "objects.",
        "used",
        "loadParameters",
        "database",
        "PatientBeans.",
        "`ResultSet`",
        "populate",
        "methods",
        "storage."
    ],
    "PersonnelLoader": [
        "Sets",
        "(and",
        "ResultSet.",
        "{@link",
        "load",
        "**Methods:**",
        "loader",
        "objects",
        "to/from",
        "`PersonnelBean`",
        "object",
        "Requirements:**",
        "objects,",
        "p)`:",
        "statement",
        "requirement:",
        "*",
        "case",
        "rs",
        "code",
        "database,",
        "database.",
        "`loadParameters(PreparedStatement",
        "superclass",
        "`loadParameters`",
        "Prepare",
        "insert",
        "`loadList`",
        "Loads",
        "object.",
        "enforce",
        "do),",
        "Load",
        "Mapping",
        "prepared",
        "None",
        "loadSingle",
        "`loadSingle(ResultSet",
        "requirement",
        "details",
        "**Attributes:**",
        "information",
        "beans",
        "class:",
        "ps,",
        "parameters",
        "consistency.",
        "method.",
        "ps",
        "Use",
        "`PersonnelLoader`",
        "list",
        "**Use",
        "personnel",
        "Case",
        "single",
        "loadList",
        "SQLite",
        "`loadList(ResultSet",
        "PreparedStatement",
        "rs)`:",
        "summary",
        "PreparedStatements.",
        "see",
        "BeanLoader}",
        "ResultSets",
        "class",
        "p",
        "to:",
        "prepare",
        "PersonnelBean",
        "**Purpose:**",
        "using",
        "use",
        "`loadSingle`",
        "paradigm",
        "objects.",
        "used",
        "loadParameters",
        "database",
        "PersonnelBeans.",
        "object,",
        "record",
        "methods"
    ],
    "PrescriptionBeanLoader": [
        "responsible",
        "pres)`:",
        "pres",
        "(and",
        "instances,",
        "{@link",
        "load",
        "provides",
        "handles",
        "loader",
        "**Methods:**",
        "`PrescriptionBean`",
        "objects",
        "to/from",
        "PrescriptionBean",
        "object",
        "also",
        "loads",
        "objects,",
        "needs",
        "medLoader",
        "*",
        "case",
        "Java",
        "mapping",
        "tables.",
        "rs",
        "`loadParameters(PreparedStatement",
        "superclass",
        "`medLoader`:",
        "insert",
        "Loads",
        "object.",
        "PrescriptionBeans.",
        "`MedicationBeanLoader`",
        "enforce",
        "do),",
        "`PreparedStatement`",
        "loadSingle",
        "`PrescriptionBeanLoader`",
        "`loadSingle(ResultSet",
        "details",
        "**Attributes:**",
        "information",
        "beans",
        "class:",
        "ps,",
        "parameters",
        "consistency.",
        "based",
        "ps",
        "Use",
        "medication",
        "list",
        "versa.",
        "single",
        "loadList",
        "instance",
        "`loadList(ResultSet",
        "rs)`:",
        "summary",
        "vice",
        "PreparedStatements.",
        "see",
        "BeanLoader}",
        "ResultSets",
        "loading",
        "class",
        "**Purpose:**",
        "using",
        "application",
        "handle",
        "use",
        "paradigm",
        "objects.",
        "used",
        "loadParameters",
        "database",
        "`ResultSet`",
        "sets",
        "related",
        "methods"
    ],
    "PrescriptionReportBeanLoader": [
        "ovLoader",
        "visit",
        "pres",
        "PrescriptionReportBean)`:",
        "(and",
        "`loadList(ResultSet)`:",
        "`loadSingle(ResultSet)`:",
        "{@link",
        "load",
        "**Methods:**",
        "loader",
        "objects",
        "to/from",
        "object",
        "loads",
        "reports",
        "statement",
        "*",
        "case",
        "rs",
        "`OfficeVisitLoader`",
        "PrescriptionReportBeans.",
        "code",
        "database,",
        "superclass",
        "statements",
        "beans.",
        "`loadList`",
        "Loads",
        "achieve",
        "(unimplemented)",
        "enforce",
        "do),",
        "`PrescriptionReportBeanLoader`",
        "prepared",
        "`presLoader`:",
        "loadSingle",
        "set",
        "`PrescriptionBeanLoader`",
        "prescription",
        "requirement",
        "details",
        "**Attributes:**",
        "`PrescriptionReportBean`",
        "information",
        "beans",
        "given",
        "class:",
        "consistency.",
        "office",
        "ps",
        "Use",
        "list",
        "map",
        "single",
        "example,",
        "loadList",
        "this.",
        "instance",
        "summary",
        "method",
        "PreparedStatements.",
        "see",
        "BeanLoader}",
        "involves",
        "ResultSets",
        "loading",
        "class",
        "prepares",
        "`ovLoader`:",
        "**Purpose:**",
        "using",
        "requirement.",
        "presLoader",
        "use",
        "paradigm",
        "objects.",
        "used",
        "loadParameters",
        "result",
        "`loadParameters(PreparedStatement,",
        "sets",
        "methods"
    ],
    "ProcedureBeanLoader": [
        "scenarios",
        "(and",
        "boolean",
        "ResultSet.",
        "{@link",
        "Attribute",
        "load",
        "query",
        "**Methods:**",
        "loader",
        "objects",
        "to/from",
        "loadOVProcedureID",
        "`SQLException`",
        "object",
        "loads",
        "true.",
        "needs",
        "determines",
        "*",
        "case",
        "results.",
        "rs",
        "`Description`",
        "database,",
        "`loadParameters(PreparedStatement",
        "superclass",
        "ProcedureBean",
        "Loads",
        "data",
        "specific",
        "enforce",
        "do),",
        "`ProcedureBean`",
        "flag",
        "initialization",
        "serves",
        "control",
        "occurs",
        "Populates",
        "PreparedStatements",
        "loadSingle",
        "loaded",
        "`ProcedureBeanLoader`",
        "`loadSingle(ResultSet",
        "details",
        "**Attributes:**",
        "processing",
        "information",
        "beans",
        "given",
        "class:",
        "`loadOVProcedureID`",
        "Description,",
        "ps,",
        "consistency.",
        "loaded,",
        "depends",
        "ps",
        "Code,",
        "Use",
        "bean,",
        "list",
        "values.",
        "single",
        "bean)`:",
        "`loadOVProcedureID`:",
        "loadList",
        "rs)`",
        "Throws:",
        "instances.",
        "`loadList(ResultSet",
        "PreparedStatement",
        "rs)`:",
        "summary",
        "method",
        "PreparedStatements.",
        "see",
        "BeanLoader}",
        "calls",
        "+",
        "ResultSets",
        "whether",
        "class",
        "individually.",
        "values",
        "**Purpose:**",
        "using",
        "setting",
        "bean",
        "requirements.",
        "use",
        "paradigm",
        "attribute",
        "objects.",
        "error",
        "optionally",
        "loadParameters",
        "used",
        "ProcedureBeans.",
        "attributes",
        "parameter",
        "reading",
        "visitDate",
        "sets",
        "specifically",
        "object,",
        "attribute.",
        "OvProcedureID",
        "methods"
    ],
    "ReferralBeanLoader": [
        "responsible",
        "PatientID,",
        "scenarios",
        "retrieve",
        "Sets",
        "(and",
        "like",
        "ConsultationDetails,",
        "system",
        "ref)`:",
        "populating",
        "{@link",
        "load",
        "data,",
        "Status)",
        "**Methods:**",
        "loader",
        "objects",
        "to/from",
        "explicitly",
        "object",
        "needs",
        "ReferralBean",
        "manage",
        "Mapping:**",
        "PreparedStatement.",
        "*",
        "providers.",
        "rs",
        "ref",
        "ReferralBeans.",
        "database,",
        "database.",
        "`loadParameters(PreparedStatement",
        "superclass",
        "insert",
        "id,",
        "Loads",
        "it.",
        "data",
        "object.",
        "specific",
        "ReferralDetails,",
        "enforce",
        "do),",
        "returns",
        "loadSingle",
        "variables",
        "`loadSingle(ResultSet",
        "details",
        "**Attributes:**",
        "ReferralBeanLoader",
        "made",
        "information",
        "beans",
        "given",
        "class:",
        "ps,",
        "(None",
        "healthcare",
        "parameters",
        "create",
        "consistency.",
        "based",
        "Requirements",
        "SenderID,",
        "ps",
        "declared,",
        "Use",
        "list",
        "**Use",
        "Case",
        "update",
        "generate",
        "uses",
        "loadList",
        "referral",
        "ResultSet",
        "`loadList(ResultSet",
        "PreparedStatement",
        "rs)`:",
        "summary",
        "information,",
        "PreparedStatements.",
        "see",
        "BeanLoader}",
        "ResultSets",
        "loading",
        "class",
        "management",
        "prepare",
        "fetch",
        "**Class",
        "using",
        "referrals",
        "records,",
        "paradigm",
        "used",
        "loadParameters",
        "individual",
        "database",
        "Purpose:**",
        "methods",
        "ReceiverID,"
    ],
    "RemoteMonitoringDataBeanLoader": [
        "responsible",
        "RemoteMonitoringDataBean",
        "(and",
        "inserting",
        "`List<RemoteMonitoringDataBean>`:",
        "data.",
        "Name:**",
        "{@link",
        "updating",
        "load",
        "**Methods:**",
        "loader",
        "implements",
        "objects",
        "to/from",
        "object",
        "objects,",
        "`RemoteMonitoringDataBean`",
        "*",
        "Java",
        "rs",
        "classes.",
        "(Not",
        "`loadParameters(PreparedStatement",
        "superclass",
        "Loads",
        "data",
        "object.",
        "enforce",
        "do),",
        "`RemoteMonitoringDataBean`:",
        "RemoteMonitoringDataBeans.",
        "`PreparedStatement`",
        "loadSingle",
        "loaded",
        "`loadSingle(ResultSet",
        "details",
        "**Attributes:**",
        "processing",
        "information",
        "beans",
        "given",
        "class:",
        "ps,",
        "parameters",
        "consistency.",
        "type",
        "ps",
        "ensuring",
        "Use",
        "list",
        "Prepares",
        "**Use",
        "implemented)",
        "single",
        "bean)`:",
        "loadList",
        "Case:**",
        "`loadList(ResultSet",
        "rs)`:",
        "summary",
        "PreparedStatements.",
        "see",
        "BeanLoader}",
        "ResultSets",
        "loading",
        "class",
        "`RemoteMonitoringDataBeanLoader`",
        "`BeanLoader`",
        "interface,",
        "**Class",
        "**Purpose:**",
        "using",
        "consistency",
        "bean",
        "paradigm",
        "used",
        "loadParameters",
        "database",
        "`ResultSet`",
        "preparing",
        "methods",
        "storage."
    ],
    "ReportRequestBeanLoader": [
        "`BeanLoader`.",
        "(and",
        "{@link",
        "provides",
        "**Methods:**",
        "loader",
        "unimplemented.",
        "though",
        "objects",
        "to/from",
        "explicitly",
        "intended",
        "object",
        "loads",
        "enforces",
        "*",
        "concise",
        "case",
        "Java",
        "mapping",
        "rs",
        "code",
        "`loadParameters(PreparedStatement",
        "superclass",
        "Loads",
        "purpose,",
        "indirectly",
        "`ResultSet`.",
        "mentioned,",
        "enforce",
        "do),",
        "None",
        "`PreparedStatement`",
        "ReportRequestBeans.",
        "loadSingle",
        "set",
        "`loadSingle(ResultSet",
        "details",
        "**Attributes:**",
        "attributes,",
        "information",
        "beans",
        "given",
        "class:",
        "ps,",
        "`ReportRequestBeanLoader`",
        "useful",
        "parameters",
        "consistency.",
        "ps",
        "Use",
        "list",
        "single",
        "uses",
        "currently",
        "bean)`:",
        "overview",
        "loadList",
        "`loadList(ResultSet",
        "rs)`:",
        "summary",
        "method",
        "PreparedStatements.",
        "see",
        "BeanLoader}",
        "ReportRequestBean",
        "ResultSets",
        "class's",
        "class",
        "methods,",
        "**Purpose:**",
        "using",
        "requirement.",
        "consistency",
        "bean",
        "use",
        "paradigm",
        "objects.",
        "loadParameters",
        "`ResultSet`",
        "object,",
        "`ResultSet`,",
        "methods",
        "`ReportRequestBean`"
    ],
    "SurveyLoader": [
        "Sets",
        "(and",
        "SurveyLoader.class",
        "Summary:**",
        "ResultSet.",
        "data.",
        "retrieves",
        "{@link",
        "load",
        "provides",
        "**Methods:**",
        "loader",
        "implements",
        "unimplemented.",
        "objects",
        "to/from",
        "object",
        "Prepared",
        "objects,",
        "corresponding",
        "*",
        "Java",
        "rs",
        "SurveyBean,",
        "`loadParameters(PreparedStatement",
        "superclass",
        "SurveyBeans.",
        "Loads",
        "various",
        "data",
        "object.",
        "perform",
        "Statement",
        "enforce",
        "do),",
        "SurveyBeans,",
        "loadSingle",
        "set",
        "loaded",
        "`loadSingle(ResultSet",
        "details",
        "**Attributes:**",
        "information",
        "beans",
        "class:",
        "ps,",
        "parameters",
        "consistency.",
        "based",
        "loaded.",
        "ps",
        "Use",
        "list",
        "map",
        "single",
        "currently",
        "bean)`:",
        "loadList",
        "interface",
        "Statement.",
        "ResultSet",
        "`loadList(ResultSet",
        "BeanLoader",
        "rs)`:",
        "summary",
        "method",
        "PreparedStatements.",
        "see",
        "BeanLoader}",
        "operations",
        "ResultSets",
        "class",
        "Returns",
        "**Class",
        "**Purpose:**",
        "using",
        "SurveyBean:",
        "survey",
        "bean",
        "paradigm",
        "SurveyBean",
        "objects.",
        "used",
        "loadParameters",
        "attributes",
        "database",
        "SurveyLoader",
        "sets",
        "methods"
    ],
    "SurveyResultBeanLoader": [
        "implemented,",
        "(and",
        "conjunction",
        "{@link",
        "`IllegalStateException`.",
        "load",
        "**Methods:**",
        "loader",
        "objects",
        "to/from",
        "intended",
        "object",
        "loads",
        "objects,",
        "throws",
        "3.",
        "1.",
        "SurveyResultBeans.",
        "mapping",
        "rs",
        "`SurveyResultBean`",
        "`loadParameters(PreparedStatement",
        "superclass",
        "beans.",
        "Loads",
        "data",
        "`ResultSet`.",
        "enforce",
        "do),",
        "None",
        "loadSingle",
        "`loadSingle(ResultSet",
        "details",
        "**Attributes:**",
        "processing",
        "information",
        "beans",
        "given",
        "ps,",
        "consistency.",
        "ps",
        "SurveyResultBean",
        "Use",
        "list",
        "**Use",
        "standard",
        "single",
        "bean)`:",
        "loadList",
        "interface",
        "Case:**",
        "`loadList(ResultSet",
        "rs)`:",
        "summary",
        "maps",
        "2.",
        "PreparedStatements.",
        "see",
        "BeanLoader}",
        "ResultSets",
        "loading",
        "class",
        "`BeanLoader`",
        "**Purpose:**",
        "using",
        "way",
        "survey",
        "consistency",
        "bean",
        "`SurveyResultBeanLoader`:",
        "paradigm",
        "objects.",
        "used",
        "loadParameters",
        "database",
        "`SurveyResultBeanLoader`",
        "results",
        "provide",
        "methods",
        "storage."
    ],
    "TransactionBeanLoader": [
        "(and",
        "are:",
        "`loggedInMID`:",
        "transactions.",
        "{@link",
        "load",
        "provides",
        "TransactionBeans.",
        "`TransactionBeanLoader`",
        "loader",
        "implements",
        "**Methods:**",
        "`transactionID`:",
        "objects",
        "to/from",
        "object",
        "populates",
        "set,",
        "*",
        "case",
        "TransactionBean",
        "`loadSingle(ResultSet)`",
        "rs",
        "transaction,",
        "lists",
        "value",
        "`loadParameters(PreparedStatement",
        "superclass",
        "Loads",
        "`secondaryMID`:",
        "`addedInfo`:",
        "`ResultSet`.",
        "`timeLogged`:",
        "`transactionType`:",
        "enforce",
        "do),",
        "None",
        "returns",
        "loadSingle",
        "loaded",
        "`loadSingle(ResultSet",
        "requirement",
        "details",
        "**Attributes:**",
        "information",
        "beans",
        "given",
        "class:",
        "iterates",
        "ps,",
        "consistency.",
        "ps",
        "Use",
        "list",
        "map",
        "single",
        "bean)`:",
        "loadList",
        "`TransactionType.parse(rs.getInt(\"transactionCode\"))`",
        "interface",
        "new",
        "set.",
        "long",
        "creates",
        "`loadList(ResultSet",
        "rs)`:",
        "summary",
        "method",
        "`TransactionBean`",
        "PreparedStatements.",
        "see",
        "string",
        "BeanLoader}",
        "involves",
        "+",
        "ResultSets",
        "loading",
        "class",
        "Throws",
        "values",
        "`BeanLoader`",
        "**Purpose:**",
        "using",
        "`IllegalStateException`",
        "bean",
        "use",
        "paradigm",
        "objects.",
        "used",
        "calling",
        "loadParameters",
        "enum",
        "result",
        "attributes",
        "database",
        "implemented.",
        "transactions",
        "timestamp",
        "methods"
    ],
    "AdverseEventsData": [
        "features",
        "prescription/immunization:",
        "month.",
        "adEvents",
        "Create",
        "hardcoded",
        "@author",
        "Object",
        "`hasExpired(Map",
        "generateLink",
        "Name:**",
        "capable",
        "dataset",
        "name",
        "CeWolf/JFreeChart:",
        "Serializable.",
        "data,",
        "Implement",
        "arg0",
        "special",
        "DatasetProducer,",
        "handles",
        "**Methods:**",
        "implements",
        "int",
        "expired",
        "setAdverseEventsList",
        "CategoryItemLinkGenerator",
        "hasExpired",
        "producer.",
        "Requirements:**",
        "Handle",
        "since",
        "throws",
        "links:",
        "months",
        "Feb,",
        "AdverseEventsData",
        "*",
        "Java",
        "adEvents,",
        "adverse",
        "generateToolTip",
        "codeName.",
        "name)`:",
        "ID",
        "`produceDataset(Map",
        "category",
        "immunization",
        "chart",
        "array",
        "tooltip",
        "Jason",
        "representing",
        "data",
        "unique",
        "Creates",
        "interfaces,",
        "Events",
        "store",
        "production",
        "params)",
        "arg2)`:",
        "prescription/immunization",
        "`codeName`:",
        "DatasetProduceException`:",
        "item.",
        "names",
        "prescription",
        "dataset.",
        "finalize",
        "**Attributes:**",
        "target",
        "produceDataset",
        "getProducerId",
        "given",
        "making",
        "CategoryToolTipGenerator,",
        "(Jan,",
        "CategoryItemLinkGenerator,",
        "based",
        "`generateLink(Object",
        "handling",
        "Checks",
        "CeWolf/JFreeChart",
        "producing",
        "month",
        "since)`:",
        "params",
        "etc.).",
        "params,",
        "Use",
        "list",
        "**Use",
        "`DatasetProducer`",
        "Case",
        "datasets.",
        "analysis.",
        "Adverse",
        "generate",
        "codeName",
        "charts",
        "`produceDataset`",
        "`generateToolTip(CategoryDataset",
        "chart.",
        "Mar,",
        "summary",
        "method",
        "`setAdverseEventsList(List<AdverseEventBean>",
        "string",
        "link",
        "Events.",
        "serialVersionUID",
        "Date",
        "`adverseEvents`:",
        "class",
        "Produce",
        "AdverseEventBean",
        "(after",
        "events",
        "5",
        "series",
        "to:",
        "tooltips",
        "links",
        "tasks.",
        "adverseEvents",
        "`generateLink`",
        "count",
        "charting",
        "code:",
        "series,",
        "String",
        "Returns",
        "values",
        "interface,",
        "**Class",
        "arg0,",
        "**Purpose:**",
        "CeWolf/JFreeChart.",
        "handle",
        "`months`:",
        "integers",
        "`values`:",
        "objects.",
        "**Mapping",
        "used",
        "`generateToolTip`",
        "`getProducerId()`:",
        "Generates",
        "seconds).",
        "category)`:",
        "arg2",
        "sets",
        "related",
        "Initializes",
        "methods"
    ],
    "DAOFactory": [
        "file",
        "responsible",
        "connection.",
        "are.",
        "DAO",
        "Objects.",
        "DAOs",
        "central",
        "Access",
        "`IConnectionDriver`",
        "getAllergyDAO",
        "DAOs,",
        "retrieving",
        "@author",
        "system",
        "testing)",
        "getLabProcedureDAO",
        "stuff",
        "JSPs",
        "JDBC",
        "`driver`",
        "productionInstance",
        "{@link",
        "getHospitalsDAO",
        "get",
        "`protected",
        "creation",
        "**Methods:**",
        "`AllergyDAO`,",
        "getICDCodesDAO",
        "acts",
        "getPersonnelDAO",
        "getVisitRemindersDAO",
        "`getProductionInstance()`:",
        "getRiskDAO",
        "operations.",
        "`DAOFactory`:",
        "classes",
        "corresponding",
        "getAuthDAO",
        "`DAOFactory`",
        "`productionInstance`:",
        "parses",
        "instances",
        "*",
        "patient",
        "(so",
        "initializes",
        "Java",
        "Simplify",
        "`getDAO()`",
        "Provide",
        "creating",
        "getLOINCDAO",
        "getReferralDAO",
        "managing",
        "EvilDAOFactory}",
        "different",
        "class,",
        "etc.)",
        "Allow",
        "centralized",
        "mechanism",
        "application.",
        "various",
        "getSurveyDAO",
        "provided",
        "getRemoteMonitoringDAO",
        "specific",
        "getReportRequestDAO",
        "usage",
        "providing",
        "`AccessDAO`,",
        "performing",
        "production",
        "(DAOs)",
        "entity",
        "getCPTCodesDAO",
        "code\").",
        "getFamilyDAO",
        "methods:",
        "returns",
        "Overall,",
        "getProductionInstance",
        "**Attributes:**",
        "driver",
        "(e.g.,",
        "easier",
        "test",
        "**Relationships:**",
        "access",
        "getApptTypeDAO",
        "getMessageDAO",
        "**Use",
        "static",
        "Tomcat",
        "Also,",
        "getTransactionDAO",
        "uses",
        "getAdverseEventDAO",
        "pool",
        "instance",
        "@see",
        "`driver`:",
        "Case:**",
        "point",
        "connections",
        "information,",
        "method",
        "added",
        "Andy",
        "accessing",
        "operations",
        "getAccessDAO",
        "class",
        "constructor",
        "medical",
        "getApptDAO",
        "connections.",
        "`getConnection()`:",
        "DAOFactory()`:",
        "getSurveyResultDAO",
        "to:",
        "management",
        "getFakeEmailDAO",
        "TestDAOFactory}.",
        "\"real",
        "getOfficeVisitDAO",
        "**Purpose:**",
        "using",
        "way",
        "getConnection",
        "application",
        "getHealthRecordsDAO",
        "records,",
        "use",
        "attribute",
        "connection",
        "used",
        "database",
        "getPatientDAO",
        "switching",
        "Objects",
        "context.xml",
        "`productionInstance`",
        "Database",
        "mediator",
        "getNDCodesDAO",
        "summarization",
        "encapsulates",
        "getDrugInteractionDAO",
        "application's",
        "factory",
        "methods"
    ],
    "IConnectionDriver": [
        "Used",
        "DAOFactory",
        "JDBC",
        "different",
        "abstract",
        "connection",
        "Andy",
        "away",
        "getting",
        "ways",
        "getConnection",
        "@author"
    ],
    "ProductionConnectionDriver": [
        "responsible",
        "connection.",
        "Java",
        "pool.",
        "class",
        "Attributes:",
        "throw",
        "running",
        "context.xml).",
        "given",
        "`getConnection()`:",
        "class:",
        "Requirement",
        "problem",
        "@author",
        "tests",
        "Returns",
        "JDBC",
        "exception",
        "they're",
        "producing",
        "(defined",
        "Exception",
        "Tomcat's",
        "ProductionConnectionDriver",
        "Methods:",
        "Use",
        "available.",
        "Case",
        "required.",
        "getConnection",
        "thrown",
        "-",
        "connection",
        "Throws:",
        "run",
        "used",
        "tests,",
        "`SQLException`",
        "pool",
        "Produces",
        "scenario",
        "due",
        "unit",
        "Tomcat.",
        "database",
        "obtaining",
        "summary",
        "Purpose:",
        "method",
        "None",
        "Context/Lookup",
        "Andy",
        "Mapping:",
        "Class:"
    ],
    "AccessDAO": [
        "assume",
        "`AccessDAO`",
        "retrieve",
        "DAO",
        "Sets",
        "DAOs",
        "Access",
        "`getSessionTimeoutMins()`",
        "@author",
        "Object",
        "JDBC",
        "(DAO)",
        "`getSessionTimeoutMins()`:",
        "{@link",
        "get",
        "provides",
        "minutes.",
        "handles",
        "**Methods:**",
        "timeouts",
        "-",
        "intended",
        "object",
        "Object.",
        "reflections",
        "correct.",
        "number",
        "obtaining",
        "DAOs.",
        "manage",
        "queries",
        "(most",
        "`DAOFactory`",
        "stands",
        "obtain",
        "requirement:",
        "*",
        "case",
        "mapping",
        "complex",
        "and/or",
        "code",
        "mins)`",
        "database,",
        "value",
        "inserts",
        "minutes",
        "every",
        "application.",
        "data",
        "one",
        "setters",
        "per",
        "mins",
        "insertDefaultTimeout",
        "set",
        "added.",
        "**Attributes:**",
        "value.",
        "is,",
        "class:",
        "SQL",
        "session",
        "`setSessionTimeoutMins(int",
        "DAOFactory})",
        "table",
        "access",
        "Use",
        "DAOFactory",
        "timeout",
        "extra",
        "new",
        "authorization.",
        "connections",
        "`factory`:",
        "summary",
        "accessing",
        "Andy",
        "factory.",
        "good",
        "setSessionTimeoutMins",
        "class",
        "constructor",
        "mins)`:",
        "accessed",
        "(@see",
        "Call",
        "current",
        "Returns",
        "validated",
        "never",
        "**Purpose:**",
        "time).",
        "AccessDAO",
        "use",
        "default",
        "timeout.",
        "20",
        "used",
        "takes",
        "parameter",
        "database",
        "provide",
        "queries,",
        "conn",
        "Database",
        "manages",
        "found",
        "sets",
        "getSessionTimeoutMins",
        "related",
        "factory",
        "methods"
    ],
    "AdverseEventDAO": [
        "assume",
        "responsible",
        "Add",
        "getPerscriptions",
        "MID)",
        "DAO",
        "DAOs",
        "`DAOFactory`,",
        "`getNameForCode(String",
        "Access",
        "removed.",
        "code)`:",
        "@author",
        "ResultSet.",
        "JDBC",
        "{@link",
        "(Healthcare",
        "AdverseEvents.",
        "load",
        "name",
        "ID.",
        "provides",
        "Retrieve",
        "**Methods:**",
        "objects",
        "-",
        "AdverseEvents",
        "`AdverseEventBeanLoader`,",
        "intended",
        "`removeReport(int",
        "Object.",
        "reflections",
        "correct.",
        "aeLoader",
        "Requirements:**",
        "obtaining",
        "range",
        "reports",
        "id",
        "range.",
        "DAOs.",
        "logging",
        "start",
        "`aeLoader`:",
        "(most",
        "stands",
        "code.",
        "obtain",
        "`getReportsFor(long",
        "*",
        "case",
        "start,",
        "complex",
        "getReportsFor",
        "managing",
        "and/or",
        "hcpmid",
        "code",
        "database,",
        "database.",
        "Marks",
        "every",
        "data",
        "one",
        "getNameForCode",
        "setters",
        "per",
        "`getUnremovedAdverseEventsByCode(String",
        "`getHCPMID(int",
        "getReport",
        "Mark",
        "report",
        "`getReport(int",
        "hcpmid)`:",
        "added.",
        "prescription",
        "**Attributes:**",
        "is,",
        "given",
        "end",
        "class:",
        "DAOFactory})",
        "table",
        "addReport",
        "getUnremovedAdverseEventsByCode",
        "**Use",
        "Case",
        "DAOFactory",
        "date",
        "aeBean",
        "extra",
        "Object)",
        "instance",
        "new",
        "long",
        "Used",
        "creating,",
        "following",
        "implement",
        "getHCPMID",
        "id)`:",
        "connections",
        "getImmunizations",
        "`factory`:",
        "summary",
        "HCPMID",
        "AdverseEvent",
        "accessing",
        "Andy",
        "factory.",
        "unremoved",
        "mid)`:",
        "Provider",
        "class",
        "`getImmunizations(String",
        "constructor",
        "AdverseEventBean",
        "requirements:",
        "removeReport",
        "accessed",
        "user",
        "(@see",
        "AdverseEventDAO",
        "end)`:",
        "`getPerscriptions(String",
        "String",
        "mechanism.",
        "validated",
        "deleting",
        "never",
        "**Purpose:**",
        "time).",
        "updating,",
        "MID.",
        "(perscriptions).",
        "`addReport(AdverseEventBean",
        "mid",
        "(Database",
        "(immunizations).",
        "use",
        "Adds",
        "used",
        "aeBean,",
        "parameter",
        "retrieving,",
        "database",
        "Retrieves",
        "queries,",
        "Database",
        "sets",
        "factory",
        "methods"
    ],
    "AllergyDAO": [
        "assume",
        "adding",
        "accessing",
        "patient",
        "DAO",
        "class",
        "is,",
        "getAllergies",
        "constructor",
        "complex",
        "DAOs",
        "Access",
        "class:",
        "accessed",
        "(@see",
        "and/or",
        "retrieving",
        "DAOFactory})",
        "@author",
        "table",
        "database,",
        "Object",
        "validated",
        "allergyBeanLoader",
        "JDBC",
        "interacts",
        "(DAO)",
        "database.",
        "never",
        "{@link",
        "**Purpose:**",
        "every",
        "time).",
        "`AllergyDAO`",
        "`Allergies`",
        "provides",
        "allergies.",
        "data",
        "one",
        "DAOFactory",
        "-",
        "intended",
        "pid",
        "extra",
        "Andy",
        "setters",
        "per",
        "parameter",
        "Object.",
        "database",
        "reflections",
        "correct.",
        "obtaining",
        "description",
        "queries,",
        "addAllergy",
        "DAOs.",
        "connections",
        "summary",
        "Database",
        "sets",
        "(most",
        "stands",
        "factory",
        "methods",
        "factory.",
        "added."
    ],
    "ApptDAO": [
        "connection.",
        "scheduleAppt",
        "Read,",
        "Update,",
        "`ApptBeanLoader`",
        "get",
        "load",
        "otherwise,",
        "ID.",
        "provides",
        "query",
        "Retrieve",
        "**Methods:**",
        "handles",
        "objects",
        "object",
        "Requirements:**",
        "3.",
        "it's",
        "1.",
        "ID;",
        "`DAOFactory`",
        "*",
        "doctor",
        "patient",
        "execution",
        "records",
        "(Create,",
        "ID",
        "1,000,000,000,",
        "database.",
        "greater",
        "appt)`:",
        "data",
        "provided",
        "object.",
        "Creates",
        "Schedule",
        "appt",
        "executed",
        "equal",
        "convenient",
        "**Attributes:**",
        "value.",
        "`getApptsFor(long",
        "beans",
        "given",
        "SQL",
        "MySQL",
        "based",
        "access",
        "abloader",
        "Java:",
        "developer.",
        "appointment",
        "list",
        "**Use",
        "Case",
        "`scheduleAppt(ApptBean",
        "instance",
        "new",
        "set.",
        "interface",
        "doctor.",
        "`factory`:",
        "summary",
        "CRUD",
        "2.",
        "appointment.",
        "operations",
        "mid)`:",
        "appointments",
        "class",
        "Delete)",
        "to:",
        "management",
        "Returns",
        "`getAllAppts()`:",
        "**Purpose:**",
        "`ablloader`:",
        "mid",
        "getApptsFor",
        "`ApptBean`",
        "table,",
        "connection",
        "used",
        "result",
        "`ApptDAO`",
        "database",
        "getAllAppts",
        "record",
        "factory",
        "interacting"
    ],
    "ApptTypeDAO": [
        "case",
        "responsible",
        "retrieve",
        "**Attributes:**",
        "class",
        "adds",
        "creating",
        "adding,",
        "given",
        "class:",
        "user",
        ":",
        "managing",
        "ApptTypeDAO",
        "ApptTypeBeanLoader",
        "type",
        "database.",
        "apptType",
        "(DAO)",
        "access",
        "retrieves",
        "`atLoader`:",
        "**Purpose:**",
        "updating",
        "`editApptType(ApptTypeBean)`",
        "appointment",
        "load",
        "list",
        "map",
        "update",
        "provides",
        "doctors",
        "requirement,",
        "data",
        "**Methods:**",
        "backend",
        "updates",
        "DAOFactory",
        "editApptType",
        "use",
        "objects",
        "service",
        "connection",
        "`getApptTypes()`:",
        "used",
        "object",
        "instance",
        "getApptTypes",
        "new",
        "interface",
        "types.",
        "retrieving,",
        "types",
        "ApptTypeBean",
        "database",
        "`factory`:",
        "summary",
        "`addApptType(ApptTypeBean)`",
        "existing",
        "manage",
        "manipulate",
        "atLoader",
        "related",
        "addApptType",
        "factory",
        "obtain",
        "methods",
        "*"
    ],
    "AuthDAO": [
        "role",
        "recordLoginFailure",
        "assume",
        "13.",
        "DAO",
        "MID",
        "adds",
        "recordResetPasswordFailure",
        "DAOs",
        "login",
        "time",
        "Access",
        "tracking",
        "system,",
        "`addUser(Long",
        "accounts,",
        "question",
        "AuthDAO",
        "@author",
        "Object",
        "JDBC",
        "(DAO)",
        "{@link",
        "role,",
        "**Notes**:",
        "getResetPasswordFailures",
        "name",
        "checks",
        "provides",
        "getSecurityAnswer",
        "-",
        "generated",
        "intended",
        "`getLoginFailures(String",
        "Object.",
        "correct.",
        "reflections",
        "ipAddr)`:",
        "number",
        "obtaining",
        "`setSecurityQuestionAnswer(String",
        "`getSecurityAnswer(long",
        "address",
        "ipAddr",
        "10.",
        "DAOs.",
        "3.",
        "1.",
        "4.",
        "getSecurityQuestion",
        "(most",
        "`DAOFactory`",
        "6.",
        "stands",
        "obtain",
        "*",
        "user's",
        "setSecurityQuestionAnswer",
        "records",
        "reset",
        "users,",
        "complex",
        "user.",
        "insertResetPasswordRow",
        "managing",
        "and/or",
        "question,",
        "constant",
        "database,",
        "`getUserRole(long",
        "`recordResetPasswordFailure(String",
        "every",
        "address.",
        "`recordLoginFailure(String",
        "getUserName",
        "zero.",
        "representing",
        "5.",
        "data",
        "one",
        "updateResetFailuresToZero",
        "considered",
        "setters",
        "per",
        "cleared.",
        "`checkUserExists(long",
        "`getSecurityQuestion(long",
        "failure",
        "resets",
        "assumes",
        "resetPassword",
        "stale",
        "returns",
        "added.",
        "milliseconds)",
        "**Purpose**:",
        "is,",
        "updateFailuresToZero",
        "`resetLoginFailuresToZero(String",
        "given",
        "class:",
        "newly",
        "(in",
        "authenticating",
        "DAOFactory})",
        "table",
        "8.",
        "answer,",
        "checkUserExists",
        "**Attributes**:",
        "access",
        "`JDBC`",
        "11.",
        "random",
        "security",
        "password.",
        "`getResetPasswordFailures(String",
        "LOGIN_TIMEOUT",
        "failures",
        "authentication.",
        "DAOFactory",
        "`AuthDAO`",
        "resetLoginFailuresToZero",
        "extra",
        "failureCount",
        "instance",
        "new",
        "long",
        "`LOGIN_TIMEOUT`:",
        "getUserRole",
        "table.",
        "insertLoginFailureRow",
        "exists.",
        "connections",
        "`factory`:",
        "summary",
        "mid,",
        "2.",
        "getLoginFailures",
        "accessing",
        "Andy",
        "factory.",
        "mid)`:",
        "anything",
        "**Methods**:",
        "whether",
        "addUser",
        "class",
        "7.",
        "constructor",
        "users",
        "12.",
        "accessed",
        "user",
        "(@see",
        "String",
        "password",
        "validated",
        "9.",
        "never",
        "time).",
        "MID.",
        "answer",
        "mid",
        "`DAOFactory`.",
        "updates",
        "attempts.",
        "used",
        "Role",
        "password)`:",
        "parameter",
        "database",
        "IP",
        "queries,",
        "conn",
        "Database",
        "sets",
        "`getUserName(long",
        "`resetPassword(long",
        "factory",
        "methods"
    ],
    "CPTCodesDAO": [
        "`addCPTCode(ProcedureBean",
        "assume",
        "medical,",
        "code's",
        "DAO",
        "adds",
        "services",
        "DAOs",
        "`DAOFactory`,",
        "describes",
        "Access",
        "code)`:",
        "@author",
        "http://www.ama-assn.org/ama/pub/physician-resources/solutions-managing-your-practice/coding-billing-insurance/cpt/about-cpt.shtml",
        "JDBC",
        "(DAO)",
        "understanding",
        "{@link",
        "administrative,",
        "financial,",
        "surgical,",
        "provides",
        "communicate",
        "**Methods:**",
        "objects",
        "-",
        "intended",
        "codes.",
        "object",
        "allowing",
        "Object.",
        "reflections",
        "correct.",
        "number",
        "obtaining",
        "DAOs.",
        "`CPTCodesDAO`",
        "successful.",
        "CPT",
        "(most",
        "stands",
        "representation.",
        "code.",
        "*",
        "updateCode",
        "case",
        "organizations,",
        "layer",
        "`ProcedureBeanLoader`,",
        "mapping",
        "affected.",
        "complex",
        "managing",
        "and/or",
        "physicians,",
        "purposes.",
        "codes,",
        "code",
        "database,",
        "Terminology)",
        "every",
        "representing",
        "accurately",
        "data",
        "one",
        "getCPTCode",
        "purpose,",
        "`ResultSet`.",
        "specific",
        "setters",
        "per",
        "`ProcedureBean`",
        "description",
        "`getCPTCode(String",
        "existing",
        "`getImmunizationCPTCodes()`:",
        "operation",
        "returns",
        "set",
        "added.",
        "designed",
        "getAllCPTCodes",
        "addCPTCode",
        "**Attributes:**",
        "`getAllCPTCodes()`:",
        "is,",
        "analytical",
        "attributes,",
        "information",
        "given",
        "class:",
        "useful",
        "DAOFactory})",
        "coders,",
        "table",
        "codes",
        "Procedural",
        "access",
        "list",
        "code,",
        "payers",
        "DAOFactory",
        "getImmunizationCPTCodes",
        "extra",
        "instance",
        "new",
        "rows",
        "Used",
        "@see",
        "connections",
        "`factory`:",
        "summary",
        "diagnostic",
        "string",
        "accessing",
        "Andy",
        "factory.",
        "proc)`:",
        "class's",
        "procedures",
        "whether",
        "loading",
        "class",
        "constructor",
        "medical",
        "accessed",
        "accreditation",
        "proc",
        "(@see",
        "management",
        "uniform",
        "validated",
        "methods,",
        "never",
        "`updateCode(ProcedureBean",
        "**Purpose:**",
        "ordered",
        "time).",
        "patients,",
        "requirement.",
        "abstraction",
        "`procedureBeanLoader`:",
        "application",
        "immunizations,",
        "updates",
        "among",
        "use",
        "attribute",
        "(Current",
        "used",
        "clear",
        "procedureBeanLoader",
        "parameter",
        "database",
        "provide",
        "queries,",
        "Database",
        "sets",
        "specifically",
        "related",
        "factory"
    ],
    "DrugInteractionDAO": [
        "assume",
        "DAO",
        "`iTrustException`",
        "DAOs",
        "adding,",
        "Access",
        "@author",
        "deleteInteraction",
        "JDBC",
        "drugs",
        "{@link",
        "methods",
        "load",
        "found.",
        "provides",
        "**Methods:**",
        "objects",
        "-",
        "`true`",
        "intended",
        "`deleteInteraction(String",
        "firstDrug,",
        "Object.",
        "reflections",
        "correct.",
        "`DrugInteractionBean`",
        "obtaining",
        "`getInteractions(String",
        "DAOs.",
        "manage",
        "(most",
        "`DAOFactory`",
        "stands",
        "obtain",
        "*",
        "case",
        "complex",
        "managing",
        "and/or",
        "database,",
        "`DrugInteractionBeanLoader`",
        "database.",
        "every",
        "help",
        "`false`",
        "interactionLoader",
        "input",
        "data",
        "one",
        "already",
        "setters",
        "per",
        "secondDrug,",
        "description",
        "Removes",
        "added.",
        "designed",
        "**Attributes:**",
        "is,",
        "given",
        "class:",
        "SQL",
        "DAOFactory})",
        "interactions",
        "table",
        "access",
        "list",
        "map",
        "DAOFactory",
        "reportInteraction",
        "occurs.",
        "extra",
        "instance",
        "new",
        "set.",
        "Used",
        "@see",
        "connections",
        "`factory`:",
        "summary",
        "accessing",
        "Andy",
        "factory.",
        "description)`:",
        "successfully",
        "class",
        "constructor",
        "themselves.",
        "Throws",
        "http://www.fda.gov/Drugs/InformationOnDrugs/ucm142438.htm",
        "interaction",
        "accessed",
        "(@see",
        "name.",
        "exists",
        "`interactionLoader`:",
        "String",
        "Returns",
        "interactions.",
        "validated",
        "drug",
        "never",
        "**Purpose:**",
        "time).",
        "requirement.",
        "drugCode)`:",
        "use",
        "drugCode",
        "Adds",
        "used",
        "error",
        "removed,",
        "`reportInteraction(String",
        "`DrugInteractionDAO`",
        "result",
        "parameter",
        "retrieving,",
        "interact",
        "database",
        "Retrieves",
        "secondDrug)`:",
        "removing",
        "queries,",
        "`DBException`",
        "Database",
        "sets",
        "firstDrug",
        "secondDrug",
        "factory",
        "getInteractions"
    ],
    "FakeEmailDAO": [
        "assume",
        "responsible",
        "retrieve",
        "DAO",
        "`getAllEmails()`:",
        "functionality",
        "DAOs",
        "`emailBeanLoader`:",
        "Access",
        "Summary:**",
        "@author",
        "JDBC",
        "(DAO)",
        "data.",
        "retrieves",
        "{@link",
        "bodySubstring",
        "order",
        "load",
        "email",
        "provides",
        "body",
        "query",
        "match",
        "**Methods:**",
        "sent",
        "-",
        "intended",
        "object",
        "Object.",
        "reflections",
        "correct.",
        "obtaining",
        "address",
        "DAOs.",
        "(most",
        "`DAOFactory`",
        "substring",
        "stands",
        "obtain",
        "*",
        "records",
        "complex",
        "bodySubstring)`:",
        "managing",
        "and/or",
        "emails",
        "purpose",
        "database,",
        "getAllEmails",
        "database.",
        "structure",
        "inserts",
        "email)`:",
        "every",
        "class,",
        "descending",
        "data",
        "one",
        "getEmailWithBody",
        "inserting,",
        "captures",
        "specific",
        "setters",
        "per",
        "assumes",
        "methods:",
        "set",
        "added.",
        "searching",
        "designed",
        "`getEmailsByPerson(String",
        "**Attributes:**",
        "is,",
        "attributes,",
        "SQL",
        "`FakeEmailDAO`",
        "DAOFactory})",
        "emailBeanLoader",
        "table",
        "sorted",
        "access",
        "specified",
        "`sendEmailRecord(Email",
        "DAOFactory",
        "date",
        "`getEmailWithBody(String",
        "extra",
        "contain",
        "new",
        "`EmailBeanLoader`",
        "connections",
        "`factory`:",
        "summary",
        "send",
        "emails,",
        "string",
        "accessing",
        "Andy",
        "factory.",
        "person",
        "class",
        "constructor",
        "accessed",
        "criteria.",
        "(@see",
        "getEmailsByPerson",
        "validated",
        "never",
        "**Class",
        "**Purpose:**",
        "time).",
        "way",
        "search",
        "sendEmailRecord",
        "records,",
        "used",
        "result",
        "parameter",
        "interact",
        "retrieving,",
        "reflection",
        "database",
        "queries,",
        "stored",
        "Database",
        "sets",
        "record",
        "factory"
    ],
    "FamilyDAO": [
        "**Requirements",
        "assume",
        "FamilyDAO(DAOFactory",
        "DAO",
        "retrieve",
        "connections,",
        "DAOs",
        "factory`:",
        "least",
        "Access",
        "retrieving",
        "boolean",
        "FamilyMemberBean",
        "@author",
        "fulfill",
        "parent",
        "JDBC",
        "List<FamilyMemberBean>",
        "DBException`:",
        "{@link",
        "secondParam)",
        "etc.",
        "ITrust",
        "Cases:**",
        "ID.",
        "provides",
        "query",
        "**Methods:**",
        "loader",
        "-",
        "intended",
        "pid",
        "familyBeanLoader`:",
        "siblings,",
        "object",
        "whose",
        "Object.",
        "reflections",
        "correct.",
        "pid,",
        "members.",
        "obtaining",
        "DAOs.",
        "throws",
        "`getChildren`",
        "Mapping:**",
        "queries",
        "(most",
        "getFamilyMembers",
        "stands",
        "*",
        "patient",
        "children",
        "getParents(long",
        "complex",
        "and/or",
        "share",
        "families.",
        "database,",
        "database.",
        "pid)",
        "every",
        "class,",
        "data",
        "one",
        "families",
        "relation,",
        "getChildren(long",
        "three",
        "setters",
        "per",
        "`private",
        "getFamilyMembers(long",
        "children)",
        "query,",
        "patient.",
        "DAO,",
        "(mother",
        "familyBeanLoader",
        "mother",
        "(parents,",
        "added.",
        "family",
        "requirement",
        "`getParents`",
        "**Attributes:**",
        "is,",
        "father",
        "given",
        "getParents",
        "class:",
        "SQL",
        "FamilyBeanLoader",
        "convert",
        "DAOFactory})",
        "type",
        "table",
        "based",
        "getChildren",
        "associated",
        "list",
        "**Use",
        "factory)`:",
        "getSiblings",
        "secondParam",
        "DAOFactory",
        "extra",
        "Object)",
        "members",
        "Used",
        "`getSiblings`",
        "connections",
        "summary",
        "method",
        "siblings",
        "accessing",
        "Andy",
        "`public",
        "factory.",
        "getSiblings(long",
        "father)",
        "class",
        "FamilyDAO",
        "constructor",
        "parameter.",
        "accessed",
        "user",
        "(@see",
        "patients",
        "Returns",
        "String",
        "validated",
        "never",
        "**Purpose:**",
        "time).",
        "(Database",
        "handle",
        "private",
        "objects.",
        "used",
        "takes",
        "parameter",
        "relation",
        "database",
        "wants",
        "results",
        "queries,",
        "Database",
        "sets",
        "related",
        "factory",
        "helper",
        "methods"
    ],
    "HealthRecordsDAO": [
        "assume",
        "responsible",
        "retrieve",
        "DAO",
        "scenarios",
        "`loader`:",
        "DAOs",
        "Access",
        "retrieving",
        "boolean",
        "@author",
        "system",
        "Object",
        "JDBC",
        "(DAO)",
        "{@link",
        "load",
        "getAllHealthRecords",
        "provides",
        "**Methods:**",
        "loader",
        "`List`",
        "-",
        "`HealthRecord`",
        "intended",
        "Object.",
        "reflections",
        "correct.",
        "obtaining",
        "DAOs.",
        "throws",
        "manage",
        "successful.",
        "(most",
        "`DAOFactory`",
        "stands",
        "obtain",
        "*",
        "adding",
        "patient",
        "records",
        "`add(HealthRecord",
        "complex",
        "managing",
        "and/or",
        "database,",
        "database.",
        "health",
        "every",
        "application.",
        "data",
        "one",
        "HealthRecordsDAO",
        "insertion",
        "setters",
        "per",
        "patient.",
        "`getAllHealthRecords(long",
        "occurs,",
        "returns",
        "`HealthRecordsBeanLoader`",
        "added.",
        "add",
        "**Attributes:**",
        "is,",
        "information",
        "class:",
        "DAOFactory})",
        "table",
        "access",
        "list",
        "specified",
        "`DBException`.",
        "whole",
        "DAOFactory",
        "extra",
        "instance",
        "new",
        "set.",
        "Used",
        "connections",
        "`factory`:",
        "summary",
        "accessing",
        "Andy",
        "factory.",
        "mid)`:",
        "whether",
        "class",
        "constructor",
        "medical",
        "accessed",
        "management",
        "need",
        "(@see",
        "indicating",
        "validated",
        "exception",
        "record)`:",
        "never",
        "`mid`.",
        "**Purpose:**",
        "time).",
        "patients,",
        "mid",
        "Adds",
        "objects.",
        "used",
        "result",
        "history",
        "kept.",
        "parameter",
        "database",
        "Retrieves",
        "particular",
        "queries,",
        "Database",
        "sets",
        "record",
        "factory",
        "methods"
    ],
    "HospitalsDAO": [
        "assume",
        "responsible",
        "Add",
        "DAO",
        "`iTrustException`",
        "hosp)`",
        "DAOs",
        "hospitalID",
        "`DAOFactory`,",
        "adding,",
        "Access",
        "@author",
        "hospital's",
        "JDBC",
        "(DAO)",
        "{@link",
        "`getAllHospitals()`",
        "ITrust",
        "load",
        "ID.",
        "provides",
        "Retrieve",
        "**Methods:**",
        "assignments.",
        "objects",
        "-",
        "intended",
        "hcpID",
        "object",
        "hcpID)`",
        "Object.",
        "reflections",
        "correct.",
        "number",
        "obtaining",
        "description.",
        "id",
        "addHospital",
        "DAOs.",
        "hospitalID)`",
        "Mapping:**",
        "Update",
        "(most",
        "stands",
        "obtain",
        "*",
        "id)`",
        "case",
        "affected.",
        "complex",
        "`HospitalBean`",
        "`addHospital(HospitalBean",
        "managing",
        "and/or",
        "database,",
        "database.",
        "hospitals",
        "every",
        "HCP",
        "data",
        "one",
        "assigned",
        "specific",
        "already",
        "setters",
        "per",
        "getAllHospitals",
        "`getAllHospitals()`:",
        "assumes",
        "updateHospital",
        "occurs,",
        "hospital",
        "Removes",
        "added.",
        "Remove",
        "**Attributes:**",
        "is,",
        "Unassigns",
        "Assigns",
        "`HospitalBeanLoader`,",
        "given",
        "class:",
        "DAOFactory})",
        "correct,",
        "table",
        "sorted",
        "Requirements",
        "`getHospital(String",
        "access",
        "Assign",
        "hospitalLoader",
        "`removeAllHospitalAssignmentsFrom(long",
        "list",
        "**Use",
        "Case",
        "DAOFactory",
        "`removeHospitalAssignment(long",
        "description:",
        "occurs.",
        "HCP:",
        "extra",
        "hosp)`:",
        "instance",
        "new",
        "set.",
        "rows",
        "Used",
        "following",
        "`HospitalsDAO`",
        "implement",
        "exists.",
        "id)`:",
        "HCP.",
        "connections",
        "`factory`:",
        "summary",
        "`hospitalLoader`:",
        "Unassign",
        "accessing",
        "Andy",
        "hospital.",
        "factory.",
        "alphabetically.",
        "assignments",
        "whether",
        "Note",
        "class",
        "constructor",
        "`updateHospital(HospitalBean",
        "requirements:",
        "Throws",
        "accessed",
        "made.",
        "(@see",
        "`assignHospital(long",
        "Returns",
        "String",
        "validated",
        "assignHospital",
        "never",
        "**Purpose:**",
        "removeHospitalAssignment",
        "time).",
        "updating,",
        "hospital:",
        "hospitals:",
        "changes",
        "`DAOFactory`.",
        "ID:",
        "hcpID,",
        "use",
        "Adds",
        "used",
        "error",
        "result",
        "hcpID)`:",
        "parameter",
        "retrieving,",
        "database",
        "Updates",
        "particular",
        "`DBException`",
        "queries,",
        "Database",
        "hospitalID)`:",
        "sets",
        "getHospital",
        "factory",
        "methods",
        "hosp",
        "removeAllHospitalAssignmentsFrom"
    ],
    "ICDCodesDAO": [
        "ICD)",
        "assume",
        "getICDCode",
        "Add",
        "code's",
        "DAO",
        "adds",
        "DAOs",
        "Access",
        "code)`:",
        "boolean",
        "@author",
        "JDBC",
        "wide",
        "`diagnosisLoader`:",
        "`getICDCode(String",
        "{@link",
        "get",
        "load",
        "Cases:**",
        "provides",
        "ICD-9",
        "diag",
        "Retrieve",
        "classify",
        "**Methods:**",
        "objects",
        "-",
        "intended",
        "codes.",
        "object",
        "variety",
        "`updateCode(DiagnosisBean",
        "Health",
        "reflections",
        "correct.",
        "Object.",
        "number",
        "obtaining",
        "causes",
        "description.",
        "DAOs.",
        "manage",
        "Update",
        "(most",
        "stands",
        "obtain",
        "`getAllICDCodes()`:",
        "*",
        "updateCode",
        "case",
        "complex",
        "Statistical",
        "external",
        "managing",
        "and/or",
        "codes,",
        "problems.",
        "code",
        "database,",
        "health",
        "disease.",
        "symptoms,",
        "every",
        "help",
        "ICDCodesDAO",
        "Diseases",
        "data",
        "one",
        "signs,",
        "diagnosisLoader",
        "injury",
        "specific",
        "Related",
        "Classification",
        "chronic",
        "perform",
        "setters",
        "per",
        "ICD",
        "description",
        "International",
        "existing",
        "well",
        "returns",
        "DiagnosisBean",
        "added.",
        "complaints,",
        "details",
        "**Attributes:**",
        "is,",
        "given",
        "SQL",
        "getAllICDCodes",
        "DAOFactory})",
        "table",
        "codes",
        "sorted",
        "diseases",
        "abbreviation",
        "Java:",
        "list",
        "**Use",
        "map",
        "update",
        "DAOFactory",
        "extra",
        "new",
        "rows",
        "Used",
        "@see",
        "circumstances",
        "http://www.cdc.gov/nchs/icd9.htm",
        "ResultSet",
        "updated",
        "connections",
        "`factory`:",
        "summary",
        "method",
        "accessing",
        "Andy",
        "operations",
        "factory.",
        "Problems",
        "add,",
        "class",
        "constructor",
        "accessed",
        "(@see",
        "indicating",
        "social",
        "validated",
        "`addICDCode(DiagnosisBean",
        "never",
        "status",
        "**Purpose:**",
        "time).",
        "requirement.",
        "findings,",
        "abnormal",
        "diag)`:",
        "updates",
        "use",
        "retrieve,",
        "used",
        "addICDCode",
        "parameter",
        "database",
        "queries,",
        "success",
        "Database",
        "commonly",
        "sets",
        "known",
        "factory",
        "methods"
    ],
    "LabProcedureDAO": [
        "addLabProcedure",
        "updateLabProcedure",
        "visit",
        "`getAllLabProceduresLOINC(long",
        "DAO",
        "MID",
        "month.",
        "DAOs",
        "`getAllLabProcedures()`:",
        "Access",
        "labProcedureLoader",
        "retrieving",
        "Object",
        "stuff",
        "here.",
        "(DAO)",
        "data.",
        "Name:**",
        "getAllLabProceduresLOINC",
        "`getLabProceduresForLHCPForNextMonth(long",
        "get",
        "load",
        "Cases:**",
        "ID.",
        "provides",
        "Retrieve",
        "**Methods:**",
        "objects",
        "validated.",
        "codes.",
        "object",
        "procedure.",
        "DB",
        "`labProcedureLoader`:",
        "Object.",
        "ovid",
        "id",
        "Update",
        "corresponding",
        "`DAOFactory`",
        "*",
        "patient",
        "occur",
        "managing",
        "ID",
        "Insert",
        "getLabProceduresForLHCPForNextMonth",
        "interacts",
        "database.",
        "every",
        "within",
        "updateRights",
        "`getLabProcedure(long",
        "inserting,",
        "lab",
        "getAllLabProceduresForDocOV",
        "already",
        "`LabProcedure`",
        "existing",
        "LOINC",
        "**Attributes:**",
        "given",
        "class:",
        "procedures.",
        "table",
        "getLabProcedure",
        "office",
        "LHCP",
        "access",
        "info",
        "associated",
        "coming",
        "list",
        "**Use",
        "must",
        "ovid)`:",
        "Also,",
        "single",
        "DAOFactory",
        "next",
        "getLabProceduresForPatientForNextMonth",
        "`getAllLabProceduresForDocOV(long",
        "new",
        "`updateRights(LabProcedureBean",
        "set.",
        "long",
        "id)`:",
        "`factory`:",
        "summary",
        "mid,",
        "mid)`:",
        "procedures",
        "Note",
        "class",
        "`LabProcedureBeanLoader`",
        "constructor",
        "`getLabProceduresForPatient(long",
        "getAllLabProceduresDate",
        "parameter.",
        "connections.",
        "Inserts",
        "user",
        "worry",
        "need",
        "b",
        "`LabProcedureBean`",
        "getLabProceduresForPatient",
        "`getLabProceduresForPatientForNextMonth(long",
        "**Class",
        "**Purpose:**",
        "updating,",
        "MID.",
        "mid",
        "rights",
        "`updateLabProcedure(LabProcedureBean",
        "`LabProcedureDAO`",
        "used",
        "`addLabProcedure(LabProcedureBean",
        "result",
        "b)`:",
        "database",
        "Retrieves",
        "Updates",
        "getAllLabProcedures",
        "`getAllLabProceduresDate(long",
        "procedure",
        "Database",
        "factory",
        "methods"
    ],
    "LOINCDAO": [
        "assume",
        "scenarios",
        "DAO",
        "visitID",
        "adds",
        "DAOs",
        "`update(LOINCbean",
        "Access",
        "@author",
        "JDBC",
        "visitID)`:",
        "Name:**",
        "retrieves",
        "LaboratoryProcedureCode",
        "{@link",
        "laboratory",
        "load",
        "provides",
        "(LOINC)",
        "**Methods:**",
        "objects",
        "-",
        "intended",
        "Identifiers",
        "object",
        "Names",
        "Smith",
        "Object.",
        "reflections",
        "correct.",
        "Requirements:**",
        "obtaining",
        "needs",
        "DAOs.",
        "(most",
        "stands",
        "obtain",
        "*",
        "Java",
        "records",
        "LOINCDAO",
        "complex",
        "cases",
        "and/or",
        "database,",
        "Codes)",
        "interacts",
        "LOINCLoader",
        "every",
        "Populating",
        "Codes",
        "data",
        "one",
        "specific",
        "getAllLOINC",
        "`LOINCLoader`:",
        "setters",
        "per",
        "ov",
        "`addLOINC(LOINCbean",
        "include:",
        "existing",
        "LOINCbean",
        "LOINC",
        "http://loinc.org/",
        "added.",
        "(Logical",
        "**Attributes:**",
        "is,",
        "getProcedures",
        "information",
        "given",
        "class:",
        "SQL",
        "Updating",
        "DAOFactory})",
        "records.",
        "table",
        "based",
        "access",
        "associated",
        "list",
        "**Use",
        "map",
        "update",
        "Case",
        "complete",
        "standard",
        "DAOFactory",
        "extra",
        "hosp)`:",
        "`getProcedures(String",
        "instance",
        "new",
        "@see",
        "table.",
        "updated",
        "connections",
        "`factory`:",
        "summary",
        "possible",
        "accessing",
        "added,",
        "factory.",
        "observations.",
        "Ben",
        "add,",
        "class",
        "constructor",
        "medical",
        "accessed",
        "(@see",
        "`getAllLOINC()`:",
        "validated",
        "never",
        "**Class",
        "Observation",
        "Retrieving",
        "**Purpose:**",
        "time).",
        "DAOFactory,",
        "retrieved,",
        "updates",
        "LOINCBeanLoader,",
        "use",
        "retrieve,",
        "used",
        "result",
        "parameter",
        "database",
        "queries,",
        "ov)`:",
        "Logical",
        "Database",
        "sets",
        "addLOINC",
        "universal",
        "identifying",
        "record",
        "factory",
        "methods",
        "hosp"
    ],
    "MessageDAO": [
        "assume",
        "responsible",
        "ascending",
        "message",
        "scenarios",
        "DAO",
        "connections,",
        "MID",
        "**getMessagesFromTimeAscending(long",
        "DAOs",
        "getMessagesFrom",
        "**getMessagesTimeAscending(long",
        "part",
        "Access",
        "Summary:**",
        "use,",
        "@author",
        "JDBC",
        "would",
        "{@link",
        "order",
        "etc.",
        "load",
        "name",
        "Adding",
        "framework,",
        "**getMessagesFromNameAscending(long",
        "**Methods:**",
        "sent",
        "objects",
        "-",
        "intended",
        "transform",
        "object",
        "**getMessagesFromNameDescending(long",
        "Object.",
        "reflections",
        "correct.",
        "Requirements:**",
        "obtaining",
        "getMessagesNameDescending",
        "DAOs.",
        "3.",
        "mid)**:",
        "1.",
        "4.",
        "logging",
        "getMessagesFromNameAscending",
        "(most",
        "getMessagesTimeAscending",
        "`DAOFactory`",
        "mBean)**:",
        "stands",
        "*",
        "case",
        "complex",
        "user.",
        "getMessagesFor",
        "managing",
        "and/or",
        "database,",
        "database.",
        "every",
        "accordingly.",
        "descending",
        "**getMessagesNameAscending(long",
        "various",
        "data",
        "one",
        "**getMessagesFor(long",
        "mBean",
        "`MessageDAO`",
        "specific",
        "`MessageBean`",
        "setters",
        "per",
        "messages",
        "DAO,",
        "serves",
        "added.",
        "getMessagesFromTimeAscending",
        "**getMessagesNameDescending(long",
        "addMessage",
        "**Attributes:**",
        "mbLoader",
        "is,",
        "given",
        "SQL",
        "Updating",
        "(e.g.,",
        "DAOFactory})",
        "parameters",
        "table",
        "sorted",
        "pass",
        "`mbLoader`:",
        "messageBean),",
        "associated",
        "list",
        "specified",
        "'been_read'",
        "**Use",
        "map",
        "Case",
        "MID,",
        "`MessageBeanLoader`",
        "DAOFactory",
        "extra",
        "as:",
        "new",
        "Used",
        "specify",
        "required",
        "system.",
        "connections",
        "`factory`:",
        "2.",
        "accessing",
        "Andy",
        "factory.",
        "class",
        "name).",
        "constructor",
        "users",
        "**addMessage(MessageBean",
        "accessed",
        "user",
        "(last",
        "(@see",
        "need",
        "mechanism.",
        "validated",
        "**updateRead(MessageBean",
        "never",
        "**Class",
        "updateRead",
        "status",
        "returned",
        "Retrieving",
        "time).",
        "**getMessagesFrom(long",
        "mid",
        "requirement,",
        "handle",
        "getMessagesFromNameDescending",
        "use",
        "Adds",
        "used",
        "parameter",
        "database",
        "Retrieves",
        "results",
        "Updates",
        "getMessagesNameAscending",
        "queries,",
        "Database",
        "mediator",
        "sets",
        "first",
        "factory",
        "date.",
        "interacting"
    ],
    "NDCodesDAO": [
        "assume",
        "code's",
        "med",
        "DAO",
        "DAOs",
        "adding,",
        "Access",
        "code)`:",
        "Summary:**",
        "@author",
        "methods.",
        "Object",
        "JDBC",
        "(DAO)",
        "States",
        "drugs",
        "{@link",
        "updating",
        "load",
        "provides",
        "**Methods:**",
        "getAllNDCodes",
        "-",
        "intended",
        "codes.",
        "Object.",
        "reflections",
        "correct.",
        "change",
        "obtaining",
        "`medicationLoader`:",
        "DAOs.",
        "National",
        "3.",
        "1.",
        "4.",
        "(most",
        "stands",
        "obtain",
        "*",
        "updateCode",
        "concise",
        "case",
        "med)`:",
        "complex",
        "managing",
        "and/or",
        "code",
        "purpose",
        "database,",
        "use.",
        "every",
        "class,",
        "Codes",
        "data",
        "one",
        "purpose,",
        "(NDC)",
        "product",
        "captures",
        "ND",
        "medications.",
        "setters",
        "per",
        "description",
        "Code",
        "highlighting",
        "methods:",
        "returns",
        "added.",
        "**Attributes:**",
        "is,",
        "MedicationBeanLoader",
        "attributes,",
        "made",
        "beans",
        "given",
        "DAOFactory})",
        "table",
        "codes",
        "`getNDCode(String",
        "iTrustException",
        "medication",
        "list",
        "map",
        "medicationLoader",
        "Codes.",
        "identifier",
        "DAOFactory",
        "overview",
        "Drug",
        "Throws:",
        "extra",
        "instance",
        "new",
        "Used",
        "@see",
        "connections",
        "`factory`:",
        "summary",
        "2.",
        "accessing",
        "Andy",
        "`addNDCode(MedicationBean",
        "factory.",
        "NDC",
        "whether",
        "class",
        "constructor",
        "http://www.fda.gov/Drugs/InformationOnDrugs/ucm142438.htm",
        "United",
        "accessed",
        "(@see",
        "Returns",
        "`updateCode(MedicationBean",
        "validated",
        "never",
        "**Class",
        "**Purpose:**",
        "addNDCode",
        "time).",
        "`getAllNDCodes()`:",
        "requirement.",
        "DBException,",
        "getNDCode",
        "bean",
        "use",
        "DBException",
        "Adds",
        "used",
        "NDCodesDAO",
        "parameter",
        "retrieving,",
        "database",
        "Updates",
        "particular",
        "queries,",
        "Database",
        "human",
        "manages",
        "sets",
        "universal",
        "factory",
        "methods"
    ],
    "OfficeVisitDAO": [
        "assume",
        "responsible",
        "visit",
        "13.",
        "getDiagnoses",
        "DAO",
        "visitID",
        "Read,",
        "adds",
        "pres",
        "Based",
        "`getProcedures(long)`:",
        "DAOs",
        "hospitalID",
        "Update,",
        "Access",
        "17.",
        "`getOfficeVisitsFromHospital(String)`:",
        "19.",
        "Summary:**",
        "icdcode",
        "prescriptionLoader:",
        "@author",
        "21.",
        "methods.",
        "Object",
        "JDBC",
        "prepareOVIDs",
        "(DAO)",
        "retrieves",
        "{@link",
        "`removePrescription(long)`:",
        "laboratory",
        "ITrust",
        "removeDiagnosisFromOfficeVisit",
        "ID.",
        "addDiagnosisToOfficeVisit",
        "checks",
        "provides",
        "`update(OfficeVisitBean)`:",
        "`removeDiagnosisFromOfficeVisit(long)`:",
        "`getAllOfficeVisits(long)`:",
        "**Methods:**",
        "loader",
        "long,",
        "15.",
        "-",
        "linking",
        "intended",
        "pid",
        "visits",
        "object",
        "labProcedureID",
        "diagnoses",
        "Object.",
        "reflections",
        "correct.",
        "reports",
        "obtaining",
        "16.",
        "range.",
        "tasks",
        "DAOs.",
        "10.",
        "3.",
        "1.",
        "checkOfficeVisitExists",
        "4.",
        "`addDiagnosisToOfficeVisit(double,",
        "(most",
        "`DAOFactory`",
        "6.",
        "stands",
        "requirement:",
        "*",
        "case",
        "patient",
        "ovIDs",
        "Java",
        "results.",
        "rs",
        "complex",
        "prescriptionLoader",
        "(Create,",
        "`OfficeVisitLoader`",
        "`addProcedureToOfficeVisit(String,",
        "prescriptions",
        "addLabProcedureToOfficeVisit",
        "`DiagnosisBeanLoader`",
        "removes",
        "managing",
        "and/or",
        "startDate",
        "endDate",
        "code",
        "diagnosis",
        "database,",
        "buildPreps",
        "database.",
        "every",
        "`add(OfficeVisitBean)`:",
        "class,",
        "factory:",
        "visit.",
        "patientID",
        "5.",
        "`editPrescription(PrescriptionBean)`:",
        "getPrescriptionReports",
        "`addLabProcedureToOfficeVisit(String,",
        "data",
        "one",
        "getOfficeVisitsWithNoSurvey",
        "diagnosisLoader",
        "diagnosis.",
        "`getOfficeVisit(long)`:",
        "`getPrescriptions(long)`:",
        "provided",
        "getPrescriptions",
        "removePrescription",
        "setters",
        "per",
        "ov",
        "editPrescription",
        "hcpid",
        "ICD",
        "long)`:",
        "patient.",
        "String,",
        "removeLabProcedureFromOfficeVisit",
        "highlighting",
        "existing",
        "well",
        "procedures,",
        "returns",
        "`getDiagnoses(long)`:",
        "added.",
        "`PrescriptionBeanLoader`",
        "add",
        "responsibilities,",
        "prescription",
        "prescription.",
        "**Attributes:**",
        "visits,",
        "is,",
        "20.",
        "addPrescription",
        "attributes,",
        "getProcedures",
        "given",
        "getOfficeVisitsFromHospital",
        "DAOFactory})",
        "table",
        "8.",
        "`removeProcedureFromOfficeVisit(long)`:",
        "office",
        "ps",
        "getAllOfficeVisitsForDiagnosis",
        "access",
        "officeVisitLoader:",
        "Use",
        "ovProcedureID",
        "associated",
        "list",
        "11.",
        "diagnoses.",
        "map",
        "update",
        "`checkOfficeVisitExists(long,",
        "`getPrescriptionReports(List<Long>,",
        "DAOFactory",
        "date",
        "overview",
        "`getOfficeVisitsWithNoSurvey(long)`:",
        "cptCode",
        "String)`:",
        "22.",
        "extra",
        "Used",
        "main",
        "ovMedicationID",
        "connections",
        "similar",
        "summary",
        "CRUD",
        "2.",
        "officeVisitLoader",
        "Andy",
        "accessing",
        "operations",
        "factory.",
        "hospital.",
        "prescriptionReportBeanLoader",
        "LOINCCode",
        "`removeLabProcedureFromOfficeVisit(long)`:",
        "14.",
        "removeProcedureFromOfficeVisit",
        "procedures",
        "class",
        "diagnoses,",
        "Delete)",
        "constructor",
        "icd",
        "7.",
        "12.",
        "accessed",
        "tasks.",
        "(@see",
        "exists",
        "`getAllOfficeVisitsForDiagnosis(String)`:",
        "validated",
        "9.",
        "never",
        "**Class",
        "`OfficeVisitDAO`",
        "setValues",
        "time).",
        "ovDiagnosisID",
        "size",
        "survey",
        "mid",
        "prescriptions.",
        "getPrescriptionReportsByDate",
        "bean",
        "visits.",
        "updates",
        "addProcedureToOfficeVisit",
        "use",
        "used",
        "`addPrescription(PrescriptionBean)`:",
        "procedureBeanLoader",
        "18.",
        "parameter",
        "getOfficeVisit",
        "database",
        "queries,",
        "loadFullOfficeVist",
        "getAllOfficeVisits",
        "ovID",
        "Database",
        "getAllOfficeVisitsForLHCP",
        "procedure",
        "sets",
        "related",
        "`getPrescriptionReportsByDate(long,",
        "diagnosisLoader:",
        "factory",
        "methods"
    ],
    "PatientDAO": [
        "role",
        "special-diagnosis-history",
        "assume",
        "responsible",
        "patient's",
        "getDiagnoses",
        "DAO",
        "Undeclares",
        "MID",
        "functionality",
        "logged",
        "DAOs",
        "factory`:",
        "seven",
        "Access",
        "@author",
        "`getDiagnoses(long",
        "getRole",
        "understand",
        "JDBC",
        "(DAO)",
        "{@link",
        "load",
        "diagnosisLoader`:",
        "name",
        "first,",
        "expire",
        "prescriptionLoader`:",
        "**Methods:**",
        "loader",
        "expired",
        "procedureLoader`:",
        "-",
        "checkPatientExists",
        "intended",
        "pid",
        "hcpID",
        "getRenewalNeedsPatients",
        "information.",
        "`getName(long",
        "object",
        "hcpMID)`:",
        "checkDeclaredHCP",
        "`getCurrentPrescriptions(long",
        "diagnoses",
        "whose",
        "Object.",
        "reflections",
        "correct.",
        "pid,",
        "medications",
        "obtaining",
        "addEmptyPatient",
        "`PrescriptionBeanLoader",
        "representative",
        "`PersonnelLoader",
        "DAOs.",
        "`DAOFactory",
        "p)`:",
        "(most",
        "getRepresenting",
        "stands",
        "`getRenewalNeedsPatients(long",
        "obtain",
        "aspects",
        "`undeclareHCP(long",
        "`getAllPatients()`:",
        "*",
        "getPatient",
        "patient",
        "removeRepresentative",
        "prescriptionLoader",
        "complex",
        "declared",
        "prescriptions",
        "searchForPatientsWithName",
        "managing",
        "and/or",
        "represents",
        "diagnosis",
        "database,",
        "immunization",
        "`getProcedures(long",
        "`getPrescriptions(long",
        "purpose",
        "database.",
        "representer,",
        "every",
        "going",
        "help",
        "`addRepresentative(long",
        "days.",
        "within",
        "patientID",
        "HCP",
        "`declareHCP(long",
        "Declares",
        "`getRepresented(long",
        "another",
        "data",
        "one",
        "undeclareHCP",
        "diagnosisLoader",
        "getPrescriptions",
        "setters",
        "per",
        "hcpid",
        "`addEmptyPatient()`:",
        "patient.",
        "getCurrentPrescriptions",
        "Removes",
        "returns",
        "representee)`:",
        "pid)`:",
        "`represents(long",
        "added.",
        "prescription",
        "**Attributes:**",
        "is,",
        "information",
        "getProcedures",
        "given",
        "`getImmunizationProcedures(long",
        "class:",
        "hcpMID",
        "PatientBean",
        "DAOFactory})",
        "table",
        "personnelLoader`:",
        "Checks",
        "getExpiredPrescriptions",
        "access",
        "list",
        "personnel",
        "DHCP",
        "declareHCP",
        "static",
        "patientLoader`:",
        "represented",
        "`DiagnosisBeanLoader",
        "DAOFactory",
        "class.",
        "`getRepresenting(long",
        "`checkPatientExists(long",
        "extra",
        "addRepresentative",
        "long",
        "getDeclaredHCPs",
        "Used",
        "empty",
        "`searchForPatientsWithName(String",
        "connections",
        "summary",
        "mid,",
        "editPatient",
        "see",
        "Searches",
        "accessing",
        "Andy",
        "last",
        "factory.",
        "`getRole(long",
        "mid)`:",
        "`PatientLoader",
        "`ProcedureBeanLoader",
        "`getExpiredPrescriptions(long",
        "last)`:",
        "PatientDAO",
        "procedureLoader",
        "getImmunizationProcedures",
        "procedures",
        "class",
        "constructor",
        "role.",
        "p",
        "accessed",
        "`getPatient(long",
        "(@see",
        "name.",
        "exists",
        "`removeRepresentative(long",
        "getName",
        "representer",
        "getAllPatients",
        "current",
        "represents.",
        "patients",
        "validated",
        "Returns",
        "String",
        "never",
        "**Class",
        "role)`:",
        "time).",
        "MID.",
        "mid",
        "patientLoader",
        "HCPs",
        "representee",
        "bean",
        "care,",
        "Adds",
        "used",
        "`getDeclaredHCPs(long",
        "hcpID)`:",
        "parameter",
        "database",
        "getRepresented",
        "personnelLoader",
        "Updates",
        "queries,",
        "Purpose:**",
        "`editPatient(PatientBean",
        "Database",
        "procedure",
        "iTrust",
        "sets",
        "related",
        "patientID)`:",
        "first",
        "factory"
    ],
    "PersonnelDAO": [
        "role",
        "assume",
        "`getAllPersonnel()`:",
        "DAO",
        "Read,",
        "searchForPersonnelWithName",
        "MID",
        "addEmptyPersonnel",
        "DAOs",
        "Update,",
        "Access",
        "getUAPsForHCP",
        "@author",
        "methods.",
        "understand",
        "JDBC",
        "{@link",
        "load",
        "name",
        "first,",
        "provides",
        "**Methods:**",
        "manipulation",
        "-",
        "intended",
        "pid",
        "`PersonnelBean`",
        "`getName(long",
        "checkPersonnelExists",
        "passed",
        "Object.",
        "reflections",
        "correct.",
        "obtaining",
        "authorized",
        "DAOs.",
        "manage",
        "meet",
        "p)`:",
        "Admins",
        "hospitalBeanLoader",
        "(most",
        "`DAOFactory`",
        "stands",
        "getAllPersonnel",
        "obtain",
        "*",
        "doctor",
        "complex",
        "(Create,",
        "`HospitalBean`",
        "getHospitals",
        "managing",
        "and/or",
        "purpose",
        "in.",
        "database,",
        "database.",
        "hospitals",
        "getPrescribingDoctor",
        "every",
        "class,",
        "`editPersonnel(PersonnelBean",
        "help",
        "Matches",
        "data",
        "one",
        "`ResultSet`.",
        "`getHospitals(long",
        "specific",
        "setters",
        "per",
        "hcpid",
        "editPersonnel",
        "`getPersonnel(long",
        "`HospitalBeanLoader`",
        "retrieval",
        "getPersonnel",
        "returns",
        "`getUAPsForHCP(long",
        "`hospitalBeanLoader`:",
        "pid)`:",
        "added.",
        "names",
        "prescription",
        "prescription.",
        "**Attributes:**",
        "is,",
        "attributes,",
        "information",
        "given",
        "UAPs",
        "class:",
        "(HCPs,",
        "DAOFactory})",
        "table",
        "`personnelLoader`:",
        "Checks",
        "LHCP",
        "access",
        "`PersonnelLoader`",
        "list",
        "specified",
        "associated",
        "personnel",
        "personnel.",
        "employee.",
        "describing",
        "`addEmptyPersonnel(Role",
        "DAOFactory",
        "overview",
        "`getPrescribingDoctor(PrescriptionBean",
        "extra",
        "instance",
        "new",
        "Used",
        "empty",
        "prescription)`:",
        "exists.",
        "system.",
        "connections",
        "`factory`:",
        "summary",
        "`searchForPersonnelWithName(String",
        "CRUD",
        "hcpid)`:",
        "accessing",
        "Andy",
        "last",
        "factory.",
        "operations",
        "mid)`:",
        "HCPs,",
        "last)`:",
        "UAPs,",
        "whether",
        "class",
        "Delete)",
        "constructor",
        "p",
        "accessed",
        "(@see",
        "getName",
        "Returns",
        "String",
        "validated",
        "methods,",
        "never",
        "PersonnelBean",
        "role)`:",
        "**Purpose:**",
        "work",
        "time).",
        "MID.",
        "mid",
        "requirements.",
        "Adds",
        "`checkPersonnelExists(long",
        "used",
        "personnel:",
        "parameter",
        "database",
        "personnelLoader",
        "Retrieves",
        "Updates",
        "Admins)",
        "queries,",
        "LIKE",
        "Database",
        "demographics",
        "iTrust",
        "sets",
        "PersonnelDAO",
        "related",
        "first",
        "factory",
        "methods"
    ],
    "ReferralDAO": [
        "assume",
        "responsible",
        "retrieve",
        "DAO",
        "adds",
        "DAOs",
        "Access",
        "system",
        "`getReferralsSentTo(long",
        "JDBC",
        "retrieves",
        "{@link",
        "load",
        "addReferral",
        "provides",
        "**Methods:**",
        "sent",
        "objects",
        "-",
        "intended",
        "instance.",
        "Object.",
        "reflections",
        "correct.",
        "referrals.",
        "obtaining",
        "needs",
        "ReferralBean",
        "DAOs.",
        "received.",
        "(most",
        "`DAOFactory`",
        "stands",
        "obtain",
        "*",
        "provider",
        "`ReferralBeanLoader`",
        "complex",
        "ID",
        "and/or",
        "managing",
        "lists",
        "database,",
        "database.",
        "every",
        "HCP",
        "data",
        "one",
        "specific",
        "referralLoader",
        "setters",
        "per",
        "r)`:",
        "assumes",
        "added.",
        "`getReferralsSentFrom(long",
        "add",
        "**Attributes:**",
        "is,",
        "HCPs.",
        "class:",
        "SQL",
        "(HCP)",
        "healthcare",
        "r",
        "DAOFactory})",
        "parameters",
        "correct,",
        "table",
        "list",
        "update",
        "editReferral",
        "DAOFactory",
        "extra",
        "referral",
        "instance",
        "scenarios:",
        "Used",
        "following",
        "ResultSet",
        "update,",
        "`editReferral(ReferralBean",
        "updated",
        "`mid`",
        "system.",
        "connections",
        "`factory`:",
        "summary",
        "administrator",
        "added",
        "accessing",
        "factory.",
        "`addReferral(ReferralBean",
        "mid)`:",
        "Note",
        "class",
        "constructor",
        "referrals,",
        "accessed",
        "provider.",
        "(@see",
        "view",
        "fetch",
        "validated",
        "getReferralsSentTo",
        "never",
        "received",
        "getReferralsSentFrom",
        "**Purpose:**",
        "time).",
        "mid",
        "constructors",
        "referrals",
        "updates",
        "retrieve,",
        "`referralLoader`:",
        "used",
        "parameter",
        "database",
        "wants",
        "queries,",
        "Database",
        "sets",
        "factory",
        "ReferralDAO",
        "methods"
    ],
    "RemoteMonitoringDAO": [
        "assume",
        "responsible",
        "RemoteMonitoringDataBean",
        "DAO",
        "`loader`:",
        "DAOs",
        "patientMID)`:",
        "Access",
        "retrieving",
        "representativeMID,",
        "JDBC",
        "data.",
        "(DAO)",
        "diastolicBloodPressure",
        "{@link",
        "removePatientFromList",
        "load",
        "data,",
        "provides",
        "`storePatientData(long",
        "patientMID",
        "loader",
        "**Methods:**",
        "objects",
        "-",
        "`getPatientDataByDate(long",
        "intended",
        "RemoteMonitoringDAO",
        "object",
        "getPatientDataByDate",
        "Object.",
        "reflections",
        "correct.",
        "number",
        "obtaining",
        "varying",
        "representative",
        "range.",
        "DAOs.",
        "HCPMID)`:",
        "(most",
        "`getNumberOfDailyEntries(long",
        "stands",
        "`getPatientsData(long",
        "getNumberOfDailyEntries",
        "*",
        "provider",
        "case",
        "patient",
        "providers.",
        "`validatePR(long",
        "representativeMID",
        "complex",
        ":",
        "managing",
        "and/or",
        "versions",
        "lists",
        "database,",
        "`addPatientToList(long",
        "every",
        "help",
        "overloaded",
        "monitoring",
        "remote",
        "data",
        "one",
        "modifying",
        "day.",
        "three",
        "setters",
        "per",
        "RemoteMonitoringDataBeanLoader",
        "addPatientToList",
        "patient.",
        "DAO,",
        "entries",
        "Removes",
        "well",
        "parameters.",
        "added.",
        "keeping",
        "**Attributes:**",
        "RemoteMonitoringData",
        "is,",
        "given",
        "systolicBloodPressure",
        "class:",
        "healthcare",
        "DAOFactory})",
        "table",
        "access",
        "glucoseLevel",
        "...)`",
        "associated",
        "list",
        "specified",
        "map",
        "patientMID,",
        "DAOFactory",
        "date",
        "lower,",
        "extra",
        "reporterMID",
        "track",
        "new",
        "patients.",
        "set.",
        "Used",
        "long",
        "monitored",
        "table.",
        "connections",
        "HCPMID",
        "`factory`:",
        "summary",
        "loggedInMID)`:",
        "relationship",
        "accessing",
        "Date",
        "factory.",
        "loggedInMID",
        "upper)`:",
        "lower",
        "valid",
        "class",
        "upper",
        "constructor",
        "Inserts",
        "accessed",
        "provider.",
        "(@see",
        "validatePR",
        "patients",
        "Returns",
        "validated",
        "never",
        "storing",
        "**Purpose:**",
        "time).",
        "MID.",
        "Validates",
        "requirement,",
        "getPatientsData",
        "use",
        "Adds",
        "storePatientData",
        "used",
        "relationships",
        "result",
        "parameter",
        "database",
        "queries,",
        "reporterRole",
        "`removePatientFromList(long",
        "Database",
        "sets",
        "method,",
        "factory",
        "methods"
    ],
    "ReportRequestDAO": [
        "assume",
        "DAO",
        "MID",
        "`loader`:",
        "DAOs",
        "Access",
        "Object",
        "JDBC",
        "(DAO)",
        "{@link",
        "load",
        "viewed",
        "provides",
        "patientMID",
        "loader",
        "**Methods:**",
        "objects",
        "-",
        "reading,",
        "approving",
        "intended",
        "pid",
        "object",
        "Object.",
        "reflections",
        "correct.",
        "obtaining",
        "id",
        "DAOs.",
        "date)`:",
        "(most",
        "request",
        "stands",
        "obtain",
        "*",
        "getReportRequest",
        "patient",
        "`setViewed(long",
        "complex",
        "ID",
        "and/or",
        "database,",
        "database.",
        "every",
        "class,",
        "getAllReportRequestsForRequester",
        "Data",
        "representing",
        "data",
        "one",
        "setters",
        "per",
        "\"Viewed\"",
        "requesterMID,",
        "report",
        "ReportRequestBeanLoader",
        "addReportRequest",
        "ReportRequests",
        "returns",
        "pid)`:",
        "added.",
        "requests",
        "**Attributes:**",
        "is,",
        "(CRUD)",
        "given",
        "class:",
        "convert",
        "requests,",
        "DAOFactory})",
        "table",
        "handling",
        "commented-out",
        "associated",
        "list",
        "getAllReportRequestsForPatient",
        "patientMID,",
        "DAOFactory",
        "date",
        "currently",
        "extra",
        "`getAllReportRequestsForPatient(long",
        "instance",
        "new",
        "long",
        "Used",
        "creating,",
        "creates",
        "id)`:",
        "IDs,",
        "setViewed",
        "`getReportRequest(long",
        "connections",
        "`factory`:",
        "summary",
        "accessing",
        "Date",
        "factory.",
        "mid)`:",
        "ReportRequestBean",
        "Note",
        "class",
        "constructor",
        "rejecting",
        "accessed",
        "(@see",
        "validated",
        "deleting",
        "`getAllReportRequestsForRequester(long",
        "never",
        "status",
        "**Purpose:**",
        "time).",
        "updating,",
        "ReportRequestDAO",
        "mid",
        "requester",
        "updates",
        "used",
        "parameter",
        "interact",
        "ID,",
        "database",
        "implemented.",
        "queries,",
        "requesterMID",
        "Database",
        "sets",
        "related",
        "`addReportRequest(long",
        "factory",
        "methods",
        "requests."
    ],
    "RiskDAO": [
        "assume",
        "retrieve",
        "DAO",
        "Based",
        "DAOs",
        "Access",
        "diagnosed",
        "Summary:**",
        "retrieving",
        "boolean",
        "@author",
        "`hasSmoked(long",
        "smoking",
        "JDBC",
        "(DAO)",
        "hadPriorDiagnoses",
        "{@link",
        "member",
        "connects",
        "provides",
        "icdCodes",
        "match",
        "prior",
        "**Methods:**",
        "`hadPriorDiagnoses(long",
        "-",
        "intended",
        "upperICDCode)`:",
        "codes.",
        "object",
        "Object.",
        "reflections",
        "correct.",
        "icdUpper",
        "obtaining",
        "hasSmoked",
        "range.",
        "DAOs.",
        "finding",
        "start",
        "(most",
        "getFamilyMembers",
        "`DAOFactory`",
        "queries",
        "stands",
        "double...",
        "obtain",
        "*",
        "patient",
        "Java",
        "complex",
        "and/or",
        "purpose",
        "code",
        "database,",
        "diagnose",
        "health",
        "every",
        "class,",
        "icdLower",
        "patientID",
        "data",
        "one",
        "hasFamilyHistory",
        "provided",
        "captures",
        "setICDs",
        "perform",
        "setters",
        "per",
        "infections,",
        "ICD",
        "patient.",
        "`getFamilyMembers(long",
        "methods:",
        "added.",
        "family",
        "icdCodes)`:",
        "**Attributes:**",
        "is,",
        "attributes,",
        "including",
        "given",
        "DAOFactory})",
        "records.",
        "table",
        "lowerICDCode,",
        "ps",
        "access",
        "list",
        "diagnoses.",
        "lowerICDCode",
        "DAOFactory",
        "infection",
        "createPrepared",
        "extra",
        "risk",
        "instance",
        "members",
        "Used",
        "icdLower,",
        "connections",
        "`factory`:",
        "summary",
        "patientID,",
        "accessing",
        "Andy",
        "`hasFamilyHistory(long",
        "factory.",
        "conditions.",
        "whether",
        "factors",
        "class",
        "constructor",
        "medical",
        "childhood",
        "accessed",
        "(@see",
        "indicating",
        "Returns",
        "validated",
        "never",
        "**Class",
        "**Purpose:**",
        "time).",
        "way",
        "risks",
        "`RiskDAO`",
        "identify",
        "condition",
        "double",
        "factors,",
        "smoked.",
        "length",
        "potential",
        "used",
        "ever",
        "parameter",
        "hadChildhoodInfection",
        "database",
        "history,",
        "Retrieves",
        "queries,",
        "`hadChildhoodInfection(long",
        "Database",
        "sets",
        "icdUpper)`:",
        "upperICDCode",
        "patientID)`:",
        "factory",
        "methods"
    ],
    "SurveyDAO": [
        "assume",
        "responsible",
        "`addCompletedSurvey(SurveyBean",
        "DAO",
        "visitID",
        "DAOs",
        "Access",
        "Object",
        "JDBC",
        "data.",
        "(DAO)",
        "visitID)`:",
        "{@link",
        "updating",
        "load",
        "provides",
        "**Methods:**",
        "-",
        "intended",
        "object",
        "Object.",
        "reflections",
        "correct.",
        "number",
        "obtaining",
        "`OVSurvey`.",
        "id",
        "`SurveyDAO`",
        "DAOs.",
        "`SurveyLoader`",
        "date)`:",
        "surveyLoader",
        "(most",
        "`DAOFactory`",
        "stands",
        "obtain",
        "*",
        "matching",
        "concise",
        "case",
        "records",
        "complex",
        "and/or",
        "purpose",
        "code",
        "database,",
        "resources.",
        "every",
        "class,",
        "`surveyLoader`:",
        "data",
        "one",
        "inserting,",
        "named",
        "captures",
        "object.",
        "`VisitID`.",
        "addCompletedSurvey",
        "setters",
        "per",
        "methods:",
        "`OVSurvey`",
        "surveyBean,",
        "set",
        "added.",
        "Survey",
        "**Attributes:**",
        "is,",
        "attributes,",
        "given",
        "SQL",
        "`getSurveyData(long",
        "DAOFactory})",
        "type",
        "table",
        "handling",
        "surveyBean",
        "Checks",
        "office",
        "associated",
        "isSurveyCompleted",
        "map",
        "DAOFactory",
        "date",
        "overview",
        "extra",
        "getSurveyData",
        "new",
        "ResultSet",
        "table.",
        "id)`:",
        "connections",
        "`factory`:",
        "summary",
        "`SurveyBean`",
        "counting",
        "accessing",
        "Date",
        "factory.",
        "class",
        "constructor",
        "Inserts",
        "accessed",
        "(@see",
        "validated",
        "methods,",
        "never",
        "**Purpose:**",
        "time).",
        "requirement.",
        "survey",
        "`VisitID`",
        "completed",
        "visits.",
        "use",
        "used",
        "parameter",
        "retrieving,",
        "database",
        "Retrieves",
        "`isSurveyCompleted(long",
        "queries,",
        "Database",
        "sets",
        "record",
        "factory",
        "methods",
        "date.",
        "interacting"
    ],
    "SurveyResultDAO": [
        "**Key",
        "assume",
        "responsible",
        "connection.",
        "retrieve",
        "DAO",
        "`loader`:",
        "DAOs",
        "hospitalID",
        "Access",
        "Create",
        "Object",
        "JDBC",
        "(DAO)",
        "Connect",
        "Name:**",
        "{@link",
        "load",
        "Responsibilities:**",
        "provides",
        "query",
        "Retrieve",
        "**Methods:**",
        "loader",
        "objects",
        "-",
        "intended",
        "`getSurveyResultsForZip(String",
        "Object.",
        "reflections",
        "correct.",
        "`SurveyResultBeanLoader`.",
        "Requirements:**",
        "obtaining",
        "DAOs.",
        "1.",
        "getSurveyResultsForHospital",
        "(most",
        "`DAOFactory`",
        "statement",
        "stands",
        "obtain",
        "code.",
        "*",
        "results.",
        "complex",
        "managing",
        "and/or",
        "`getSurveyResultsForHospital(String",
        "Execute",
        "code",
        "database,",
        "`SurveyResultBean`",
        "every",
        "concerns",
        "Data",
        "data",
        "one",
        "specific",
        "setters",
        "per",
        "assumes",
        "Load",
        "`SurveyResultBeans`",
        "hospital",
        "prepared",
        "parameters.",
        "added.",
        "Survey",
        "**Attributes:**",
        "is,",
        "specialty,",
        "Close",
        "given",
        "specialty.",
        "DAOFactory})",
        "hospitalID,",
        "based",
        "table",
        "**Notes:**",
        "handling",
        "access",
        "list",
        "**Use",
        "Case",
        "DAOFactory",
        "**Summary:**",
        "extra",
        "SurveyResultDAO",
        "instance",
        "separation",
        "specialty)`:",
        "Summary**",
        "connections",
        "`factory`:",
        "specialty",
        "2.",
        "accessing",
        "operations",
        "factory.",
        "class",
        "constructor",
        "to:",
        "accessed",
        "(@see",
        "getSurveyResultsForZip",
        "zip,",
        "String",
        "validated",
        "never",
        "**Class",
        "time).",
        "using",
        "zip",
        "business",
        "survey",
        "`DAOFactory`.",
        "objects.",
        "used",
        "clear",
        "parameter",
        "database",
        "results",
        "`SurveyResultBeanLoader`",
        "Retrieves",
        "queries,",
        "Database",
        "logic",
        "sets",
        "related",
        "factory",
        "methods"
    ],
    "TransactionDAO": [
        "assume",
        "responsible",
        "`PatientID`",
        "`addedInfo`,",
        "logTransaction",
        "profiles.",
        "DAO",
        "patient's",
        "`operationalProfileLoader`:",
        "sorts",
        "adds",
        "`loader`:",
        "DAOs",
        "Access",
        "retrieving",
        "boolean",
        "@author",
        "end,",
        "JDBC",
        "columns.",
        "{@link",
        "getRecordAccesses",
        "load",
        "secondaryMID,",
        "provides",
        "`secondaryMID`,",
        "secondaryRole,",
        "`TransactionBeanLoader`",
        "loader",
        "**Methods:**",
        "match",
        "secondaryRole",
        "`getAllRecordAccesses(long",
        "objects",
        "-",
        "intended",
        "Analyzing",
        "object",
        "`OperationalProfile`",
        "Object.",
        "reflections",
        "correct.",
        "`Role`",
        "obtaining",
        "`Representatives`",
        "DAOs.",
        "`logTransaction(TransactionType,",
        "logging",
        "(most",
        "`DAOFactory`",
        "column.",
        "stands",
        "obtain",
        "profile)",
        "*",
        "patient",
        "secondaryMID",
        "complex",
        "managing",
        "and/or",
        "ID",
        "`loggedInMID`,",
        "getTransactionsFor",
        "database,",
        "tbList",
        "`representeeMID`",
        "database.",
        "`getTransactionsFor(String",
        "getAllTransactions",
        "`representerMID`",
        "every",
        "`TransactionLog`",
        "operational",
        "patientID",
        "**Assumptions:**",
        "data",
        "one",
        "upper,",
        "`ResultSet`.",
        "operationalProfileLoader",
        "`addAndSortRoles(List<TransactionBean>,",
        "`timeLogged`).",
        "setters",
        "per",
        "addedInfo",
        "begin,",
        "Logs",
        "relevant",
        "`getAllTransactions()`:",
        "`HCPID`",
        "logs,",
        "added.",
        "logs",
        "accessed,",
        "**Attributes:**",
        "is,",
        "given",
        "end",
        "class:",
        "SQL",
        "TransactionType",
        "(e.g.,",
        "DAOFactory})",
        "type",
        "table",
        "Logging",
        "addAndSortRoles",
        "access",
        "sortByRole)`:",
        "list",
        "**Use",
        "cases:**",
        "`getRecordAccesses(long",
        "getOperationalProfile",
        "details.",
        "DAOFactory",
        "date",
        "lower,",
        "begin",
        "extra",
        "long",
        "Used",
        "`transactionCode`,",
        "transactions,",
        "connections",
        "`factory`:",
        "summary",
        "type)`:",
        "`TransactionBean`",
        "loggedInRole,",
        "method",
        "`DeclaredHCP`",
        "patientID,",
        "java.util.Date",
        "accessing",
        "Andy",
        "Date",
        "factory.",
        "loggedInMID",
        "lower",
        "range,",
        "class",
        "upper",
        "constructor",
        "role.",
        "loggedInRole",
        "accessed",
        "criteria.",
        "(@see",
        "roles",
        "getByRole)`:",
        "Returns",
        "mechanism.",
        "validated",
        "String",
        "`getOperationalProfile()`:",
        "never",
        "Retrieving",
        "**Purpose:**",
        "ordered",
        "time).",
        "addedInfo)`:",
        "sortByRole",
        "filtered",
        "`TransactionDAO`",
        "`OperationalProfileLoader`",
        "private",
        "objects.",
        "used",
        "loggedInMID,",
        "parameter",
        "getByRole",
        "ID,",
        "database",
        "queries,",
        "transactions",
        "columns",
        "Database",
        "sets",
        "record",
        "factory",
        "transaction",
        "methods",
        "date.",
        "getAllRecordAccesses",
        "`Users`"
    ],
    "BloodType": [
        "blood",
        "possible",
        "Andy",
        "types",
        "@author"
    ],
    "Ethnicity": [
        "ethnicities",
        "possible",
        "iTrust.",
        "represented"
    ],
    "Gender": [
        "well,",
        "provided",
        "patient's",
        "Female.",
        "incomplete",
        "discretion.",
        "specified",
        "Male",
        "forms"
    ],
    "PrescriptionAlerts": [
        "table",
        "alerted",
        "prescription",
        "emergency",
        "-",
        "runtime.",
        "reports",
        "changed",
        "abstracted",
        "Andy",
        "future,",
        "Every",
        "database",
        "@author"
    ],
    "Role": [
        "HCP,",
        "requirements",
        "user",
        "Patient,",
        "ER,",
        "meanings",
        "contextual",
        "Administrator",
        "Consult",
        "Tester.",
        "iTrust",
        "individual",
        "choices.",
        "PHA,",
        "roles:",
        "UAP,"
    ],
    "State": [
        "Andy",
        "states.",
        "wonderful",
        "@author"
    ],
    "TransactionType": [
        "particular",
        "producing",
        "possible",
        "used",
        "profile.",
        "types,",
        "operational",
        "transaction",
        "order,"
    ],
    "DBException": [
        "exceptions",
        "message",
        "back",
        "Summary:**",
        "(even",
        "e)`:",
        "@author",
        "error.",
        "Name:**",
        "provides",
        "**Methods:**",
        "thrown",
        "`SQLException`",
        "object",
        "getSQLException",
        "also",
        "`sqlException`:",
        "security.",
        "`getSQLException()`:",
        "it's",
        "vague",
        "make",
        "getExtendedMessage",
        "*",
        "testing",
        "Java",
        "`sqlException`",
        "purposes.",
        "behind",
        "reasoning",
        "superclass",
        "reveal",
        "retaining",
        "caused",
        "manner,",
        "representing",
        "database-related",
        "provided",
        "object.",
        "providing",
        "exists,",
        "manner.",
        "bad!)",
        "returns",
        "overridden",
        "attribute,",
        "details",
        "**Attributes:**",
        "message.",
        "JSP,",
        "SQL",
        "MySQL",
        "class:",
        "So,",
        "knowing",
        "parameter,",
        "`getExtendedMessage()`:",
        "begin",
        "track",
        "wrapper",
        "summary",
        "method",
        "Andy",
        "serialVersionUID",
        "calls",
        "sqlException",
        "class",
        "constructor",
        "users",
        "not.",
        "exception",
        "**Class",
        "Exception",
        "**Purpose:**",
        "way",
        "secure",
        "debugging",
        "description,",
        "handle",
        "gets",
        "default",
        "used",
        "error",
        "`DBException(SQLException",
        "takes",
        "database",
        "underlying",
        "`DBException`",
        "keep",
        "sets"
    ],
    "ErrorList": [
        "hasErrors",
        "`hasErrors()`:",
        "adding",
        "designed",
        "ErrorList",
        "message",
        "**Attributes:**",
        "scenarios",
        "summary:",
        "class",
        "errorMessage",
        "List",
        "errorList",
        "adds",
        "true",
        "processing",
        "user",
        "need",
        "requests,",
        "retrieving",
        "validating",
        "create",
        "@author",
        "messages.",
        "validators",
        "list,",
        "errors,",
        "getMessageList",
        "input,",
        "list.",
        "**Purpose:**",
        "`getMessageList()`:",
        "managed,",
        "reporting",
        "list",
        "null",
        "**Use",
        "provides",
        "application.",
        "errors.",
        "**Methods:**",
        "string.",
        "Strings",
        "collected",
        "use",
        "contains",
        "private",
        "error",
        "used",
        "iterator",
        "**Class:**",
        "`errorList`:",
        "Used",
        "empty",
        "Case:**",
        "store",
        "`iterator()`:",
        "errorMessage)`:",
        "messages",
        "`addIfNotNull(String",
        "manage",
        "`toString()`:",
        "addIfNotNull",
        "toString",
        "representation",
        "iTrust",
        "checking",
        "returns",
        "string",
        "Andy",
        "methods",
        "*"
    ],
    "FormValidationException": [
        "strings.",
        "message",
        "incorrect",
        "form",
        "`printHTML(JspWriter",
        "data.",
        "Name:**",
        "Validation",
        "`getErrorList()`:",
        "validation",
        "provides",
        "**Methods:**",
        "classes,",
        "FormValidationException",
        "stores",
        "`getMessage()`:",
        "validation.",
        "passed",
        "notify",
        "*",
        "incomplete,",
        "initializes",
        "HTML",
        "errorList",
        "getErrorList",
        "thrown.",
        "messages.",
        "`java.util.List`",
        "class,",
        "page.",
        "formatted",
        "errors",
        "object.",
        "`JspWriter`",
        "messages",
        "existing",
        "`FormValidationException(String...",
        "returns",
        "parameters.",
        "correct",
        "action",
        "overridden",
        "incomplete",
        "**Attributes:**",
        "summary:",
        "handled",
        "errorMessages)`:",
        "printHTML",
        "errorList)`:",
        "list",
        "`ErrorList`",
        "form.",
        "instance",
        "`errorList`:",
        "format",
        "proper",
        "method",
        "serialVersionUID",
        "involves",
        "guide",
        "class",
        "constructor",
        "JSP",
        "series",
        "user",
        "web",
        "exception",
        "Form",
        "**Class",
        "prints",
        "**Purpose:**",
        "out)`:",
        "way",
        "custom",
        "suitable",
        "application",
        "handle",
        "use",
        "used",
        "error",
        "getMessage",
        "`FormValidationException(ErrorList",
        "submission",
        "iTrust",
        "specifically",
        "re-enter",
        "object,"
    ],
    "iTrustException": [
        "way.",
        "message",
        "scenarios",
        "**Attributes:**",
        "`iTrustException`",
        "class",
        "message.",
        "handled",
        "constructor",
        "users",
        "field",
        "user.",
        "class:",
        "need",
        "users.",
        "displayed",
        "purposes.",
        "system",
        "messages.",
        "user,",
        "exception",
        "created.",
        "internal",
        "technical",
        "provided,",
        "**Purpose:**",
        "methods",
        "handler.",
        "debugging",
        "display",
        "mainly",
        "**Methods:**",
        "handle",
        "`getExtendedMessage()`:",
        "thrown",
        "`iTrustException(String",
        "default",
        "`getExtendedMessage()`",
        "-",
        "`message`:",
        "error",
        "used",
        "stores",
        "`getMessage()`:",
        "`getMessage()`",
        "extended",
        "instance",
        "displaying",
        "message)`:",
        "exception,",
        "getMessage",
        "messages",
        "specialized",
        "occurs,",
        "summary",
        "method",
        "iTrust",
        "sets",
        "customized",
        "string",
        "returns",
        "friendly",
        "serialVersionUID",
        "getExtendedMessage",
        "explicit"
    ],
    "NoHealthRecordsException": [
        "calls",
        "case",
        "patient",
        "slightly",
        "Java",
        "message",
        "records",
        "`serialVersionUID`:",
        "risks.",
        "**Attributes:**",
        "class",
        "message.",
        "NoHealthRecordsException",
        "constructor",
        "patient's",
        "trying",
        "user.",
        "making",
        "class:",
        "entered.",
        ":",
        "ID",
        "healthcare",
        "`MESSAGE`:",
        "MESSAGE",
        "represents",
        "system",
        "version",
        "impossible",
        "handling",
        "health",
        "exception",
        "iTrustException",
        "different.",
        "Name:**",
        "**Class",
        "superclass",
        "**Purpose:**",
        "way",
        "static",
        "separate",
        "condition",
        "**Methods:**",
        "entered,",
        "pre-specified",
        "handle",
        "thrown",
        "passes",
        "contains",
        "default",
        "specific",
        "error",
        "used",
        "clear",
        "risk",
        "empty,",
        "long",
        "indicators",
        "`NoHealthRecordsException()`",
        "provide",
        "final",
        "summary",
        "informative",
        "checking",
        "string",
        "serialVersionUID",
        "calculate",
        "*"
    ],
    "ChronicDiseaseMediator": [
        "1",
        "responsible",
        "systems",
        "are.",
        "adds",
        "@author",
        "system",
        "Constructor",
        "Name:**",
        "riskCheckers",
        "ID.",
        "checks",
        "provides",
        "process.",
        "**Methods:**",
        "diseases.",
        "disease",
        "objects",
        "RiskChecker",
        "pid)**:",
        "Requirements:**",
        "assessments,",
        "getDiseaseAtRisk",
        "**getDiseaseAtRisk():**",
        "require",
        "determines",
        "requirement:",
        "*",
        "case",
        "patient",
        "ChronicDiseaseMediator",
        "initializes",
        "adding",
        "**ChronicDiseaseMediator(DAOFactory",
        "certain",
        "framework",
        "diabetes.",
        "code",
        "different",
        "individual's",
        "chronic",
        "perform",
        "targeted",
        "patient.",
        "factory,",
        "determine",
        "diabetes",
        "prevention",
        "**Attributes:**",
        "given",
        "useful",
        "2",
        "checker",
        "healthcare",
        "based",
        "type",
        "for.",
        "diseases",
        "list.",
        "list",
        "**Use",
        "needed,",
        "map",
        "Case",
        "companies.",
        "DAOFactory",
        "disease,",
        "risk",
        "long",
        "creates",
        "separates",
        "insurance",
        "summary",
        "heart",
        "see",
        "Andy",
        "strategies.",
        "diabetes,",
        "flexible",
        "actual",
        "class",
        "patients",
        "Returns",
        "Figures",
        "**Class",
        "**Purpose:**",
        "identify",
        "use",
        "interventions",
        "used",
        "`riskCheckers`:",
        "determining",
        "strategy",
        "checkers",
        "provide",
        "logic",
        "checking"
    ],
    "HeartDiseaseRisks": [
        "`super()`",
        "patient's",
        "Disease\".",
        "Ethnicity",
        "are:",
        "@author",
        "`getName()`:",
        "system",
        "`RiskChecker`,",
        "parent",
        "would",
        "Prior",
        "{@link",
        "advice",
        "name",
        "risk.",
        "behavior",
        "prior",
        "**Methods:**",
        "disease",
        "objects",
        "object",
        "also",
        "operations.",
        "hypertension,",
        "Family",
        "Hypertension",
        "calculated.",
        "*",
        "case",
        "patient",
        "initializes",
        "evaluated,",
        "cholesterol",
        "certain",
        "`getDiseaseRiskFactors()`:",
        "`HeartDiseaseRisks(DAOFactory",
        "diagnosis",
        "\"Heart",
        "health",
        "`currentHealthRecord`:",
        "evaluate",
        "disease.",
        "ethnicity,",
        "does,",
        "representing",
        "various",
        "Heart",
        "`qualifiesForDisease()`:",
        "developing",
        "overridden,",
        "patient.",
        "factory,",
        "methods:",
        "parameters.",
        "calculate",
        "family",
        "likely",
        "details",
        "**Attributes:**",
        "given",
        "analyzes",
        "class:",
        "Cholesterol",
        "based",
        "reduce",
        "Checks",
        "RiskChecker}",
        "`PatientRiskFactor`",
        "list",
        "`patient`:",
        "extends",
        "getDiseaseRiskFactors",
        "DAOFactory",
        "class.",
        "risk",
        "long",
        "calculates",
        "required",
        "diagnosis,",
        "`factory`:",
        "summary",
        "method",
        "`HeartDiseaseRisks`",
        "heart",
        "Disease",
        "see",
        "Andy",
        "+",
        "Gender",
        "class",
        "factors",
        "constructor",
        "qualifiesForDisease",
        "feedback",
        "current",
        "getName",
        "indicating",
        "Returns",
        "levels",
        "levels,",
        "recommendations.",
        "true,",
        "**Purpose:**",
        "smoking,",
        "history.",
        "Age",
        "personalized",
        "Weight",
        "use",
        "inherited",
        "weight,",
        "used",
        "individual",
        "age,",
        "Smoking",
        "history",
        "attributes",
        "database",
        "gender,",
        "inherits",
        "provide",
        "patientID)`:",
        "record",
        "methods"
    ],
    "RiskChecker": [
        "exceptions",
        "patient's",
        "isAtRisk",
        "fill",
        "boolean",
        "@author",
        "`getName()`:",
        "increased",
        "methods.",
        "Name:**",
        "retrieves",
        "utility",
        "get",
        "name",
        "risk.",
        "checks",
        "provides",
        "**Methods:**",
        "diseases.",
        "disease",
        "objects",
        "information.",
        "object",
        "utlity",
        "RiskChecker",
        "Requirements:**",
        "support",
        "number",
        "threshold",
        "qualifies",
        "throws",
        "`getPatientRiskFactors()`",
        "requirement:",
        "See",
        "*",
        "case",
        "patient",
        "initializes",
        "Java",
        "records",
        "risks.",
        "implementing",
        "`getDiseaseRiskFactors()`:",
        "increasing",
        "code",
        "value",
        "risks,",
        "health",
        "`currentHealthRecord`:",
        "patients'",
        "class,",
        "representing",
        "various",
        "`RISK_THRESHOLD`:",
        "data",
        "`qualifiesForDisease()`:",
        "account",
        "(default",
        "getPatientRiskFactors",
        "`getPatientRiskFactors()`:",
        "(DAOs)",
        "determine",
        "returns",
        "**Attributes:**",
        "including",
        "given",
        "PatientBean",
        "based",
        "HealthRecord",
        "RISK_THRESHOLD",
        "diseases",
        "necessary",
        "access",
        "extending",
        "`getDiseaseRiskFactors()`,",
        "check",
        "associated",
        "list",
        "**Use",
        "map",
        "status,",
        "Case",
        "`patient`:",
        "static",
        "getDiseaseRiskFactors",
        "DAOFactory",
        "abstract",
        "`getName()`,",
        "risk",
        "currentHealthRecord",
        "integer",
        "extended",
        "long",
        "required",
        "`factory`:",
        "summary",
        "method",
        "`qualifiesForDisease()`",
        "Andy",
        "3)",
        "actual",
        "whether",
        "class",
        "factors",
        "constructor",
        "qualifiesForDisease",
        "current",
        "getName",
        "indicating",
        "patients",
        "exceeding",
        "**Class",
        "`RiskChecker(DAOFactory,",
        "**Purpose:**",
        "risks",
        "disease-specific",
        "records,",
        "factors,",
        "use",
        "checked",
        "used",
        "takes",
        "interact",
        "ID,",
        "`isAtRisk()`:",
        "example",
        "found",
        "subclasses",
        "checking",
        "known",
        "patientID)`:",
        "record",
        "factory",
        "methods",
        "`isAtRisk()`"
    ],
    "Type1DiabetesRisks": [
        "1",
        "patient's",
        "infections)",
        "`Type1DiabetesRisks`:",
        "@author",
        "`getName()`:",
        "{@link",
        "name",
        "risk.",
        "evaluated",
        "checks",
        "**Methods:**",
        "less",
        "Type",
        "disease",
        "object",
        "infections",
        "*",
        "patient",
        "initializes",
        "Java",
        "`getDiseaseRiskFactors()`:",
        "ID",
        "represents",
        "ethnicity,",
        "`Type1DiabetesRisks`",
        "does,",
        "(returns",
        "various",
        "`qualifiesForDisease()`:",
        "specific",
        "developing",
        "factory,",
        "determine",
        "Diabetes)",
        "(includes",
        "returns",
        "12)",
        "family",
        "details",
        "**Attributes:**",
        "given",
        "analyzes",
        "based",
        "Checks",
        "RiskChecker}",
        "check",
        "contribute",
        "list",
        "`patient`:",
        "getDiseaseRiskFactors",
        "DAOFactory",
        "assess",
        "scenario",
        "risk",
        "long",
        "`factory`:",
        "summary",
        "method",
        "(Type",
        "see",
        "Andy",
        "Diabetes.",
        "class",
        "factors",
        "true",
        "constructor",
        "qualifiesForDisease",
        "childhood",
        "need",
        "getName",
        "**Purpose:**",
        "`Type1DiabetesRisks(DAOFactory",
        "identify",
        "Diabetes",
        "age",
        "used",
        "age,",
        "interact",
        "history,",
        "database",
        "`patientID`:",
        "patientID)`:"
    ],
    "Type2DiabetesRisks": [
        "patient's",
        "Summary:**",
        "boolean",
        "@author",
        "`getName()`:",
        "Type2DiabetesRisks",
        "factors.",
        "{@link",
        "name",
        "**Methods:**",
        "prior",
        "Type",
        "disease",
        "greater,",
        "hypertension,",
        "**Important",
        "*",
        "patient",
        "initializes",
        "Java",
        "cholesterol",
        "`getDiseaseRiskFactors()`:",
        "ID",
        "disease.",
        "ethnicity,",
        "does,",
        "various",
        "`qualifiesForDisease()`:",
        "provided",
        "\"Type",
        "developing",
        "factory,",
        "II",
        "checked,",
        "family",
        "designed",
        "details",
        "**Attributes:**",
        "given",
        "class:",
        "2",
        "based",
        "Checks",
        "RiskChecker}",
        "check",
        "contribute",
        "list",
        "Note:**",
        "`patient`:",
        "extends",
        "getDiseaseRiskFactors",
        "DAOFactory",
        "risk",
        "long",
        "required",
        "diagnosis,",
        "specialized",
        "`factory`:",
        "summary",
        "method",
        "Diabetes\".",
        "see",
        "Andy",
        "Diabetes.",
        "class",
        "factors",
        "constructor",
        "qualifiesForDisease",
        "`Type2DiabetesRisks(DAOFactory",
        "12",
        "indicating",
        "getName",
        "version",
        "Returns",
        "overrides",
        "levels,",
        "methods,",
        "**Class",
        "**Purpose:**",
        "history.",
        "Diabetes",
        "age",
        "objects.",
        "weight,",
        "used",
        "age,",
        "interact",
        "database",
        "`patientID`:",
        "include",
        "specifically",
        "checking",
        "patientID)`:",
        "record",
        "factory",
        "`RiskChecker`"
    ],
    "AgeFactor": [
        "planning",
        "patient's",
        "`getDescription()`:",
        "boolean",
        "@author",
        "AgeFactor",
        "would",
        "Name:**",
        "[age]\"",
        "{@link",
        "return",
        "checks",
        "age.",
        "**Methods:**",
        "threshold",
        "PatientRiskFactor}",
        "assessed",
        "(i.e.,",
        "See",
        "*",
        "case",
        "patient",
        "hasFactor",
        "Java",
        "diagnosis",
        "value",
        "greater",
        "factor,",
        "representing",
        "assesses",
        "specific",
        "age)",
        "does.",
        "description",
        "determine",
        "returns",
        "\"Patient",
        "details",
        "**Attributes:**",
        "treatment",
        "given",
        "class:",
        "case,",
        "typical",
        "associated",
        "specified",
        "code,",
        "`patient`:",
        "describing",
        "risk",
        "instance",
        "system.",
        "`PatientBean`",
        "summary",
        "method",
        "string",
        "Andy",
        "factor.",
        "person",
        "whether",
        "class",
        "medical",
        "person's",
        "indicating",
        "implemented",
        "**Class",
        "**Purpose:**",
        "factor",
        "important",
        "age",
        "`age`:",
        "use",
        "used",
        "typically",
        "`getAgeFactor()`:",
        "`hasFactor()`:",
        "particular",
        "checking",
        "getDescription"
    ],
    "ChildhoodInfectionFactor": [
        "patient",
        "initializes",
        "details",
        "hasFactor",
        "icdCodes)`:",
        "**Attributes:**",
        "`icdCodes`:",
        "class",
        "given",
        "`getDescription()`:",
        "class:",
        "factory",
        "ID",
        "@author",
        "type",
        "codes",
        "`description`:",
        "`ChildhoodInfectionFactor(DAOFactory",
        "array",
        "Checks",
        "childhood,",
        "{@link",
        "**Purpose:**",
        "(measured",
        "check",
        "using",
        "evaluated",
        "checks",
        "factor",
        "patientID",
        "representing",
        "describing",
        "icdCodes",
        "**Methods:**",
        "`false`.",
        "`ChildhoodInfectionFactor`",
        "specific",
        "used",
        "risk",
        "object",
        "Andy",
        "instance",
        "long",
        "constructor,",
        "diagnoses",
        "ICD",
        "interact",
        "typically",
        "does.",
        "ID,",
        "database",
        "`factory`.",
        "`hasFactor()`:",
        "`DBException`",
        "factory,",
        "`factory`:",
        "`patientID`:",
        "summary",
        "PatientRiskFactor}",
        "stored",
        "occurs,",
        "method",
        "mid,",
        "codes)",
        "`DAOFactory`",
        "string",
        "returns",
        "childhood.",
        "double...",
        "getDescription",
        "See",
        "set",
        "*"
    ],
    "CholesterolFactor": [
        "interventions.",
        "patient's",
        "high",
        "`getDescription()`:",
        "@author",
        "false",
        "system",
        "{@link",
        "advice",
        "checks",
        "bad",
        "**Methods:**",
        "int",
        "`HealthRecord`",
        "object",
        "`ldlThreshold`,",
        "ldlThreshold",
        "threshold",
        "needs",
        "final",
        "PatientRiskFactor}",
        "See",
        "*",
        "patient",
        "hasFactor",
        "Java",
        "comparing",
        "cholesterol",
        "otherwise.",
        "health",
        "factor,",
        "within",
        "data",
        "does.",
        "store",
        "determine",
        "returns",
        "`record`:",
        "\"Patient",
        "variables",
        "details",
        "**Attributes:**",
        "given",
        "class:",
        "type",
        "Checks",
        "triThreshold",
        "`PatientRiskFactor`",
        "check",
        "static",
        "describing",
        "values.",
        "risk",
        "`triThreshold`:",
        "due",
        "summary",
        "method",
        "string",
        "Andy",
        "`CholesterolFactor`",
        "good",
        "range,",
        "class",
        "true",
        "patients",
        "threshold.",
        "levels",
        "levels,",
        "LDL,",
        "**Purpose:**",
        "identify",
        "tri",
        "personalized",
        "HDL,",
        "used",
        "cholesterol.",
        "typically",
        "`hasFactor()`:",
        "provide",
        "`hdlThreshold`,",
        "cholesterol\"",
        "record",
        "getDescription",
        "hdlThreshold",
        "normal"
    ],
    "EthnicityFactor": [
        "patient's",
        "build",
        "`getDescription()`:",
        "boolean",
        "@author",
        "Constructor",
        "Name:**",
        "{@link",
        "matches",
        "risk.",
        "checks",
        "ethnicities",
        "special",
        "**Methods:**",
        "integrated",
        "object",
        "clinical",
        "attention",
        "PatientRiskFactor}",
        "classes",
        "require",
        "Assessing",
        "See",
        "*",
        "patient",
        "initializes",
        "hasFactor",
        "Java",
        "comprehensive",
        "purposes.",
        "array",
        "frameworks",
        "representing",
        "`Ethnicity.NotSpecified`.",
        "one",
        "does.",
        "ethnicity",
        "ethnicity.",
        "details",
        "**Attributes:**",
        "treatment",
        "`patient`",
        "given",
        "class:",
        "research",
        "based",
        "Checks",
        "assessment",
        "check",
        "`patient`:",
        "describing",
        "assess",
        "atRisk",
        "risk",
        "due",
        "indicate",
        "attributes.",
        "following",
        "system.",
        "`EthnicityFactor(PatientBean,",
        "`PatientBean`",
        "summary",
        "Identifying",
        "method",
        "EthnicityFactor",
        "string",
        "Andy",
        "`atRisk`",
        "whether",
        "class",
        "cases:",
        "`Ethnicity`",
        "`atRisk`:",
        "Ethnicity...)`:",
        "indicating",
        "patients",
        "Returns",
        "values",
        "**Class",
        "**Purpose:**",
        "factor",
        "personalized",
        "Developing",
        "plans",
        "use",
        "used",
        "typically",
        "`hasFactor()`:",
        "assessed.",
        "getDescription"
    ],
    "FamilyHistoryFactor": [
        "patient's",
        "DAO",
        "Access",
        "`getDescription()`:",
        "Summary:**",
        "retrieving",
        "@author",
        "Name:**",
        "{@link",
        "checks",
        "**Methods:**",
        "long,",
        "object",
        "acts",
        "getDescription",
        "delegating",
        "icdUpper",
        "range",
        "double)`:",
        "range.",
        "PatientRiskFactor}",
        "See",
        "*",
        "patient",
        "initializes",
        "hasFactor",
        "double,",
        "purpose",
        "diagnosis",
        "DAO.",
        "database.",
        "straight",
        "class,",
        "icdLower",
        "patientID",
        "unique",
        "captures",
        "does.",
        "query,",
        "description",
        "methods:",
        "Delegates",
        "returns",
        "occurs",
        "(Data",
        "family",
        "bounds",
        "FamilyHistoryFactor",
        "details",
        "**Attributes:**",
        "attributes,",
        "given",
        "Checks",
        "identifier",
        "DAOFactory",
        "Object)",
        "instance",
        "required",
        "`icdLower`",
        "`factory`:",
        "summary",
        "method",
        "Andy",
        "lower",
        "class",
        "upper",
        "constructor",
        "brief",
        "exception",
        "**Class",
        "**Purpose:**",
        "factor",
        "used",
        "false.",
        "attributes",
        "history",
        "interact",
        "typically",
        "database",
        "`icdUpper`:",
        "`hasFactor()`:",
        "delegate",
        "`patientID`:",
        "factory",
        "`FamilyHistoryFactor(DAOFactory,"
    ],
    "GenderFactor": [
        "patient",
        "details",
        "hasFactor",
        "patient's",
        "Java",
        "**Attributes:**",
        "whether",
        "See",
        "class",
        "given",
        "`getDescription()`:",
        "class:",
        "`gender`:",
        "`Gender`",
        "boolean",
        "indicating",
        "@author",
        "Returns",
        "Checks",
        "gender.",
        "Name:**",
        "**Class",
        "{@link",
        "**Purpose:**",
        "matches",
        "at-risk",
        "checks",
        "`patient`:",
        "one.",
        "representing",
        "**Methods:**",
        "GenderFactor",
        "so,",
        "risk",
        "Andy",
        "instance",
        "typically",
        "does.",
        "human-readable",
        "gender,",
        "`hasFactor()`:",
        "description",
        "it's",
        "`PatientBean`",
        "summary",
        "PatientRiskFactor}",
        "1.",
        "method",
        "2.",
        "\"NotSpecified\".",
        "getDescription",
        "determines",
        "evaluated.",
        "gender",
        "factor."
    ],
    "HypertensionFactor": [
        "patient's",
        "(120)",
        "diastolicThreshold",
        "`getDescription()`:",
        "`record`",
        "currentHealthRecord)`:",
        "@author",
        "system",
        "Name:**",
        "{@link",
        "checks",
        "**Methods:**",
        "disease",
        "blood",
        "integrated",
        "`HealthRecord`",
        "threshold",
        "hypertension,",
        "PatientRiskFactor}",
        "Mapping:**",
        "diastolic",
        "See",
        "*",
        "patient",
        "initializes",
        "hasFactor",
        "Java",
        "comparing",
        "systolicThreshold",
        "certain",
        "health",
        "evaluate",
        "representing",
        "120.",
        "provided",
        "readings.",
        "does.",
        "description",
        "care.",
        "returns",
        "`record`:",
        "details",
        "respective",
        "**Attributes:**",
        "hypertension\")",
        "given",
        "class:",
        "healthcare",
        "hypertension",
        "type",
        "based",
        "(240)",
        "threshold,",
        "Checks",
        "essential",
        "240",
        "**Use",
        "`systolicThreshold`:",
        "Case",
        "static",
        "systolic",
        "variable",
        "`diastolicThreshold`:",
        "risk",
        "instance",
        "summary",
        "method",
        "string",
        "Andy",
        "class",
        "(\"Patient",
        "constructor",
        "Requirement",
        "management",
        "patients",
        "threshold.",
        "record",
        "values",
        "**Class",
        "**Purpose:**",
        "pressure",
        "factor",
        "identify",
        "attribute",
        "used",
        "typically",
        "`hasFactor()`:",
        "thresholds.",
        "specifically",
        "`HypertensionFactor(HealthRecord",
        "HypertensionFactor",
        "getDescription"
    ],
    "PatientRiskFactor": [
        "patient's",
        "`getDescription()`:",
        "depending",
        "boolean",
        "@author",
        "`hasRiskFactor()`:",
        "checks",
        "provides",
        "**Methods:**",
        "value:",
        "subclass)",
        "`null`)",
        "avoid",
        "base",
        "causes",
        "version.",
        "*",
        "case",
        "patient",
        "hasFactor",
        "represents",
        "code",
        "calculations.",
        "factor,",
        "delegates",
        "various",
        "(implementation",
        "hasRiskFactor",
        "hasRisk",
        "(default",
        "types",
        "patient.",
        "description",
        "caching",
        "implementation",
        "specifying",
        "returns",
        "`hasFactor()`.",
        "**Attributes:**",
        "including",
        "given",
        "indication.",
        "class:",
        "textual",
        "protected",
        "type",
        "necessary",
        "resulting",
        "`PatientRiskFactor`",
        "Abstract",
        "map",
        "status,",
        "abstract",
        "involve",
        "risk",
        "Caches",
        "summary",
        "method",
        "may",
        "Andy",
        "factor.",
        "cache",
        "whether",
        "class",
        "indicating",
        "redundant",
        "varies",
        "**Class",
        "status",
        "factor",
        "public",
        "`hasRisk`:",
        "requirement,",
        "gets",
        "updates",
        "once.",
        "factors,",
        "use",
        "private",
        "checked",
        "calling",
        "used",
        "result",
        "`hasFactor()`:",
        "particular",
        "Purpose:**",
        "first",
        "getDescription"
    ],
    "PriorDiagnosisFactor": [
        "patient's",
        "DAO",
        "`lowerICDCode`:",
        "Access",
        "`getDescription()`:",
        "@author",
        "Name:**",
        "{@link",
        "checks",
        "prior",
        "**Methods:**",
        "care",
        "disease",
        "integrated",
        "Diseases)",
        "getDescription",
        "diagnoses",
        "delegating",
        "range",
        "PatientRiskFactor}",
        "requirement:",
        "See",
        "*",
        "case",
        "patient",
        "hasFactor",
        "ID",
        "code",
        "diagnosis",
        "health",
        "factor,",
        "(International",
        "patientID",
        "`hadPriorDiagnoses()`",
        "data",
        "unique",
        "specific",
        "Classification",
        "ICD",
        "does.",
        "description",
        "determine",
        "(Data",
        "\"Patient",
        "`upperICDCode`:",
        "calculate",
        "lowest",
        "details",
        "**Attributes:**",
        "information",
        "given",
        "reports.",
        "parameters",
        "Checks",
        "access",
        "**Use",
        "map",
        "generate",
        "identifier",
        "lowerICDCode",
        "uses",
        "DAOFactory",
        "delegatin",
        "Object)",
        "risk",
        "due",
        "instance",
        "highest",
        "Case:**",
        "`factory`:",
        "summary",
        "method",
        "past.",
        "Andy",
        "factor.",
        "PriorDiagnosisFactor",
        "diagnoses\"",
        "class",
        "medical",
        "DAO's",
        "brief",
        "patients",
        "Returns",
        "**Class",
        "**Purpose:**",
        "identify",
        "personalized",
        "application",
        "use",
        "used",
        "calling",
        "takes",
        "typically",
        "history,",
        "database",
        "`hasFactor()`:",
        "`patientID`:",
        "checking",
        "upperICDCode",
        "related",
        "method,",
        "factory"
    ],
    "SmokingFactor": [
        "DAO",
        "Access",
        "`getDescription()`:",
        "Risk",
        "boolean",
        "@author",
        "smoking",
        "Object",
        "(DAO)",
        "{@link",
        "**Methods:**",
        "`false`.",
        "instance.",
        "getDescription",
        "delegating",
        "PatientRiskFactor}",
        "See",
        "*",
        "case",
        "patient",
        "initializes",
        "hasFactor",
        "Java",
        "trying",
        "score",
        "code",
        "database,",
        "factor,",
        "delegates",
        "class,",
        "help",
        "accordingly.",
        "patientID",
        "Data",
        "smoked",
        "unique",
        "provided",
        "smoker\"",
        "task",
        "**Class:**",
        "does.",
        "long)`:",
        "determine",
        "returns",
        "occurs",
        "\"Patient",
        "details",
        "**Attributes:**",
        "given",
        "class:",
        "access",
        "map",
        "describing",
        "`SmokingFactor(DAOFactory,",
        "identifier",
        "DAOFactory",
        "`factory`",
        "risk",
        "instance",
        "`factory`:",
        "summary",
        "method",
        "`hasSmoked()`",
        "see",
        "string",
        "Andy",
        "factory.",
        "SmokingFactor",
        "whether",
        "class",
        "DAOFactory's",
        "constructor",
        "smoked,",
        "indicating",
        "exception",
        "**Purpose:**",
        "factor",
        "`RiskDAO`",
        "requirement,",
        "`patientID`",
        "use",
        "calculating",
        "used",
        "calling",
        "ever",
        "attributes",
        "interact",
        "history",
        "typically",
        "database",
        "determining",
        "`hasFactor()`:",
        "`patientID`:",
        "factory",
        "life"
    ],
    "WeightFactor": [
        "stating",
        "patient's",
        "WeightFactor",
        "`getDescription()`:",
        "boolean",
        "@author",
        "Index",
        "system",
        "Name:**",
        "{@link",
        "checks",
        "provides",
        "body",
        "**Methods:**",
        "integrated",
        "object",
        "`WeightFactor(HealthRecord,",
        "index",
        "also",
        "threshold",
        "PatientRiskFactor}",
        "analyzing",
        "See",
        "*",
        "patient",
        "initializes",
        "hasFactor",
        "mass",
        "Java",
        "records",
        "risks.",
        "module",
        "framework",
        "value",
        "health",
        "`currentHealthRecord`:",
        "factor,",
        "`bmiThreshold`:",
        "int)`:",
        "bmiThreshold",
        "various",
        "assesses",
        "data",
        "does.",
        "patient.",
        "infinite.",
        "determine",
        "details",
        "**Attributes:**",
        "Mass",
        "given",
        "class:",
        "based",
        "threshold,",
        "Checks",
        "specified",
        "describing",
        "risk",
        "currentHealthRecord",
        "calculates",
        "BMI",
        "summary",
        "method",
        "string",
        "Andy",
        "factor.",
        "whether",
        "class",
        "constructor",
        "Body",
        "current",
        "indicating",
        "patients",
        "Returns",
        "threshold.",
        "**Class",
        "**Purpose:**",
        "risks",
        "identify",
        "factors,",
        "BMI.",
        "potential",
        "used",
        "typically",
        "`hasFactor()`:",
        "(BMI)",
        "record",
        "getDescription"
    ],
    "SessionTimeoutListener": [
        "initializes",
        "Java",
        "limit",
        "period",
        "**Attributes:**",
        "arg0)`:",
        "limit,",
        "compliance",
        "class",
        "constructor",
        "inactive",
        "HTTP",
        "closed",
        "time",
        "declared",
        "class:",
        "user",
        "session",
        "listener",
        "1`:",
        "web",
        "sessionCreated",
        "database.",
        "Name:**",
        "**Class",
        "SessionTimeoutListener",
        "retrieves",
        "**Purpose:**",
        "sessionDestroyed",
        "ensuring",
        "2`:",
        "specified",
        "parameter,",
        "must",
        "arg0",
        "application,",
        "**Methods:**",
        "pre-specified",
        "retrieved",
        "`Constructor",
        "`factory`",
        "`sessionDestroyed(HttpSessionEvent",
        "default",
        "attribute",
        "timeout",
        "property",
        "session.",
        "instance.",
        "used",
        "specific",
        "limit.",
        "`sessionCreated(HttpSessionEvent",
        "instance",
        "takes",
        "constructor,",
        "new",
        "interface",
        "interact",
        "times",
        "database",
        "implemented.",
        "implement",
        "production",
        "sessions",
        "specialized",
        "`factory`:",
        "summary",
        "created,",
        "Called",
        "logic",
        "method",
        "sets",
        "time.",
        "`DAOFactory`",
        "factory",
        "*"
    ],
    "ICD9CMLink": [
        "site",
        "link.",
        "Sets",
        "code)`:",
        "@author",
        "parent)`:",
        "parent",
        "would",
        "Name:**",
        "tag.",
        "utility",
        "/>",
        "easily",
        "Revision,",
        "provides",
        "website",
        "```",
        "**Methods:**",
        "Modification)",
        "object",
        "Requirements:**",
        "also",
        "`getCode()`:",
        "page",
        "code.",
        "*",
        "`doStartTag()`:",
        "HTML",
        "code=\"12345\"",
        "write",
        "example:",
        "code",
        "`parent`:",
        "value",
        "website.",
        "`setPageContext(PageContext",
        "overloaded",
        "ICD9CMLink",
        "(International",
        "page.",
        "doStartTag",
        "`pageContext`:",
        "specific",
        "Classification",
        "resources",
        "```jsp",
        "Diseases,",
        "setParent",
        "developers",
        "pageContext)`:",
        "pageContext",
        "set",
        "formats",
        "**Attributes:**",
        "summary:",
        "`code`:",
        "`setCode()`",
        "end",
        "allows",
        "method.",
        "**Use",
        "`code`",
        "Case",
        "code,",
        "doEndTag",
        "generate",
        "string.",
        "getParent",
        "`doEndTag()`:",
        "indicate",
        "Used",
        "`release()`:",
        "ICD9CM",
        "Clinical",
        "setPageContext",
        "method",
        "<icd9cm:ICD9CMLink",
        "link",
        "Andy",
        "release",
        "actual",
        "setCode",
        "class",
        "JSP",
        "9th",
        "Returns",
        "converted",
        "**Class",
        "**Purpose:**",
        "PageContext",
        "`setParent(Tag",
        "double",
        "\"12345\".",
        "attribute",
        "used",
        "takes",
        "tag",
        "getCode",
        "`setCode(String"
    ],
    "PatientNavigation": [
        "patient's",
        "strings",
        "thisTitle",
        "@author",
        "parent",
        "selected.",
        "setThisTitle",
        "Name:**",
        "getThisTitle",
        "tag.",
        "PID",
        "easily",
        "navigation",
        "body",
        "**Methods:**",
        "care",
        "-",
        "`setThisTitle(String)`:",
        "`setParent(Tag)`:",
        "pages.",
        "allowing",
        "page",
        "thisPage",
        "title",
        "`parent`",
        "make",
        "bottom",
        "`pageURLs[]`:",
        "`Tag`",
        "patient",
        "URLs",
        "Java",
        "`doStartTag()`:",
        "HTML",
        "represents",
        "`parent`:",
        "two",
        "code",
        "`getThisTitle()`:",
        "array",
        "different",
        "health",
        "sure",
        "class,",
        "page.",
        "pageTitles",
        "doStartTag",
        "display",
        "`pageContext`:",
        "represent",
        "called",
        "pages",
        "resources",
        "`pageTitles[]`:",
        "quick",
        "`PageContext`",
        "setParent",
        "care.",
        "reference",
        "PatientNavigation",
        "pageContext",
        "returns",
        "names",
        "add",
        "**Attributes:**",
        "given",
        "class:",
        "create",
        "allows",
        "access",
        "pageURLs",
        "content.",
        "accepts",
        "helps",
        "`thisTitle`",
        "doEndTag",
        "health.",
        "getParent",
        "`doEndTag()`:",
        "new",
        "instance",
        "screen.",
        "`release()`:",
        "summary",
        "`setPageContext(PageContext)`:",
        "setPageContext",
        "method",
        "string",
        "Andy",
        "release",
        "`thisTitle`:",
        "`getParent()`:",
        "class",
        "JSP",
        "started.",
        "current",
        "patients",
        "writes",
        "ended.",
        "**Class",
        "**Purpose:**",
        "gets",
        "used",
        "bar",
        "page,",
        "interact",
        "arrays,",
        "provide",
        "tag",
        "sets",
        "related",
        "attribute.",
        "`pageContext`",
        "bar."
    ],
    "StateSelect": [
        "JavaServer",
        "adds",
        "Sets",
        "@author",
        "`getName()`:",
        "parent",
        "{@link",
        "tag.",
        "name",
        "selected",
        "body",
        "**Methods:**",
        "`setParent(Tag)`:",
        "object",
        "also",
        "states",
        "`setName(String)`:",
        "dropdown",
        "*",
        "setName",
        "HTML",
        "setValue",
        "`doStartTag()`:",
        "prevent",
        "value",
        "options",
        "`value`:",
        "state",
        "doStartTag",
        "provided",
        "`SKIP_BODY`",
        "resources",
        "Also",
        "setParent",
        "held",
        "pageContext",
        "returns",
        "select",
        "set",
        "**Attributes:**",
        "value.",
        "class:",
        "create",
        "based",
        "dynamically",
        "`StateSelect`",
        "`name`:",
        "list",
        "selects",
        "nothing",
        "doEndTag",
        "currently",
        "getParent",
        "`doEndTag()`:",
        "@see",
        "Releases",
        "`release()`:",
        "summary",
        "`setPageContext(PageContext)`:",
        "setPageContext",
        "Andy",
        "release",
        "`getParent()`:",
        "class",
        "Pages",
        "JSP",
        "`getValue()`:",
        "(JSP)",
        "`setValue(String)`:",
        "current",
        "getName",
        "Returns",
        "**Class",
        "generates",
        "state.",
        "PageContext",
        "setting",
        "attribute",
        "used",
        "State}",
        "page,",
        "states,",
        "tag",
        "Purpose:**",
        "enum.",
        "`State`",
        "sets",
        "Initializes",
        "evaluated.",
        "getValue"
    ],
    "AddPatientValidator": [
        "adding",
        "patient",
        "AddPatientValidator",
        "standards.",
        "records",
        "**Attributes:**",
        "summary:",
        "class",
        "constructor",
        "certain",
        "p",
        "ensure",
        "user",
        "fields.",
        "address,",
        "validator",
        "PatientBean",
        "parameters",
        "@author",
        "added",
        "Default",
        "patients",
        "system",
        "hospital",
        "database.",
        "would",
        "fields",
        "AddPatientAction}.",
        "{@link",
        "**Purpose:**",
        "check",
        "**Use",
        "email",
        "checks",
        "found.",
        "complete",
        "Validates",
        "**Methods:**",
        "application",
        "example,",
        "use",
        "errors",
        "explicitly",
        "FormValidationException",
        "used",
        "expects",
        "object",
        "new",
        "**Class:**",
        "Case:**",
        "defined",
        "accurate",
        "throws",
        "stored",
        "`AddPatientValidator()`:",
        "meet",
        "p)`:",
        "fields,",
        "name,",
        "None",
        "patient,",
        "specifically",
        "checking",
        "`validate(PatientBean",
        "validate",
        "first",
        "Andy",
        "object,",
        "last",
        "may",
        "*"
    ],
    "AddPersonnelValidator": [
        "**Methods**:",
        "initializes",
        "Java",
        "**Purpose**:",
        "Name**:",
        "valid",
        "class",
        "adds",
        "constructor",
        "p",
        "exception.",
        "given",
        "class:",
        "properties",
        "`AddPersonnelValidator`",
        "validator",
        "@author",
        "AddPersonnelValidator",
        "methods.",
        "validates",
        "according",
        "errors,",
        "`AddPatientAction`",
        "formats.",
        "**Class",
        "**Attributes**:",
        "AddPatientAction}.",
        "{@link",
        "validator.",
        "class,",
        "list",
        "validation",
        "email",
        "personnel",
        "checks",
        "implies",
        "ensures",
        "custom",
        "extends",
        "bean",
        "`ErrorList`.",
        "`AddPersonnelValidator()`:",
        "default",
        "personnel's",
        "errors",
        "objects.",
        "specific",
        "used",
        "`PersonnelBean`",
        "contains",
        "object",
        "email,",
        "fails.",
        "inherits",
        "format",
        "throws",
        "summary",
        "p)`:",
        "method",
        "name,",
        "`validate(PersonnelBean",
        "validate",
        "first",
        "Andy",
        "last",
        "`BeanValidator<PersonnelBean>`",
        "`FormValidationException`",
        "*"
    ],
    "AdverseEventValidator": [
        "+",
        "(bean",
        "responsible",
        "fails)",
        "`FormValidationException`",
        "`AdverseEventValidator()`",
        "**Attributes:**",
        "adverse",
        "class",
        "adds",
        "\"comment\"",
        "comments",
        "Throws",
        "ensure",
        "class:",
        "(list",
        "need",
        "validating",
        "validated)",
        "errors)",
        "b",
        "Checks",
        "{@link",
        "**Purpose:**",
        "bean,",
        "list",
        "validation",
        "`AdverseEventBean`",
        "`validate(AdverseEventBean",
        "AdverseEventAction}",
        "`ErrorList`",
        "**Methods:**",
        "bean",
        "errors",
        "specific",
        "error",
        "used",
        "scenario",
        "(default",
        "`AdverseEventValidator`",
        "field.",
        "correct.",
        "format",
        "provide",
        "constructor)",
        "throws",
        "summary",
        "event",
        "specifically",
        "checking",
        "object,",
        "(method",
        "conform",
        "validate",
        "b)`",
        "Validates",
        "field",
        "format,",
        "*"
    ],
    "AllergyBeanValidator": [
        "+",
        "case",
        "adding",
        "act",
        "**Attributes:**",
        "ErrorList:",
        "class",
        "adds",
        "Validator",
        "given",
        "ensure",
        "AllergyBean.",
        "EditOfficeVisitAction",
        "validator",
        "AllergyBean:",
        "m)`:",
        "@author",
        "code",
        "validating",
        "meets",
        "m",
        "Name:**",
        "**Class",
        "correctly",
        "{@link",
        "list.",
        "**Purpose:**",
        "list",
        "validation",
        "map",
        "checks",
        "process.",
        "errors.",
        "performs",
        "EditOfficeVisitAction}",
        "**Methods:**",
        "bean",
        "use",
        "default",
        "formatted",
        "-",
        "allergy",
        "validated.",
        "used",
        "error",
        "object",
        "new",
        "empty,",
        "FormValidationException.",
        "required",
        "store",
        "valid,",
        "description.",
        "format",
        "description",
        "`AllergyBeanValidator()`:",
        "constructor.",
        "throws",
        "system.",
        "AllergyBeanValidator",
        "summary",
        "method",
        "`validate(AllergyBean",
        "rules",
        "validate",
        "added",
        "Andy",
        "requirement:",
        "succeed,"
    ],
    "ApptBeanValidator": [
        "found,",
        "ApptBeanValidator",
        "responsible",
        "formats",
        "**Attributes:**",
        "class",
        "empty.",
        "given",
        "class:",
        "validating",
        "validates",
        "according",
        "formats.",
        "Name:**",
        "**Class",
        "**Purpose:**",
        "`validate(ApptBean",
        "rules.",
        "list",
        "`ErrorList`",
        "**Methods:**",
        "bean",
        "`ApptBean`",
        "bean)`:",
        "errors",
        "specific",
        "object's",
        "object",
        "attributes",
        "creates",
        "`ApptBeanValidator`",
        "throws",
        "summary",
        "method",
        "rules",
        "None",
        "checking",
        "validate",
        "`FormValidationException`",
        "*"
    ],
    "ApptTypeBeanValidator": [
        "+",
        "a)`:",
        "ErrorList",
        "ApptTypeBeanValidator",
        "**Attributes:**",
        "class",
        "adds",
        "attributes,",
        "given",
        "ensure",
        "class:",
        "Summary:**",
        "validator",
        "meets",
        "type",
        "validates",
        "**Class",
        "**Purpose:**",
        "work",
        "Use",
        "appointment",
        "name",
        "Case",
        "implies",
        "extends",
        "errors.",
        "**Methods:**",
        "BeanValidator<ApptTypeBean>",
        "purpose,",
        "bean",
        "direct",
        "constraints.",
        "objects",
        "captures",
        "FormValidationException",
        "objects.",
        "error",
        "used",
        "object",
        "`validate(ApptTypeBean",
        "duration",
        "ApptTypeBean",
        "required",
        "attributes.",
        "format",
        "messages",
        "system.",
        "throws",
        "summary",
        "meet",
        "method",
        "iTrust",
        "However,",
        "validate",
        "correct",
        "methods",
        "Requirements:",
        "ensures",
        "*"
    ],
    "BeanValidator": [
        "message",
        "field,",
        "Summary:**",
        "boolean",
        "strings,",
        "@author",
        "validators",
        "checkInt",
        "Name:**",
        "`BeanValidator<T>`",
        "utility",
        "name",
        "validation",
        "checks",
        "longValue",
        "provides",
        "data,",
        "**Methods:**",
        "int",
        "checkDouble",
        "Specify",
        "entire",
        "range",
        "Requirements:**",
        "number",
        "phone",
        "range.",
        "throws",
        "it's",
        "3.",
        "1.",
        "4.",
        "ValidationFormat",
        "6.",
        "format,",
        "Long",
        "upper);`:",
        "isNullable);`:",
        "gen",
        "None.",
        "validating",
        "checkInt(String",
        "value",
        "different",
        "beans.",
        "`abstract",
        "various",
        "5.",
        "upper,",
        "specific",
        "types",
        "name,",
        "returns",
        "validate(T",
        "validate",
        "checkBoolean",
        "gender",
        "`String",
        "value,",
        "**Attributes:**",
        "gen,",
        "given",
        "formatting",
        "type",
        "8.",
        "isNullable",
        "@param",
        "bean,",
        "**Use",
        "Abstract",
        "Case",
        "birth",
        "must",
        "\"true\"",
        "subclassed",
        "checkDouble(String",
        "date",
        "abstract",
        "lower,",
        "booleans,",
        "value);`:",
        "integer",
        "valid.",
        "long",
        "Double",
        "<T>",
        "Bean",
        "doubleValue",
        "format",
        "longValue,",
        "checkGender(String",
        "method",
        "2.",
        "checkGender",
        "string",
        "Andy",
        "void",
        "lower",
        "Gender",
        "valid",
        "class",
        "upper",
        "`validate`",
        "7.",
        "doubles,",
        "checkFormat(String",
        "implemented",
        "String",
        "validated",
        "values",
        "**Class",
        "doubleValue,",
        "**Purpose:**",
        "public",
        "bean",
        "double",
        "longs,",
        "used",
        "error",
        "enum",
        "checkFormat",
        "FormValidationException;`:",
        "field.",
        "particular",
        "provide",
        "checkBoolean(String",
        "logic",
        "subclasses",
        "bean.",
        "checking",
        "bean)",
        "field",
        "methods",
        "\"false\""
    ],
    "DiagnosisBeanValidator": [
        "found,",
        "case",
        "designed",
        "initializes",
        "Java",
        "requirement",
        "ErrorList",
        "BeanValidator",
        "**Attributes:**",
        "class",
        "processing",
        "constructor",
        "medical",
        "given",
        "user",
        "need",
        "Here's",
        "further.",
        "code:",
        "code",
        "@author",
        "codes",
        "validates",
        "DiagnosisBean",
        "validated",
        "Name:**",
        "**Class",
        "**Purpose:**",
        "checks",
        "Validates",
        "along",
        "extends",
        "input",
        "application,",
        "**Methods:**",
        "example,",
        "class.",
        "uses",
        "use",
        "default",
        "errors",
        "-",
        "FormValidationException",
        "object.",
        "used",
        "snippet.",
        "checkFormat",
        "attributes",
        "FormValidationException.",
        "successfully.",
        "defined",
        "d",
        "**Default",
        "format",
        "description.",
        "ICD9CM",
        "throws",
        "**validate(DiagnosisBean",
        "summary",
        "descriptions",
        "classes",
        "method",
        "corresponding",
        "descriptions.",
        "DiagnosisBeanValidator",
        "returns",
        "Constructor:**",
        "validate",
        "method,",
        "Andy",
        "explicit",
        "d):**"
    ],
    "DrugInteractionValidator": [
        "+",
        "found,",
        "bean's",
        "**Attributes:**",
        "class",
        "`validate`",
        "constructor",
        "DrugInteractionAction}",
        "containing",
        "Throws",
        "interaction",
        "given",
        "class:",
        "properties",
        "(specifically",
        "Default",
        "thrown.",
        "drug",
        "method.",
        "exception",
        "{@link",
        "**Purpose:**",
        "bean,",
        "list",
        "validation",
        "code,",
        "fails,",
        "*",
        "process.",
        "extends",
        "**Methods:**",
        "\"description\").",
        "`DrugInteractionValidator()`:",
        "`validate(DrugInteractionBean",
        "errors",
        "explicitly",
        "used",
        "error",
        "`BeanValidator`",
        "throwing",
        "object",
        "takes",
        "fails.",
        "parameter",
        "`DrugInteractionBean`",
        "\"FirstDrug\",",
        "d",
        "format",
        "mentioned",
        "summary",
        "found",
        "d)`:",
        "None",
        "specifically",
        "checking",
        "object,",
        "validate",
        "Validates",
        "`DrugInteractionValidator`",
        "`FormValidationException`",
        "\"SecondDrug\","
    ],
    "EditOfficeVisitValidator": [
        "visit",
        "correctness",
        "form",
        "fields.",
        "boolean",
        "checks,",
        "@author",
        "instructions.",
        "{@link",
        "updating",
        "validation",
        "toggle",
        "checks",
        "found.",
        "**Methods:**",
        "object",
        "range",
        "Requirements:**",
        "date,",
        "start",
        "`FormValidationException`",
        "*",
        "patient",
        "`EditOfficeVisitValidator`",
        "ensure",
        "thrown.",
        "value",
        "validatePrescription",
        "visit.",
        "HCP",
        "various",
        "input",
        "data",
        "provided",
        "errors",
        "visit,",
        "form,",
        "(default",
        "empty,",
        "correctness.",
        "flag",
        "hospital",
        "validation,",
        "fields,",
        "returns",
        "validate",
        "dosage,",
        "prescription",
        "**Attributes:**",
        "including",
        "class:",
        "end",
        "allows",
        "office",
        "list",
        "**Use",
        "Case",
        "`ErrorList`",
        "EditOfficeVisitAction}",
        "date",
        "`validatePrescription`:",
        "Used",
        "`EditOfficeVisitForm`",
        "required",
        "main",
        "`false`).",
        "format",
        "summary",
        "dates,",
        "method",
        "form)`:",
        "Andy",
        "prescription-related",
        "valid",
        "whether",
        "`validatePrescription`",
        "class",
        "users",
        "`EditOfficeVisitAction`.",
        "indicating",
        "meets",
        "fields",
        "**Purpose:**",
        "`validate(EditOfficeVisitForm",
        "performs",
        "used",
        "error",
        "ID,",
        "rules",
        "specifically"
    ],
    "EMailValidator": [
        "Java",
        "message",
        "BeanValidator",
        "**Attributes:**",
        "class",
        "constructor",
        "`EMailValidator()`",
        "class:",
        ":",
        "thrown.",
        "messages.",
        "m",
        "exception",
        "**Purpose:**",
        "class,",
        "address.",
        "list",
        "validation",
        "email",
        "checks",
        "fails,",
        "body",
        "succeeds,",
        "extends",
        "input",
        "performs",
        "**Methods:**",
        "arguments",
        "default",
        "contains",
        "FormValidationException",
        "used",
        "error",
        "validation.",
        "object",
        "instance",
        "take",
        "takes",
        "(it",
        "perform",
        "variables)",
        "MessageBean",
        "initialization.",
        "m)`",
        "format",
        "constructor.",
        "throws",
        "summary",
        "method",
        "None",
        "`validate(MessageBean",
        "adheres",
        "validate",
        "EMailValidator",
        "*"
    ],
    "HealthRecordFormValidator": [
        "functionality",
        "containing",
        "Validator",
        "form",
        "@author",
        "smoking",
        "understand",
        "data.",
        "formats.",
        "Name:**",
        "{@link",
        "checks",
        "`validate(HealthRecordForm",
        "**Methods:**",
        "blood",
        "`HealthRecordFormValidator`",
        "allowing",
        "Health",
        "expected",
        "throws",
        "`EditHealthHistoryAction`",
        "format,",
        "`FormValidationException`",
        "*",
        "found,",
        "case",
        "adding",
        "mapping",
        "cholesterol",
        "certain",
        "ensure",
        "validator",
        "code",
        "purpose",
        "health",
        "class,",
        "EditHealthHistoryAction}",
        "various",
        "input",
        "data",
        "purpose,",
        "errors",
        "captures",
        "correctness.",
        "accurate",
        "developers",
        "None",
        "validate",
        "forms,",
        "ensures",
        "formats",
        "**Attributes:**",
        "attributes,",
        "information",
        "given",
        "class:",
        "useful",
        "History,",
        "ensuring",
        "**Use",
        "class.",
        "bean)`:",
        "enter",
        "Case:**",
        "summary",
        "conform",
        "Andy",
        "range,",
        "class",
        "users",
        "meets",
        "forms",
        "consistent",
        "levels,",
        "pressure,",
        "**Class",
        "fields",
        "status",
        "ranges.",
        "**Purpose:**",
        "`HealthRecordForm`",
        "Basic",
        "criteria",
        "requirement,",
        "bean",
        "`ErrorList`.",
        "use",
        "weight,",
        "used",
        "height,",
        "specifically",
        "bean.",
        "checking",
        "Validates",
        "methods"
    ],
    "HospitalBeanValidator": [
        "Java",
        "act",
        "**Attributes:**",
        "formats",
        "class",
        "overridden",
        "constructor",
        "beans",
        "ensure",
        "class:",
        "ID",
        "validating",
        "@author",
        "purpose",
        "Name:**",
        "**Class",
        "{@link",
        "**Purpose:**",
        "rules.",
        "validation",
        "name",
        "checks",
        "Validates",
        "*",
        "input",
        "data",
        "HospitalBeanValidator",
        "**Methods:**",
        "performs",
        "class.",
        "default",
        "specific",
        "fails.",
        "perform",
        "format",
        "throws",
        "UpdateHospitalListAction}",
        "summary",
        "h",
        "hospital",
        "method",
        "None",
        "`HospitalBeanValidator()`:",
        "bean.",
        "adheres",
        "`validate(HospitalBean",
        "beans,",
        "validate",
        "Andy",
        "`FormValidationException`",
        "h)`:"
    ],
    "LabProcedureValidator": [
        "**Key",
        "message",
        "FormValidationException}",
        "Commentary,",
        "depending",
        "properties",
        "boolean",
        "{@link",
        "validation",
        "name",
        "Responsibilities:**",
        "checks",
        "found.",
        "match",
        "**Methods:**",
        "objects",
        "property",
        "FormValidationException",
        "validated.",
        "object",
        "throws",
        "Status,",
        "ValidationFormat",
        "format,",
        "succeed,",
        "*",
        "case",
        "act",
        "LabProcedureBean",
        "occur",
        "question,",
        "validating",
        "thrown.",
        "value",
        "Performs",
        "`checkFormat(String",
        "occur.",
        "null",
        "non-nullable",
        "errors",
        "specific",
        "LabProcedureValidator",
        "adhere",
        "None",
        "name,",
        "returns",
        "validate",
        "ensures",
        "value,",
        "isNullable)`:",
        "requirement",
        "formats",
        "**Attributes:**",
        "Results,",
        "class:",
        "protected",
        "type",
        "isNullable",
        "@param",
        "Throw",
        "specified",
        "map",
        "single",
        "Check",
        "format.",
        "`validate(LabProcedureBean",
        "empty",
        "format",
        "summary",
        "method",
        "involves",
        "Validate",
        "class",
        "p",
        "String",
        "b",
        "varies",
        "values",
        "exception",
        "**Purpose:**",
        "validator.",
        "Rights)",
        "bean",
        "use",
        "objects.",
        "used",
        "error",
        "(LOINC,",
        "checkFormat",
        "b)`:",
        "nullable.",
        "Validates"
    ],
    "LOINCBeanValidator": [
        "case",
        "Java",
        "**Attributes:**",
        "class",
        "Validator",
        "generic",
        "correctness",
        "medical",
        "given",
        "class:",
        "m)`:**",
        "healthcare",
        "validating",
        "`LOINCBeanValidator`",
        "(e.g.,",
        "type",
        "code",
        "values",
        "m",
        "`LabProcedureCode`,",
        "declared,",
        "fields",
        "etc.).",
        "**Purpose:**",
        "validator.",
        "null",
        "`LOINCbean`",
        "validation",
        "map",
        "checks",
        "`Component`,",
        "fails,",
        "`FormValidationException`.",
        "various",
        "application.",
        "`KindOfProperty`,",
        "requirement,",
        "**Methods:**",
        "provided",
        "use",
        "objects",
        "explicitly",
        "objects.",
        "validated.",
        "used",
        "specific",
        "object",
        "**`validate(LOINCbean",
        "performing",
        "**Default",
        "format",
        "accuracy",
        "throws",
        "summary",
        "1.",
        "None",
        "2.",
        "checking",
        "Constructor:**",
        "validate",
        "LOINCbean",
        "Validates",
        "Initializes"
    ],
    "MailValidator": [
        "calls",
        "isValid()",
        "Java-based",
        "**Attributes:**",
        "specializes",
        "class",
        "whether",
        "result.",
        "constructor",
        "form",
        "instantiated",
        "class:",
        "user",
        "criteria.",
        "fields.",
        "MailValidator",
        "validating",
        "validator",
        "addresses.",
        "parameters",
        "boolean",
        "validates",
        "indicating",
        "processes.",
        "meets",
        "validateEmail",
        "**Purpose:**",
        "**Use",
        "validation",
        "EmailValidator",
        "email",
        "Case",
        "fails,",
        "custom",
        "extends",
        "email):**",
        "application.",
        "**Methods:**",
        "itself,",
        "default",
        "implementation.",
        "integrated",
        "used",
        "called",
        "instance",
        "addresses",
        "attributes",
        "FormValidationException.",
        "**validateEmail(String",
        "creates",
        "Requirements:**",
        "submission",
        "registration",
        "address",
        "**Default",
        "constructor.",
        "throws",
        "determine",
        "summary",
        "1.",
        "classes",
        "method",
        "2.",
        "successful.",
        "require",
        "validation,",
        "returns",
        "Constructor:**",
        "method,",
        "validate"
    ],
    "MedicationBeanValidator": [
        "`MedicationBeanValidator`",
        "Java",
        "`validate(MedicationBean",
        "**Attributes:**",
        "responsibilities",
        "class",
        "containing",
        "terms",
        "given",
        "class:",
        "Note:",
        "Summary:**",
        "m)`:",
        "@author",
        "code",
        "purpose",
        "messages.",
        "m",
        "formats.",
        "parameter)",
        "**Class",
        "fields",
        "{@link",
        "**Purpose:**",
        "validator,",
        "validation",
        "`MedicationBean`",
        "checks",
        "Validates",
        "fails,",
        "ensures",
        "application.",
        "`ErrorList`",
        "data",
        "**Methods:**",
        "bean",
        "default",
        "objects",
        "object.",
        "specific",
        "used",
        "error",
        "ND",
        "validation.",
        "constructor,",
        "also",
        "format",
        "description",
        "(type",
        "throws",
        "summary",
        "follow",
        "initialize",
        "beans,",
        "UpdateNDCodeListAction}",
        "Andy",
        "validate",
        "`FormValidationException`",
        "*"
    ],
    "MessageValidator": [
        "MessageValidator",
        "likely",
        "designed",
        "visit",
        "message",
        "**Attributes:**",
        "isNotNull)`:",
        "class",
        "field,",
        "class:",
        "EditOfficeVisitAction",
        "subject.",
        "boolean",
        "implemented",
        "@author",
        "code",
        "Returns",
        "String",
        "value",
        "office",
        "Name:**",
        "**Class",
        "{@link",
        "**Purpose:**",
        "`checkFormat(String",
        "updating",
        "matches",
        "specified",
        "visit.",
        "update",
        "found.",
        "snippet,",
        "body",
        "checks",
        "Validates",
        "*",
        "input",
        "EditOfficeVisitAction}",
        "**Methods:**",
        "subject",
        "mBean",
        "errors",
        "visit,",
        "format.",
        "FormValidationException",
        "used",
        "FormValidationException.",
        "Used",
        "format",
        "throws",
        "summary",
        "mBean)`:",
        "found",
        "validation,",
        "None",
        "ValidationFormat",
        "checking",
        "`validate(MessageBean",
        "validate",
        "Andy",
        "field",
        "format,",
        "value,"
    ],
    "PatientValidator": [
        "patient's",
        "functionality",
        "Based",
        "invalid",
        "@author",
        "understand",
        "data.",
        "Name:**",
        "card",
        "{@link",
        "death,",
        "rules.",
        "checks",
        "pointers:",
        "**Methods:**",
        "structural",
        "allowing",
        "EditPatientAction.",
        "also",
        "number",
        "throws",
        "Mapping:**",
        "meet",
        "predefined",
        "p)`:",
        "`validate(PatientBean",
        "*",
        "found,",
        "case",
        "patient",
        "Java",
        "mapping",
        "certain",
        "them,",
        "code",
        "purpose",
        "summary,",
        "class,",
        "null",
        "various",
        "real-world",
        "application.",
        "input",
        "errors",
        "validation,",
        "None",
        "name,",
        "fields,",
        "validate",
        "ensures",
        "set",
        "designed",
        "**Attributes:**",
        "including",
        "information",
        "given",
        "class:",
        "requirements,",
        "catches",
        "Requirements",
        "ensuring",
        "bean,",
        "**Use",
        "map",
        "Case",
        "ignores",
        "Check",
        "class.",
        "date",
        "type,",
        "EditPatientAction}",
        "following",
        "required",
        "format",
        "birth,",
        "summary",
        "information,",
        "method",
        "Andy",
        "last",
        "CreditCardValidator",
        "PatientValidator",
        "Validate",
        "class",
        "`validate`",
        "requirements:",
        "p",
        "information:",
        "meets",
        "Ignore",
        "validates",
        "errors:",
        "**Class",
        "**Purpose:**",
        "credit",
        "using",
        "handle",
        "NullPointerExceptions",
        "requirements.",
        "use",
        "used",
        "attributes",
        "FormValidationException.",
        "primary",
        "found",
        "specifically",
        "bean.",
        "first",
        "Validates"
    ],
    "PersonnelValidator": [
        "number,",
        "PersonnelValidator",
        "street",
        "@author",
        "{@link",
        "validation",
        "edit",
        "email",
        "checks",
        "EditPersonnelAction}",
        "**Methods:**",
        "object",
        "address",
        "phone",
        "throws",
        "meet",
        "pattern",
        "**validate**:",
        "operates",
        "*",
        "found,",
        "case",
        "initializes",
        "city,",
        "state,",
        "validating",
        "code",
        "etc.)",
        "First",
        "input",
        "data",
        "errors",
        "object.",
        "specific",
        "store",
        "name,",
        "returns",
        "validate",
        "action.",
        "ErrorList",
        "**Attributes:**",
        "given",
        "class:",
        "(e.g.,",
        "attributes:",
        "ensuring",
        "check",
        "bean,",
        "personnel",
        "map",
        "code,",
        "uses",
        "contains",
        "following",
        "format",
        "own,",
        "summary",
        "method",
        "**default",
        "Andy",
        "last",
        "+",
        "class",
        "constructor**:",
        "constructor",
        "p",
        "1,",
        "PersonnelBean",
        "**Purpose:**",
        "ValidationFormat.ADDRESS,",
        "zip",
        "errors.",
        "requirement,",
        "requirements.",
        "use",
        "default",
        "attribute",
        "checked",
        "used",
        "takes",
        "attributes",
        "FormValidationException.",
        "ValidationFormat.NAME,",
        "found",
        "object,",
        "Validates"
    ],
    "ProcedureBeanValidator": [
        "responsible",
        "procedures",
        "**Attributes:**",
        "formats",
        "class",
        "(represented",
        "constructor",
        "generic",
        "p",
        "`ProcedureBeanValidator()`:",
        "class:",
        "validating",
        "@author",
        "type",
        "Default",
        "based",
        "code",
        "`<ProcedureBean>`)",
        "validated",
        "{@link",
        "**Purpose:**",
        "validation",
        "code,",
        "Validates",
        "**Methods:**",
        "specific",
        "ND",
        "codes.",
        "object",
        "fails.",
        "(CPT",
        "`ProcedureBean`",
        "`validate(ProcedureBean",
        "throws",
        "description)",
        "summary",
        "`ProcedureBeanValidator`",
        "p)`:",
        "specifically",
        "object,",
        "validate",
        "UpdateNDCodeListAction}",
        "Andy",
        "`FormValidationException`",
        "*"
    ],
    "RemoteMonitoringDataBeanValidator": [
        "level).",
        "Validator",
        "internal",
        "Name:**",
        "{@link",
        "checks",
        "**Methods:**",
        "blood",
        "object",
        "numeric",
        "processed",
        "constructor.",
        "throws",
        "AddRemoteMonitoringDataAction}",
        "`RemoteMonitoringDataBean`",
        "diastolic",
        "glucose",
        "`FormValidationException`",
        "*",
        "case",
        "adding",
        "patient",
        "Java",
        "(all",
        "fail,",
        "ensure",
        "validator",
        "m)`:",
        "validating",
        "purpose",
        "code",
        "processing.",
        "help",
        "level.",
        "monitoring",
        "remote",
        "data",
        "None",
        "validate",
        "correct",
        "variables",
        "action.",
        "RemoteMonitoringDataBeanValidator",
        "**Attributes:**",
        "given",
        "(e.g.,",
        "consistency.",
        "m",
        "list",
        "map",
        "systolic",
        "class)",
        "new",
        "format",
        "summary",
        "added",
        "either",
        "class",
        "code:",
        "`AddRemoteMonitoringDataAction`",
        "values",
        "pressure,",
        "**Class",
        "**Purpose:**",
        "pressure",
        "integrity",
        "custom",
        "errors.",
        "requirement,",
        "`RemoteMonitoringDataBeanValidator()`:",
        "`validate(RemoteMonitoringDataBean",
        "use",
        "default",
        "inherited",
        "used",
        "`BeanValidator`",
        "attributes",
        "database",
        "stored",
        "checking",
        "Validates"
    ],
    "SecurityQAValidator": [
        "responsible",
        "part",
        "Summary:**",
        "question",
        "@author",
        "Name:**",
        "{@link",
        "doesn't",
        "validation",
        "checks",
        "process.",
        "match",
        "**Methods:**",
        "properly",
        "information.",
        "object",
        "Requirements:**",
        "answer.",
        "throws",
        "states",
        "requirement:",
        "`FormValidationException`",
        "*",
        "case",
        "user's",
        "reset",
        "`BeanValidator<SecurityQA>`,",
        "other.",
        "type.",
        "validator",
        "validating",
        "code",
        "others",
        "null",
        "various",
        "formatted",
        "account",
        "errors",
        "specific",
        "fails.",
        "(the",
        "validate",
        "ensures",
        "set",
        "**Attributes:**",
        "given",
        "ensuring",
        "**Use",
        "security",
        "map",
        "Case",
        "thereby",
        "extends",
        "other,",
        "bean)`:",
        "empty",
        "required",
        "format",
        "summary",
        "following:",
        "method",
        "specialization",
        "Andy",
        "`SecurityQA`",
        "+",
        "SetSecurityQuestionAction}",
        "class",
        "generic",
        "Throws",
        "suggesting",
        "`validate(SecurityQA",
        "password,",
        "user",
        "Note:",
        "answers",
        "validated)",
        "password",
        "**Class",
        "`SecurityQAValidator`",
        "**Purpose:**",
        "answer",
        "integrity",
        "Validates",
        "confirm",
        "bean",
        "use",
        "used",
        "answers.",
        "found",
        "follow",
        "questions"
    ],
    "SurveySearchValidator": [
        "case",
        "searching",
        "Java",
        "results.",
        "**Attributes:**",
        "class",
        "bean)**:",
        "Validator",
        "given",
        "ensure",
        "'Zip",
        "user",
        "(HCP)",
        "Code'",
        "code",
        "based",
        "system",
        "entered",
        "Healthcare",
        "**Purpose:**",
        "class,",
        "zip",
        "validation",
        "survey",
        "checks",
        "HCP",
        "**validate(SurveyResultBean",
        "SurveySearchValidator:",
        "performs",
        "**Methods:**",
        "bean",
        "provided",
        "use",
        "-",
        "FormValidationException",
        "used",
        "searches",
        "SurveySearchValidator",
        "valid.",
        "fails.",
        "results",
        "format",
        "throws",
        "Code",
        "summary",
        "Professional",
        "method",
        "None",
        "SurveyResultBean.",
        "validate",
        "Zip",
        "correct"
    ],
    "ValidationFormat": [
        "formats",
        "Enum",
        "validation",
        "Andy",
        "fit",
        "regex.",
        "@author"
    ]
}